{"version":3,"sources":["webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/source/XYZ.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/DataTile.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/webgl/TileTexture.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/renderer/webgl/TileLayer.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/webgl/PaletteTexture.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/style/expressions.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/layer/WebGLTile.js"],"names":["extendStatics","__extends","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","this","constructor","create","XYZ","_super","opt_options","_this","options","interpolate","undefined","imageSmoothing","projection","tileGrid","extent","maxResolution","maxZoom","minZoom","tileSize","attributions","cacheSize","crossOrigin","opaque","reprojectionErrorThreshold","tileLoadFunction","tilePixelRatio","tileUrlFunction","url","urls","wrapX","transition","attributionsCollapsible","zDirection","gutter_","gutter","getGutter","DataTile","state","TileState","IDLE","tileCoord","loader_","loader","data_","error_","size_","size","getSize","getData","getError","load","ERROR","LOADING","changed","self","then","data","LOADED","catch","error","Tile","bindAndConfigure","gl","texture","resampleFilter","LINEAR","NEAREST","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","uploadDataTexture","helper","bandCount","textureType","canInterpolate","getGL","Float32Array","FLOAT","getExtension","UNSIGNED_BYTE","format","bytesPerRow","byteLength","unpackAlignment","LUMINANCE","LUMINANCE_ALPHA","RGB","RGBA","Error","concat","oldUnpackAlignment","getParameter","UNPACK_ALIGNMENT","pixelStorei","texImage2D","pixelContext","TileTexture","tile","textures","handleTileChange_","bind","renderSize_","grid","getTileSize","NaN","helper_","coords","fromArray","flushBufferData","setTile","removeEventListener","EventType","CHANGE","length","loaded","getState","uploadTile_","ImageTile","image","getImage","Image","addEventListener","createTexture","push","uploadImageTexture","sourceTileSize","pixelSize","isFloat","pixelCount","DataType","Uint8Array","bytesPerElement","BYTES_PER_ELEMENT","Math","floor","textureCount","ceil","textureDataArrays","textureIndex","dataIndex","rowOffset","colCount","rowIndex","colIndex","dataValue","pixelIndex","bandIndex","textureData","dispatchEvent","disposeInternal","deleteBuffer","i","deleteTexture","getPixelData","renderCol","renderRow","canvas","renderWidth","renderHeight","sourceSize","sourceWidthWithoutGutter_1","sourceHeightWithoutGutter_1","sourceWidth_1","sourceHeight_1","sourceCol_1","sourceRow_1","data_1","DataView","bytesPerPixel","offset_1","buffer","slice","offset","document","createElement","width","height","getContext","clearRect","sourceWidthWithoutGutter","sourceHeightWithoutGutter","sourceCol","sourceRow","drawImage","getImageData","err","Uniforms","Attributes","attributeDescriptions","name","type","empty","depthForZ","z","addTileTextureToLookup","tileTexturesByZ","tileTexture","getRenderExtent","frameState","layerState","layerStatesArray","layerIndex","viewState","source","layer","getRenderSource","getWrapX","gridExtent","getTileGridForProjection","getExtent","getCacheKey","getKey","WebGLTileLayerRenderer","tileLayer","uniforms","renderComplete","tileTransform_","tempMat4_","tempTileRange_","TileRange","tempTileCoord_","tempSize_","program_","vertexShader_","vertexShader","fragmentShader_","fragmentShader","indices_","tileTextureCache_","LRUCache","paletteTextures_","paletteTextures","frameState_","reset","getProgram","afterHelperCreated","isDrawableTile_","getLayer","tileState","useInterimTilesOnError","getUseInterimTilesOnError","EMPTY","prepareFrameInternal","enqueueTiles","initialZ","tileSource","getGutterForProjection","tileSourceKey","wantedTiles","tileTextureCache","minZ","max","getPreload","getMinZoom","tileRange","getTileRangeForExtentAndZ","tileResolution","getResolution","x","minX","maxX","y","minY","maxY","cacheKey","containsKey","get","key","getTile","pixelRatio","interimTile","getInterimTile","set","tileQueueKey","tileQueue","isKeyQueued","enqueue","getTileCoordCenter","renderFrame","preRender","getZForResolution","resolution","nextExtent","targetZ","nextResolution","alphaLookup","uid","time","blend","tileTextures","ii","alpha","getAlpha","endTransition","tileCoordKey","findAltTiles_","parentZ","useProgram","prepareDraw","zs","keys","map","Number","sort","centerX","center","centerY","j","jj","tileZ","tileOrigin","getOrigin","tileWidthWithGutter","tileHeightWithGutter","aspectRatio","centerI","centerJ","tileScale","depth","tileTextures_1","tileCenterI","tileCenterJ","rotation","setUniformMatrixValue","mat4","bindBuffer","enableAttributes","textureSlot","textureProperty","uniformName","activeTexture","uniform1i","getUniformLocation","paletteIndex","paletteTexture","getTexture","animate","setUniformFloatValue","gutterExtent","getTileCoordExtent","setUniformFloatVec4","zoom","drawElements","finalizeDraw","dispatchPreComposeEvent","dispatchPostComposeEvent","getCanvas","canExpireCache","pop","dispose","postRenderFunctions","expireCache","postRender","pixel","coordinate","pixelToCoordinateTransform","layerExtent","sources","getSources","getTileCoordForCoordAndZ","col","row","altZ","getTileRangeForTileCoordAndZ","covered","removeHelper","forEach","clear","deleteProgram","PaletteTexture","texture_","ValueTypes","NUMBER","STRING","COLOR","BOOLEAN","NUMBER_ARRAY","ANY","NONE","Operators","getValueType","value","isArray","JSON","stringify","valueArr","every","v","operator","getReturnType","numberToGlsl","s","toString","indexOf","arrayToGlsl","array","join","getStringNumberEquivalent","context","string","stringLiteralsMap","expressionToGlsl","typeHint","toGlsl","color","valueType","stringToGlsl","c","assertNumber","assertNumbers","values","assertString","assertBoolean","assertArgsCount","args","count","assertArgsMinCount","assertArgsMaxCount","assertArgsEven","assertUniqueInferredType","types","uniformNameForVariable","variableName","attributes","inFragmentShader","variables","PALETTE_TEXTURE_ARRAY","index","colors","numColors","palette","candidate","length_1","paletteName","GET_BAND_VALUE_FUNC","getEqualOperator","getDecisionOperator","result","arg","band","functions","ifBlocks","colorIndex","textureName","bandExpression","xOffsetExpression","yOffsetExpression","min","parsedArgs","val","opt_typeHint","interpolation","outputType","input","exponent","stop1","output1","stop2","output2","fallback","match","output","assertArgsOdd","condition","parseStyle","style","pipeline","contrast","exposure","saturation","gamma","brightness","numVariables","_loop_1","uniformDeclarations","functionDefintions","WebGLTileLayer","sources_","renderedSource_","renderedResolution_","style_","cacheSize_","styleVariables_","addChangeListener","SOURCE","handleSourceUpdate_","getSource","getSourceState","setStyle","getSourceBandCount_","MAX_SAFE_INTEGER","createRenderer","parsedStyle","renderSources","layerRenderer","getRenderer","prepareFrame","render","target","rendered","ready","_loop_2","sourceState","onChange_1","altSources","filter","includes","updateStyleVariables","BaseTile"],"mappings":"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","file":"js/chunk-1ff31e76.3bee9182.js","sourcesContent":["/**\n * @module ol/source/XYZ\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileImage from './TileImage.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nvar XYZ = /** @class */ (function (_super) {\n    __extends(XYZ, _super);\n    /**\n     * @param {Options} [opt_options] XYZ options.\n     */\n    function XYZ(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var interpolate = options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n        if (options.interpolate !== undefined) {\n            interpolate = options.interpolate;\n        }\n        var projection = options.projection !== undefined ? options.projection : 'EPSG:3857';\n        var tileGrid = options.tileGrid !== undefined\n            ? options.tileGrid\n            : createXYZ({\n                extent: extentFromProjection(projection),\n                maxResolution: options.maxResolution,\n                maxZoom: options.maxZoom,\n                minZoom: options.minZoom,\n                tileSize: options.tileSize,\n            });\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            interpolate: interpolate,\n            opaque: options.opaque,\n            projection: projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n        return _this;\n    }\n    /**\n     * @return {number} Gutter.\n     */\n    XYZ.prototype.getGutter = function () {\n        return this.gutter_;\n    };\n    return XYZ;\n}(TileImage));\nexport default XYZ;\n//# sourceMappingURL=XYZ.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/DataTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n/**\n * Data that can be used with a DataTile.  For increased browser compatibility, use\n * Uint8Array instead of Uint8ClampedArray where possible.\n * @typedef {Uint8Array|Uint8ClampedArray|Float32Array|DataView} Data\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @property {function(): Promise<Data>} loader Data loader.\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {import('./size.js').Size} [size=[256, 256]] Tile size.\n * @api\n */\nvar DataTile = /** @class */ (function (_super) {\n    __extends(DataTile, _super);\n    /**\n     * @param {Options} options Tile options.\n     */\n    function DataTile(options) {\n        var _this = this;\n        var state = TileState.IDLE;\n        _this = _super.call(this, options.tileCoord, state, {\n            transition: options.transition,\n            interpolate: options.interpolate,\n        }) || this;\n        /**\n         * @type {function(): Promise<Data>}\n         * @private\n         */\n        _this.loader_ = options.loader;\n        /**\n         * @type {Data}\n         * @private\n         */\n        _this.data_ = null;\n        /**\n         * @type {Error}\n         * @private\n         */\n        _this.error_ = null;\n        /**\n         * @type {import('./size.js').Size}\n         * @private\n         */\n        _this.size_ = options.size || [256, 256];\n        return _this;\n    }\n    /**\n     * Get the tile size.\n     * @return {import('./size.js').Size} Tile size.\n     */\n    DataTile.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * Get the data for the tile.\n     * @return {Data} Tile data.\n     * @api\n     */\n    DataTile.prototype.getData = function () {\n        return this.data_;\n    };\n    /**\n     * Get any loading error.\n     * @return {Error} Loading error.\n     * @api\n     */\n    DataTile.prototype.getError = function () {\n        return this.error_;\n    };\n    /**\n     * Load not yet loaded URI.\n     * @api\n     */\n    DataTile.prototype.load = function () {\n        if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n            return;\n        }\n        this.state = TileState.LOADING;\n        this.changed();\n        var self = this;\n        this.loader_()\n            .then(function (data) {\n            self.data_ = data;\n            self.state = TileState.LOADED;\n            self.changed();\n        })\n            .catch(function (error) {\n            self.error_ = error;\n            self.state = TileState.ERROR;\n            self.changed();\n        });\n    };\n    return DataTile;\n}(Tile));\nexport default DataTile;\n//# sourceMappingURL=DataTile.js.map","/**\n * @module ol/webgl/TileTexture\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport DataTile from '../DataTile.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileState from '../TileState.js';\nimport WebGLArrayBuffer from './Buffer.js';\nimport { ARRAY_BUFFER, STATIC_DRAW } from '../webgl.js';\nimport { toSize } from '../size.js';\n/**\n * @param {WebGLRenderingContext} gl The WebGL context.\n * @param {WebGLTexture} texture The texture.\n * @param {boolean} interpolate Interpolate when resampling.\n */\nfunction bindAndConfigure(gl, texture, interpolate) {\n    var resampleFilter = interpolate ? gl.LINEAR : gl.NEAREST;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, resampleFilter);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, resampleFilter);\n}\n/**\n * @param {WebGLRenderingContext} gl The WebGL context.\n * @param {WebGLTexture} texture The texture.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image The image.\n * @param {boolean} interpolate Interpolate when resampling.\n */\nfunction uploadImageTexture(gl, texture, image, interpolate) {\n    bindAndConfigure(gl, texture, interpolate);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n}\n/**\n * @param {import(\"./Helper.js\").default} helper The WebGL helper.\n * @param {WebGLTexture} texture The texture.\n * @param {import(\"../DataTile.js\").Data} data The pixel data.\n * @param {import(\"../size.js\").Size} size The pixel size.\n * @param {number} bandCount The band count.\n * @param {boolean} interpolate Interpolate when resampling.\n */\nfunction uploadDataTexture(helper, texture, data, size, bandCount, interpolate) {\n    var gl = helper.getGL();\n    var textureType;\n    var canInterpolate;\n    if (data instanceof Float32Array) {\n        textureType = gl.FLOAT;\n        helper.getExtension('OES_texture_float');\n        var extension = helper.getExtension('OES_texture_float_linear');\n        canInterpolate = extension !== null;\n    }\n    else {\n        textureType = gl.UNSIGNED_BYTE;\n        canInterpolate = true;\n    }\n    bindAndConfigure(gl, texture, interpolate && canInterpolate);\n    var bytesPerRow = data.byteLength / size[1];\n    var unpackAlignment = 1;\n    if (bytesPerRow % 8 === 0) {\n        unpackAlignment = 8;\n    }\n    else if (bytesPerRow % 4 === 0) {\n        unpackAlignment = 4;\n    }\n    else if (bytesPerRow % 2 === 0) {\n        unpackAlignment = 2;\n    }\n    var format;\n    switch (bandCount) {\n        case 1: {\n            format = gl.LUMINANCE;\n            break;\n        }\n        case 2: {\n            format = gl.LUMINANCE_ALPHA;\n            break;\n        }\n        case 3: {\n            format = gl.RGB;\n            break;\n        }\n        case 4: {\n            format = gl.RGBA;\n            break;\n        }\n        default: {\n            throw new Error(\"Unsupported number of bands: \".concat(bandCount));\n        }\n    }\n    var oldUnpackAlignment = gl.getParameter(gl.UNPACK_ALIGNMENT);\n    gl.pixelStorei(gl.UNPACK_ALIGNMENT, unpackAlignment);\n    gl.texImage2D(gl.TEXTURE_2D, 0, format, size[0], size[1], 0, format, textureType, data);\n    gl.pixelStorei(gl.UNPACK_ALIGNMENT, oldUnpackAlignment);\n}\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar pixelContext = null;\nfunction createPixelContext() {\n    var canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    pixelContext = canvas.getContext('2d');\n}\n/**\n * @typedef {import(\"../DataTile.js\").default|ImageTile|ReprojTile} TileType\n */\n/**\n * @typedef {Object} Options\n * @property {TileType} tile The tile.\n * @property {import(\"../tilegrid/TileGrid.js\").default} grid Tile grid.\n * @property {import(\"../webgl/Helper.js\").default} helper WebGL helper.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n */\nvar TileTexture = /** @class */ (function (_super) {\n    __extends(TileTexture, _super);\n    /**\n     * @param {Options} options The tile texture options.\n     */\n    function TileTexture(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {TileType}\n         */\n        _this.tile;\n        /**\n         * @type {Array<WebGLTexture>}\n         */\n        _this.textures = [];\n        _this.handleTileChange_ = _this.handleTileChange_.bind(_this);\n        /**\n         * @type {import(\"../size.js\").Size}\n         * @private\n         */\n        _this.renderSize_ = toSize(options.grid.getTileSize(options.tile.tileCoord[0]));\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.gutter_ = options.gutter || 0;\n        /**\n         * @type {number}\n         */\n        _this.bandCount = NaN;\n        /**\n         * @type {import(\"../webgl/Helper.js\").default}\n         * @private\n         */\n        _this.helper_ = options.helper;\n        var coords = new WebGLArrayBuffer(ARRAY_BUFFER, STATIC_DRAW);\n        coords.fromArray([\n            0,\n            1,\n            1,\n            1,\n            1,\n            0,\n            0,\n            0,\n        ]);\n        _this.helper_.flushBufferData(coords);\n        /**\n         * @type {WebGLArrayBuffer}\n         */\n        _this.coords = coords;\n        _this.setTile(options.tile);\n        return _this;\n    }\n    /**\n     * @param {TileType} tile Tile.\n     */\n    TileTexture.prototype.setTile = function (tile) {\n        if (tile !== this.tile) {\n            if (this.tile) {\n                this.tile.removeEventListener(EventType.CHANGE, this.handleTileChange_);\n            }\n            this.tile = tile;\n            this.textures.length = 0;\n            this.loaded = tile.getState() === TileState.LOADED;\n            if (this.loaded) {\n                this.uploadTile_();\n            }\n            else {\n                if (tile instanceof ImageTile) {\n                    var image = tile.getImage();\n                    if (image instanceof Image && !image.crossOrigin) {\n                        image.crossOrigin = 'anonymous';\n                    }\n                }\n                tile.addEventListener(EventType.CHANGE, this.handleTileChange_);\n            }\n        }\n    };\n    TileTexture.prototype.uploadTile_ = function () {\n        var helper = this.helper_;\n        var gl = helper.getGL();\n        var tile = this.tile;\n        if (tile instanceof ImageTile || tile instanceof ReprojTile) {\n            var texture = gl.createTexture();\n            this.textures.push(texture);\n            this.bandCount = 4;\n            uploadImageTexture(gl, texture, tile.getImage(), tile.interpolate);\n            return;\n        }\n        var sourceTileSize = tile.getSize();\n        var pixelSize = [\n            sourceTileSize[0] + 2 * this.gutter_,\n            sourceTileSize[1] + 2 * this.gutter_,\n        ];\n        var data = tile.getData();\n        var isFloat = data instanceof Float32Array;\n        var pixelCount = pixelSize[0] * pixelSize[1];\n        var DataType = isFloat ? Float32Array : Uint8Array;\n        var bytesPerElement = DataType.BYTES_PER_ELEMENT;\n        var bytesPerRow = data.byteLength / pixelSize[1];\n        this.bandCount = Math.floor(bytesPerRow / bytesPerElement / pixelSize[0]);\n        var textureCount = Math.ceil(this.bandCount / 4);\n        if (textureCount === 1) {\n            var texture = gl.createTexture();\n            this.textures.push(texture);\n            uploadDataTexture(helper, texture, data, pixelSize, this.bandCount, tile.interpolate);\n            return;\n        }\n        var textureDataArrays = new Array(textureCount);\n        for (var textureIndex = 0; textureIndex < textureCount; ++textureIndex) {\n            var texture = gl.createTexture();\n            this.textures.push(texture);\n            var bandCount = textureIndex < textureCount - 1 ? 4 : this.bandCount % 4;\n            textureDataArrays[textureIndex] = new DataType(pixelCount * bandCount);\n        }\n        var dataIndex = 0;\n        var rowOffset = 0;\n        var colCount = pixelSize[0] * this.bandCount;\n        for (var rowIndex = 0; rowIndex < pixelSize[1]; ++rowIndex) {\n            for (var colIndex = 0; colIndex < colCount; ++colIndex) {\n                var dataValue = data[rowOffset + colIndex];\n                var pixelIndex = Math.floor(dataIndex / this.bandCount);\n                var bandIndex = colIndex % this.bandCount;\n                var textureIndex = Math.floor(bandIndex / 4);\n                var textureData = textureDataArrays[textureIndex];\n                var bandCount = textureData.length / pixelCount;\n                var textureBandIndex = bandIndex % 4;\n                textureData[pixelIndex * bandCount + textureBandIndex] = dataValue;\n                ++dataIndex;\n            }\n            rowOffset += bytesPerRow / bytesPerElement;\n        }\n        for (var textureIndex = 0; textureIndex < textureCount; ++textureIndex) {\n            var texture = this.textures[textureIndex];\n            var textureData = textureDataArrays[textureIndex];\n            var bandCount = textureData.length / pixelCount;\n            uploadDataTexture(helper, texture, textureData, pixelSize, bandCount, tile.interpolate);\n        }\n    };\n    TileTexture.prototype.handleTileChange_ = function () {\n        if (this.tile.getState() === TileState.LOADED) {\n            this.loaded = true;\n            this.uploadTile_();\n            this.dispatchEvent(EventType.CHANGE);\n        }\n    };\n    TileTexture.prototype.disposeInternal = function () {\n        var gl = this.helper_.getGL();\n        this.helper_.deleteBuffer(this.coords);\n        for (var i = 0; i < this.textures.length; ++i) {\n            gl.deleteTexture(this.textures[i]);\n        }\n        this.tile.removeEventListener(EventType.CHANGE, this.handleTileChange_);\n    };\n    /**\n     * Get data for a pixel.  If the tile is not loaded, null is returned.\n     * @param {number} renderCol The column index (in rendered tile space).\n     * @param {number} renderRow The row index (in rendered tile space).\n     * @return {import(\"../DataTile.js\").Data|null} The data.\n     */\n    TileTexture.prototype.getPixelData = function (renderCol, renderRow) {\n        if (!this.loaded) {\n            return null;\n        }\n        var renderWidth = this.renderSize_[0];\n        var renderHeight = this.renderSize_[1];\n        var gutter = this.gutter_;\n        if (this.tile instanceof DataTile) {\n            var sourceSize = this.tile.getSize();\n            var sourceWidthWithoutGutter_1 = sourceSize[0];\n            var sourceHeightWithoutGutter_1 = sourceSize[1];\n            var sourceWidth_1 = sourceWidthWithoutGutter_1 + 2 * gutter;\n            var sourceHeight_1 = sourceHeightWithoutGutter_1 + 2 * gutter;\n            var sourceCol_1 = gutter +\n                Math.floor(sourceWidthWithoutGutter_1 * (renderCol / renderWidth));\n            var sourceRow_1 = gutter +\n                Math.floor(sourceHeightWithoutGutter_1 * (renderRow / renderHeight));\n            var data_1 = this.tile.getData();\n            if (data_1 instanceof DataView) {\n                var bytesPerPixel = data_1.byteLength / (sourceWidth_1 * sourceHeight_1);\n                var offset_1 = bytesPerPixel * (sourceRow_1 * sourceWidth_1 + sourceCol_1);\n                var buffer = data_1.buffer.slice(offset_1, offset_1 + bytesPerPixel);\n                return new DataView(buffer);\n            }\n            var offset = this.bandCount * (sourceRow_1 * sourceWidth_1 + sourceCol_1);\n            return data_1.slice(offset, offset + this.bandCount);\n        }\n        if (!pixelContext) {\n            createPixelContext();\n        }\n        pixelContext.clearRect(0, 0, 1, 1);\n        var image = this.tile.getImage();\n        var sourceWidth = image.width;\n        var sourceHeight = image.height;\n        var sourceWidthWithoutGutter = sourceWidth - 2 * gutter;\n        var sourceHeightWithoutGutter = sourceHeight - 2 * gutter;\n        var sourceCol = gutter + Math.floor(sourceWidthWithoutGutter * (renderCol / renderWidth));\n        var sourceRow = gutter +\n            Math.floor(sourceHeightWithoutGutter * (renderRow / renderHeight));\n        var data;\n        try {\n            pixelContext.drawImage(image, sourceCol, sourceRow, 1, 1, 0, 0, 1, 1);\n            data = pixelContext.getImageData(0, 0, 1, 1).data;\n        }\n        catch (err) {\n            pixelContext = null;\n            return null;\n        }\n        return data;\n    };\n    return TileTexture;\n}(EventTarget));\nexport default TileTexture;\n//# sourceMappingURL=TileTexture.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/webgl/TileLayer\n */\nimport LRUCache from '../../structs/LRUCache.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport TileTexture from '../../webgl/TileTexture.js';\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport WebGLLayerRenderer from './Layer.js';\nimport { AttributeType } from '../../webgl/Helper.js';\nimport { ELEMENT_ARRAY_BUFFER, STATIC_DRAW } from '../../webgl.js';\nimport { apply as applyTransform, create as createTransform, reset as resetTransform, rotate as rotateTransform, scale as scaleTransform, translate as translateTransform, } from '../../transform.js';\nimport { boundingExtent, containsCoordinate, getIntersection, isEmpty, } from '../../extent.js';\nimport { create as createMat4, fromTransform as mat4FromTransform, } from '../../vec/mat4.js';\nimport { createOrUpdate as createTileCoord, getKey as getTileCoordKey, } from '../../tilecoord.js';\nimport { fromUserExtent } from '../../proj.js';\nimport { getUid } from '../../util.js';\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { toSize } from '../../size.js';\nexport var Uniforms = {\n    TILE_TEXTURE_ARRAY: 'u_tileTextures',\n    TILE_TRANSFORM: 'u_tileTransform',\n    TRANSITION_ALPHA: 'u_transitionAlpha',\n    DEPTH: 'u_depth',\n    TEXTURE_PIXEL_WIDTH: 'u_texturePixelWidth',\n    TEXTURE_PIXEL_HEIGHT: 'u_texturePixelHeight',\n    TEXTURE_RESOLUTION: 'u_textureResolution',\n    TEXTURE_ORIGIN_X: 'u_textureOriginX',\n    TEXTURE_ORIGIN_Y: 'u_textureOriginY',\n    RENDER_EXTENT: 'u_renderExtent',\n    RESOLUTION: 'u_resolution',\n    ZOOM: 'u_zoom',\n};\nexport var Attributes = {\n    TEXTURE_COORD: 'a_textureCoord',\n};\n/**\n * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n */\nvar attributeDescriptions = [\n    {\n        name: Attributes.TEXTURE_COORD,\n        size: 2,\n        type: AttributeType.FLOAT,\n    },\n];\n/**\n * @type {Object<string, boolean>}\n */\nvar empty = {};\n/**\n * Transform a zoom level into a depth value ranging from -1 to 1.\n * @param {number} z A zoom level.\n * @return {number} A depth value.\n */\nfunction depthForZ(z) {\n    return 2 * (1 - 1 / (z + 1)) - 1;\n}\n/**\n * Add a tile texture to the lookup.\n * @param {Object<number, Array<import(\"../../webgl/TileTexture.js\").default>>} tileTexturesByZ Lookup of\n * tile textures by zoom level.\n * @param {import(\"../../webgl/TileTexture.js\").default} tileTexture A tile texture.\n * @param {number} z The zoom level.\n */\nfunction addTileTextureToLookup(tileTexturesByZ, tileTexture, z) {\n    if (!(z in tileTexturesByZ)) {\n        tileTexturesByZ[z] = [];\n    }\n    tileTexturesByZ[z].push(tileTexture);\n}\n/**\n * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n * @param {import(\"../../extent.js\").Extent} extent The frame extent.\n * @return {import(\"../../extent.js\").Extent} Frame extent intersected with layer extents.\n */\nfunction getRenderExtent(frameState, extent) {\n    var layerState = frameState.layerStatesArray[frameState.layerIndex];\n    if (layerState.extent) {\n        extent = getIntersection(extent, fromUserExtent(layerState.extent, frameState.viewState.projection));\n    }\n    var source = /** @type {import(\"../../source/Tile.js\").default} */ (layerState.layer.getRenderSource());\n    if (!source.getWrapX()) {\n        var gridExtent = source\n            .getTileGridForProjection(frameState.viewState.projection)\n            .getExtent();\n        if (gridExtent) {\n            extent = getIntersection(extent, gridExtent);\n        }\n    }\n    return extent;\n}\nfunction getCacheKey(source, tileCoord) {\n    return \"\".concat(source.getKey(), \",\").concat(getTileCoordKey(tileCoord));\n}\n/**\n * @typedef {Object} Options\n * @property {string} vertexShader Vertex shader source.\n * @property {string} fragmentShader Fragment shader source.\n * @property {Object<string, import(\"../../webgl/Helper\").UniformValue>} [uniforms] Additional uniforms\n * made available to shaders.\n * @property {Array<import(\"../../webgl/PaletteTexture.js\").default>} [paletteTextures] Palette textures.\n * @property {number} [cacheSize=512] The texture cache size.\n */\n/**\n * @typedef {import(\"../../layer/WebGLTile.js\").default} LayerType\n */\n/**\n * @classdesc\n * WebGL renderer for tile layers.\n * @extends {WebGLLayerRenderer<LayerType>}\n * @api\n */\nvar WebGLTileLayerRenderer = /** @class */ (function (_super) {\n    __extends(WebGLTileLayerRenderer, _super);\n    /**\n     * @param {LayerType} tileLayer Tile layer.\n     * @param {Options} options Options.\n     */\n    function WebGLTileLayerRenderer(tileLayer, options) {\n        var _this = _super.call(this, tileLayer, {\n            uniforms: options.uniforms,\n        }) || this;\n        /**\n         * The last call to `renderFrame` was completed with all tiles loaded\n         * @type {boolean}\n         */\n        _this.renderComplete = false;\n        /**\n         * This transform converts texture coordinates to screen coordinates.\n         * @type {import(\"../../transform.js\").Transform}\n         * @private\n         */\n        _this.tileTransform_ = createTransform();\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.tempMat4_ = createMat4();\n        /**\n         * @type {import(\"../../TileRange.js\").default}\n         * @private\n         */\n        _this.tempTileRange_ = new TileRange(0, 0, 0, 0);\n        /**\n         * @type {import(\"../../tilecoord.js\").TileCoord}\n         * @private\n         */\n        _this.tempTileCoord_ = createTileCoord(0, 0, 0);\n        /**\n         * @type {import(\"../../size.js\").Size}\n         * @private\n         */\n        _this.tempSize_ = [0, 0];\n        /**\n         * @type {WebGLProgram}\n         * @private\n         */\n        _this.program_;\n        /**\n         * @private\n         */\n        _this.vertexShader_ = options.vertexShader;\n        /**\n         * @private\n         */\n        _this.fragmentShader_ = options.fragmentShader;\n        /**\n         * Tiles are rendered as a quad with the following structure:\n         *\n         *  [P3]---------[P2]\n         *   |`           |\n         *   |  `     B   |\n         *   |    `       |\n         *   |      `     |\n         *   |   A    `   |\n         *   |          ` |\n         *  [P0]---------[P1]\n         *\n         * Triangle A: P0, P1, P3\n         * Triangle B: P1, P2, P3\n         *\n         * @private\n         */\n        _this.indices_ = new WebGLArrayBuffer(ELEMENT_ARRAY_BUFFER, STATIC_DRAW);\n        _this.indices_.fromArray([0, 1, 3, 1, 2, 3]);\n        var cacheSize = options.cacheSize !== undefined ? options.cacheSize : 512;\n        /**\n         * @type {import(\"../../structs/LRUCache.js\").default<import(\"../../webgl/TileTexture.js\").default>}\n         * @private\n         */\n        _this.tileTextureCache_ = new LRUCache(cacheSize);\n        /**\n         * @type {Array<import(\"../../webgl/PaletteTexture.js\").default>}\n         * @private\n         */\n        _this.paletteTextures_ = options.paletteTextures || [];\n        /**\n         * @private\n         * @type {import(\"../../PluggableMap.js\").FrameState|null}\n         */\n        _this.frameState_ = null;\n        return _this;\n    }\n    /**\n     * @param {Options} options Options.\n     */\n    WebGLTileLayerRenderer.prototype.reset = function (options) {\n        _super.prototype.reset.call(this, {\n            uniforms: options.uniforms,\n        });\n        this.vertexShader_ = options.vertexShader;\n        this.fragmentShader_ = options.fragmentShader;\n        this.paletteTextures_ = options.paletteTextures || [];\n        if (this.helper) {\n            this.program_ = this.helper.getProgram(this.fragmentShader_, this.vertexShader_);\n        }\n    };\n    WebGLTileLayerRenderer.prototype.afterHelperCreated = function () {\n        this.program_ = this.helper.getProgram(this.fragmentShader_, this.vertexShader_);\n        this.helper.flushBufferData(this.indices_);\n    };\n    /**\n     * @param {import(\"../../webgl/TileTexture\").TileType} tile Tile.\n     * @return {boolean} Tile is drawable.\n     * @private\n     */\n    WebGLTileLayerRenderer.prototype.isDrawableTile_ = function (tile) {\n        var tileLayer = this.getLayer();\n        var tileState = tile.getState();\n        var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n        return (tileState == TileState.LOADED ||\n            tileState == TileState.EMPTY ||\n            (tileState == TileState.ERROR && !useInterimTilesOnError));\n    };\n    /**\n     * Determine whether renderFrame should be called.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    WebGLTileLayerRenderer.prototype.prepareFrameInternal = function (frameState) {\n        var layer = this.getLayer();\n        var source = layer.getRenderSource();\n        if (!source) {\n            return false;\n        }\n        if (isEmpty(getRenderExtent(frameState, frameState.extent))) {\n            return false;\n        }\n        return source.getState() === 'ready';\n    };\n    /**\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent The extent to be rendered.\n     * @param {number} initialZ The zoom level.\n     * @param {Object<number, Array<TileTexture>>} tileTexturesByZ The zoom level.\n     */\n    WebGLTileLayerRenderer.prototype.enqueueTiles = function (frameState, extent, initialZ, tileTexturesByZ) {\n        var viewState = frameState.viewState;\n        var tileLayer = this.getLayer();\n        var tileSource = tileLayer.getRenderSource();\n        var tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n        var gutter = tileSource.getGutterForProjection(viewState.projection);\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in frameState.wantedTiles)) {\n            frameState.wantedTiles[tileSourceKey] = {};\n        }\n        var wantedTiles = frameState.wantedTiles[tileSourceKey];\n        var tileTextureCache = this.tileTextureCache_;\n        var minZ = Math.max(initialZ - tileLayer.getPreload(), tileGrid.getMinZoom(), tileLayer.getMinZoom());\n        for (var z = initialZ; z >= minZ; --z) {\n            var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, this.tempTileRange_);\n            var tileResolution = tileGrid.getResolution(z);\n            for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n                for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                    var tileCoord = createTileCoord(z, x, y, this.tempTileCoord_);\n                    var cacheKey = getCacheKey(tileSource, tileCoord);\n                    /** @type {TileTexture} */\n                    var tileTexture = void 0;\n                    /** @type {import(\"../../webgl/TileTexture\").TileType} */\n                    var tile = void 0;\n                    if (tileTextureCache.containsKey(cacheKey)) {\n                        tileTexture = tileTextureCache.get(cacheKey);\n                        tile = tileTexture.tile;\n                    }\n                    if (!tileTexture || tileTexture.tile.key !== tileSource.getKey()) {\n                        tile = tileSource.getTile(z, x, y, frameState.pixelRatio, viewState.projection);\n                        if (!tileTexture) {\n                            tileTexture = new TileTexture({\n                                tile: tile,\n                                grid: tileGrid,\n                                helper: this.helper,\n                                gutter: gutter,\n                            });\n                            tileTextureCache.set(cacheKey, tileTexture);\n                        }\n                        else {\n                            if (this.isDrawableTile_(tile)) {\n                                tileTexture.setTile(tile);\n                            }\n                            else {\n                                var interimTile = \n                                /** @type {import(\"../../webgl/TileTexture\").TileType} */ (tile.getInterimTile());\n                                tileTexture.setTile(interimTile);\n                            }\n                        }\n                    }\n                    addTileTextureToLookup(tileTexturesByZ, tileTexture, z);\n                    var tileQueueKey = tile.getKey();\n                    wantedTiles[tileQueueKey] = true;\n                    if (tile.getState() === TileState.IDLE) {\n                        if (!frameState.tileQueue.isKeyQueued(tileQueueKey)) {\n                            frameState.tileQueue.enqueue([\n                                tile,\n                                tileSourceKey,\n                                tileGrid.getTileCoordCenter(tileCoord),\n                                tileResolution,\n                            ]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Render the layer.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {HTMLElement} The rendered element.\n     */\n    WebGLTileLayerRenderer.prototype.renderFrame = function (frameState) {\n        this.frameState_ = frameState;\n        this.renderComplete = true;\n        var gl = this.helper.getGL();\n        this.preRender(gl, frameState);\n        var viewState = frameState.viewState;\n        var tileLayer = this.getLayer();\n        var tileSource = tileLayer.getRenderSource();\n        var tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n        var gutter = tileSource.getGutterForProjection(viewState.projection);\n        var extent = getRenderExtent(frameState, frameState.extent);\n        var z = tileGrid.getZForResolution(viewState.resolution, tileSource.zDirection);\n        /**\n         * @type {Object<number, Array<import(\"../../webgl/TileTexture.js\").default>>}\n         */\n        var tileTexturesByZ = {};\n        if (frameState.nextExtent) {\n            var targetZ = tileGrid.getZForResolution(viewState.nextResolution, tileSource.zDirection);\n            var nextExtent = getRenderExtent(frameState, frameState.nextExtent);\n            this.enqueueTiles(frameState, nextExtent, targetZ, tileTexturesByZ);\n        }\n        this.enqueueTiles(frameState, extent, z, tileTexturesByZ);\n        /**\n         * A lookup of alpha values for tiles at the target rendering resolution\n         * for tiles that are in transition.  If a tile coord key is absent from\n         * this lookup, the tile should be rendered at alpha 1.\n         * @type {Object<string, number>}\n         */\n        var alphaLookup = {};\n        var uid = getUid(this);\n        var time = frameState.time;\n        var blend = false;\n        // look for cached tiles to use if a target tile is not ready\n        var tileTextures = tileTexturesByZ[z];\n        for (var i = 0, ii = tileTextures.length; i < ii; ++i) {\n            var tileTexture = tileTextures[i];\n            var tile = tileTexture.tile;\n            var tileCoord = tile.tileCoord;\n            if (tileTexture.loaded) {\n                var alpha = tile.getAlpha(uid, time);\n                if (alpha === 1) {\n                    // no need to look for alt tiles\n                    tile.endTransition(uid);\n                    continue;\n                }\n                blend = true;\n                var tileCoordKey = getTileCoordKey(tileCoord);\n                alphaLookup[tileCoordKey] = alpha;\n            }\n            this.renderComplete = false;\n            // first look for child tiles (at z + 1)\n            var coveredByChildren = this.findAltTiles_(tileGrid, tileCoord, z + 1, tileTexturesByZ);\n            if (coveredByChildren) {\n                continue;\n            }\n            // next look for parent tiles\n            var minZoom = tileGrid.getMinZoom();\n            for (var parentZ = z - 1; parentZ >= minZoom; --parentZ) {\n                var coveredByParent = this.findAltTiles_(tileGrid, tileCoord, parentZ, tileTexturesByZ);\n                if (coveredByParent) {\n                    break;\n                }\n            }\n        }\n        this.helper.useProgram(this.program_);\n        this.helper.prepareDraw(frameState, !blend);\n        var zs = Object.keys(tileTexturesByZ)\n            .map(Number)\n            .sort(numberSafeCompareFunction);\n        var centerX = viewState.center[0];\n        var centerY = viewState.center[1];\n        for (var j = 0, jj = zs.length; j < jj; ++j) {\n            var tileZ = zs[j];\n            var tileResolution = tileGrid.getResolution(tileZ);\n            var tileSize = toSize(tileGrid.getTileSize(tileZ), this.tempSize_);\n            var tileOrigin = tileGrid.getOrigin(tileZ);\n            var tileWidthWithGutter = tileSize[0] + 2 * gutter;\n            var tileHeightWithGutter = tileSize[1] + 2 * gutter;\n            var aspectRatio = tileWidthWithGutter / tileHeightWithGutter;\n            var centerI = (centerX - tileOrigin[0]) / (tileSize[0] * tileResolution);\n            var centerJ = (tileOrigin[1] - centerY) / (tileSize[1] * tileResolution);\n            var tileScale = viewState.resolution / tileResolution;\n            var depth = depthForZ(tileZ);\n            var tileTextures_1 = tileTexturesByZ[tileZ];\n            for (var i = 0, ii = tileTextures_1.length; i < ii; ++i) {\n                var tileTexture = tileTextures_1[i];\n                if (!tileTexture.loaded) {\n                    continue;\n                }\n                var tile = tileTexture.tile;\n                var tileCoord = tile.tileCoord;\n                var tileCoordKey = getTileCoordKey(tileCoord);\n                var tileCenterI = tileCoord[1];\n                var tileCenterJ = tileCoord[2];\n                resetTransform(this.tileTransform_);\n                scaleTransform(this.tileTransform_, 2 / ((frameState.size[0] * tileScale) / tileWidthWithGutter), -2 / ((frameState.size[1] * tileScale) / tileWidthWithGutter));\n                rotateTransform(this.tileTransform_, viewState.rotation);\n                scaleTransform(this.tileTransform_, 1, 1 / aspectRatio);\n                translateTransform(this.tileTransform_, (tileSize[0] * (tileCenterI - centerI) - gutter) /\n                    tileWidthWithGutter, (tileSize[1] * (tileCenterJ - centerJ) - gutter) /\n                    tileHeightWithGutter);\n                this.helper.setUniformMatrixValue(Uniforms.TILE_TRANSFORM, mat4FromTransform(this.tempMat4_, this.tileTransform_));\n                this.helper.bindBuffer(tileTexture.coords);\n                this.helper.bindBuffer(this.indices_);\n                this.helper.enableAttributes(attributeDescriptions);\n                var textureSlot = 0;\n                while (textureSlot < tileTexture.textures.length) {\n                    var textureProperty = 'TEXTURE' + textureSlot;\n                    var uniformName = \"\".concat(Uniforms.TILE_TEXTURE_ARRAY, \"[\").concat(textureSlot, \"]\");\n                    gl.activeTexture(gl[textureProperty]);\n                    gl.bindTexture(gl.TEXTURE_2D, tileTexture.textures[textureSlot]);\n                    gl.uniform1i(this.helper.getUniformLocation(uniformName), textureSlot);\n                    ++textureSlot;\n                }\n                for (var paletteIndex = 0; paletteIndex < this.paletteTextures_.length; ++paletteIndex) {\n                    var paletteTexture = this.paletteTextures_[paletteIndex];\n                    gl.activeTexture(gl['TEXTURE' + textureSlot]);\n                    var texture = paletteTexture.getTexture(gl);\n                    gl.bindTexture(gl.TEXTURE_2D, texture);\n                    gl.uniform1i(this.helper.getUniformLocation(paletteTexture.name), textureSlot);\n                    ++textureSlot;\n                }\n                var alpha = tileCoordKey in alphaLookup ? alphaLookup[tileCoordKey] : 1;\n                if (alpha < 1) {\n                    frameState.animate = true;\n                }\n                this.helper.setUniformFloatValue(Uniforms.TRANSITION_ALPHA, alpha);\n                this.helper.setUniformFloatValue(Uniforms.DEPTH, depth);\n                this.helper.setUniformFloatValue(Uniforms.TEXTURE_PIXEL_WIDTH, tileWidthWithGutter);\n                this.helper.setUniformFloatValue(Uniforms.TEXTURE_PIXEL_HEIGHT, tileHeightWithGutter);\n                this.helper.setUniformFloatValue(Uniforms.TEXTURE_RESOLUTION, tileResolution);\n                this.helper.setUniformFloatValue(Uniforms.TEXTURE_ORIGIN_X, tileOrigin[0] +\n                    tileCenterI * tileSize[0] * tileResolution -\n                    gutter * tileResolution);\n                this.helper.setUniformFloatValue(Uniforms.TEXTURE_ORIGIN_Y, tileOrigin[1] -\n                    tileCenterJ * tileSize[1] * tileResolution +\n                    gutter * tileResolution);\n                var gutterExtent = extent;\n                if (gutter > 0) {\n                    gutterExtent = tileGrid.getTileCoordExtent(tileCoord);\n                    getIntersection(gutterExtent, extent, gutterExtent);\n                }\n                this.helper.setUniformFloatVec4(Uniforms.RENDER_EXTENT, gutterExtent);\n                this.helper.setUniformFloatValue(Uniforms.RESOLUTION, viewState.resolution);\n                this.helper.setUniformFloatValue(Uniforms.ZOOM, viewState.zoom);\n                this.helper.drawElements(0, this.indices_.getSize());\n            }\n        }\n        this.helper.finalizeDraw(frameState, this.dispatchPreComposeEvent, this.dispatchPostComposeEvent);\n        var canvas = this.helper.getCanvas();\n        var tileTextureCache = this.tileTextureCache_;\n        while (tileTextureCache.canExpireCache()) {\n            var tileTexture = tileTextureCache.pop();\n            tileTexture.dispose();\n        }\n        // TODO: let the renderers manage their own cache instead of managing the source cache\n        /**\n         * Here we unconditionally expire the source cache since the renderer maintains\n         * its own cache.\n         * @param {import(\"../../PluggableMap.js\").default} map Map.\n         * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n         */\n        var postRenderFunction = function (map, frameState) {\n            tileSource.expireCache(frameState.viewState.projection, empty);\n        };\n        frameState.postRenderFunctions.push(postRenderFunction);\n        this.postRender(gl, frameState);\n        return canvas;\n    };\n    /**\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView} Data at the pixel location.\n     */\n    WebGLTileLayerRenderer.prototype.getData = function (pixel) {\n        var gl = this.helper.getGL();\n        if (!gl) {\n            return null;\n        }\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        var layer = this.getLayer();\n        var coordinate = applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n        var viewState = frameState.viewState;\n        var layerExtent = layer.getExtent();\n        if (layerExtent) {\n            if (!containsCoordinate(fromUserExtent(layerExtent, viewState.projection), coordinate)) {\n                return null;\n            }\n        }\n        // determine last source suitable for rendering at coordinate\n        var sources = layer.getSources(boundingExtent([coordinate]), viewState.resolution);\n        var i, source, tileGrid;\n        for (i = sources.length - 1; i >= 0; --i) {\n            source = sources[i];\n            if (source.getState() === 'ready') {\n                tileGrid = source.getTileGridForProjection(viewState.projection);\n                if (source.getWrapX()) {\n                    break;\n                }\n                var gridExtent = tileGrid.getExtent();\n                if (!gridExtent || containsCoordinate(gridExtent, coordinate)) {\n                    break;\n                }\n            }\n        }\n        if (i < 0) {\n            return null;\n        }\n        var tileTextureCache = this.tileTextureCache_;\n        for (var z = tileGrid.getZForResolution(viewState.resolution); z >= tileGrid.getMinZoom(); --z) {\n            var tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n            var cacheKey = getCacheKey(source, tileCoord);\n            if (!tileTextureCache.containsKey(cacheKey)) {\n                continue;\n            }\n            var tileTexture = tileTextureCache.get(cacheKey);\n            if (!tileTexture.loaded) {\n                continue;\n            }\n            var tileOrigin = tileGrid.getOrigin(z);\n            var tileSize = toSize(tileGrid.getTileSize(z));\n            var tileResolution = tileGrid.getResolution(z);\n            var col = (coordinate[0] - tileOrigin[0]) / tileResolution -\n                tileCoord[1] * tileSize[0];\n            var row = (tileOrigin[1] - coordinate[1]) / tileResolution -\n                tileCoord[2] * tileSize[1];\n            return tileTexture.getPixelData(col, row);\n        }\n        return null;\n    };\n    /**\n     * Look for tiles covering the provided tile coordinate at an alternate\n     * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n     * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid The tile grid.\n     * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n     * @param {number} altZ The alternate zoom level.\n     * @param {Object<number, Array<import(\"../../webgl/TileTexture.js\").default>>} tileTexturesByZ Lookup of\n     * tile textures by zoom level.\n     * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n     * @private\n     */\n    WebGLTileLayerRenderer.prototype.findAltTiles_ = function (tileGrid, tileCoord, altZ, tileTexturesByZ) {\n        var tileRange = tileGrid.getTileRangeForTileCoordAndZ(tileCoord, altZ, this.tempTileRange_);\n        if (!tileRange) {\n            return false;\n        }\n        var covered = true;\n        var tileTextureCache = this.tileTextureCache_;\n        var source = this.getLayer().getRenderSource();\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                var cacheKey = getCacheKey(source, [altZ, x, y]);\n                var loaded = false;\n                if (tileTextureCache.containsKey(cacheKey)) {\n                    var tileTexture = tileTextureCache.get(cacheKey);\n                    if (tileTexture.loaded) {\n                        addTileTextureToLookup(tileTexturesByZ, tileTexture, altZ);\n                        loaded = true;\n                    }\n                }\n                if (!loaded) {\n                    covered = false;\n                }\n            }\n        }\n        return covered;\n    };\n    WebGLTileLayerRenderer.prototype.removeHelper = function () {\n        if (this.helper) {\n            var tileTextureCache = this.tileTextureCache_;\n            tileTextureCache.forEach(function (tileTexture) { return tileTexture.dispose(); });\n            tileTextureCache.clear();\n        }\n        _super.prototype.removeHelper.call(this);\n    };\n    /**\n     * Clean up.\n     */\n    WebGLTileLayerRenderer.prototype.disposeInternal = function () {\n        var helper = this.helper;\n        if (helper) {\n            var gl = helper.getGL();\n            gl.deleteProgram(this.program_);\n            delete this.program_;\n            helper.deleteBuffer(this.indices_);\n        }\n        _super.prototype.disposeInternal.call(this);\n        delete this.indices_;\n        delete this.tileTextureCache_;\n        delete this.frameState_;\n    };\n    return WebGLTileLayerRenderer;\n}(WebGLLayerRenderer));\nexport default WebGLTileLayerRenderer;\n//# sourceMappingURL=TileLayer.js.map","/**\n * @module ol/webgl/PaletteTexture\n */\nvar PaletteTexture = /** @class */ (function () {\n    /**\n     * @param {string} name The name of the texture.\n     * @param {Uint8Array} data The texture data.\n     */\n    function PaletteTexture(name, data) {\n        this.name = name;\n        this.data = data;\n        /**\n         * @type {WebGLTexture}\n         * @private\n         */\n        this.texture_ = null;\n    }\n    /**\n     * @param {WebGLRenderingContext} gl Rendering context.\n     * @return {WebGLTexture} The texture.\n     */\n    PaletteTexture.prototype.getTexture = function (gl) {\n        if (!this.texture_) {\n            var texture = gl.createTexture();\n            gl.bindTexture(gl.TEXTURE_2D, texture);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.data.length / 4, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, this.data);\n            this.texture_ = texture;\n        }\n        return this.texture_;\n    };\n    return PaletteTexture;\n}());\nexport default PaletteTexture;\n//# sourceMappingURL=PaletteTexture.js.map","/**\n * Operators and utilities used for style expressions\n * @module ol/style/expressions\n */\nimport PaletteTexture from '../webgl/PaletteTexture.js';\nimport { Uniforms } from '../renderer/webgl/TileLayer.js';\nimport { asArray, fromString, isStringColor } from '../color.js';\nimport { log2 } from '../math.js';\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expressions.js\").ExpressionValue} arguments.\n *\n * The following operators can be used:\n *\n * * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels.\n *   * `['get', 'attributeName']` fetches a feature attribute (it will be prefixed by `a_` in the shader)\n *     Note: those will be taken from the attributes provided to the renderer\n *   * `['resolution']` returns the current resolution\n *   * `['time']` returns the time in seconds since the creation of the layer\n *   * `['var', 'varName']` fetches a value from the style variables, or 0 if undefined\n *   * `['zoom']` returns the current zoom level\n *\n * * Math operators:\n *   * `['*', value1, value2]` multiplies `value1` by `value2`\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2]` adds `value1` and `value2`\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4.\n *   * `['color', red, green, blue, alpha]` creates a `color` value from `number` values; the `alpha` parameter is\n *     optional; if not specified, it will be set to 1.\n *     Note: `red`, `green` and `blue` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range).\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n/**\n * Possible inferred types from a given value or expression.\n * Note: these are binary flags.\n * @enum {number}\n */\nexport var ValueTypes = {\n    NUMBER: 1,\n    STRING: 2,\n    COLOR: 4,\n    BOOLEAN: 8,\n    NUMBER_ARRAY: 16,\n    ANY: 31,\n    NONE: 0,\n};\n/**\n * An operator declaration must contain two methods: `getReturnType` which returns a type based on\n * the operator arguments, and `toGlsl` which returns a GLSL-compatible string.\n * Note: both methods can process arguments recursively.\n * @typedef {Object} Operator\n * @property {function(Array<ExpressionValue>): ValueTypes|number} getReturnType Returns one or several types\n * @property {function(ParsingContext, Array<ExpressionValue>, ValueTypes=): string} toGlsl Returns a GLSL-compatible string\n * Note: takes in an optional type hint as 3rd parameter\n */\n/**\n * Operator declarations\n * @type {Object<string, Operator>}\n */\nexport var Operators = {};\n/**\n * Returns the possible types for a given value (each type being a binary flag)\n * To test a value use e.g. `getValueType(v) & ValueTypes.BOOLEAN`\n * @param {ExpressionValue} value Value\n * @return {ValueTypes|number} Type or types inferred from the value\n */\nexport function getValueType(value) {\n    if (typeof value === 'number') {\n        return ValueTypes.NUMBER;\n    }\n    if (typeof value === 'boolean') {\n        return ValueTypes.BOOLEAN;\n    }\n    if (typeof value === 'string') {\n        if (isStringColor(value)) {\n            return ValueTypes.COLOR | ValueTypes.STRING;\n        }\n        return ValueTypes.STRING;\n    }\n    if (!Array.isArray(value)) {\n        throw new Error(\"Unhandled value type: \".concat(JSON.stringify(value)));\n    }\n    var valueArr = /** @type {Array<*>} */ (value);\n    var onlyNumbers = valueArr.every(function (v) {\n        return typeof v === 'number';\n    });\n    if (onlyNumbers) {\n        if (valueArr.length === 3 || valueArr.length === 4) {\n            return ValueTypes.COLOR | ValueTypes.NUMBER_ARRAY;\n        }\n        return ValueTypes.NUMBER_ARRAY;\n    }\n    if (typeof valueArr[0] !== 'string') {\n        throw new Error(\"Expected an expression operator but received: \".concat(JSON.stringify(valueArr)));\n    }\n    var operator = Operators[valueArr[0]];\n    if (operator === undefined) {\n        throw new Error(\"Unrecognized expression operator: \".concat(JSON.stringify(valueArr)));\n    }\n    return operator.getReturnType(valueArr.slice(1));\n}\n/**\n * Checks if only one value type is enabled in the input number.\n * @param {ValueTypes|number} valueType Number containing value type binary flags\n * @return {boolean} True if only one type flag is enabled, false if zero or multiple\n */\nexport function isTypeUnique(valueType) {\n    return log2(valueType) % 1 === 0;\n}\n/**\n * Context available during the parsing of an expression.\n * @typedef {Object} ParsingContext\n * @property {boolean} [inFragmentShader] If false, means the expression output should be made for a vertex shader\n * @property {Array<string>} variables List of variables used in the expression; contains **unprefixed names**\n * @property {Array<string>} attributes List of attributes used in the expression; contains **unprefixed names**\n * @property {Object<string, number>} stringLiteralsMap This object maps all encountered string values to a number\n * @property {Object<string, string>} functions Lookup of functions used by the style.\n * @property {number} [bandCount] Number of bands per pixel.\n * @property {Array<PaletteTexture>} [paletteTextures] List of palettes used by the style.\n */\n/**\n * Will return the number as a float with a dot separator, which is required by GLSL.\n * @param {number} v Numerical value.\n * @return {string} The value as string.\n */\nexport function numberToGlsl(v) {\n    var s = v.toString();\n    return s.indexOf('.') === -1 ? s + '.0' : s;\n}\n/**\n * Will return the number array as a float with a dot separator, concatenated with ', '.\n * @param {Array<number>} array Numerical values array.\n * @return {string} The array as a vector, e. g.: `vec3(1.0, 2.0, 3.0)`.\n */\nexport function arrayToGlsl(array) {\n    if (array.length < 2 || array.length > 4) {\n        throw new Error('`formatArray` can only output `vec2`, `vec3` or `vec4` arrays.');\n    }\n    return \"vec\".concat(array.length, \"(\").concat(array.map(numberToGlsl).join(', '), \")\");\n}\n/**\n * Will normalize and converts to string a `vec4` color array compatible with GLSL.\n * @param {string|import(\"../color.js\").Color} color Color either in string format or [r, g, b, a] array format,\n * with RGB components in the 0..255 range and the alpha component in the 0..1 range.\n * Note that the final array will always have 4 components.\n * @return {string} The color expressed in the `vec4(1.0, 1.0, 1.0, 1.0)` form.\n */\nexport function colorToGlsl(color) {\n    var array = asArray(color).slice();\n    if (array.length < 4) {\n        array.push(1);\n    }\n    return arrayToGlsl(array.map(function (c, i) {\n        return i < 3 ? c / 255 : c;\n    }));\n}\n/**\n * Returns a stable equivalent number for the string literal.\n * @param {ParsingContext} context Parsing context\n * @param {string} string String literal value\n * @return {number} Number equivalent\n */\nexport function getStringNumberEquivalent(context, string) {\n    if (context.stringLiteralsMap[string] === undefined) {\n        context.stringLiteralsMap[string] = Object.keys(context.stringLiteralsMap).length;\n    }\n    return context.stringLiteralsMap[string];\n}\n/**\n * Returns a stable equivalent number for the string literal, for use in shaders. This number is then\n * converted to be a GLSL-compatible string.\n * @param {ParsingContext} context Parsing context\n * @param {string} string String literal value\n * @return {string} GLSL-compatible string containing a number\n */\nexport function stringToGlsl(context, string) {\n    return numberToGlsl(getStringNumberEquivalent(context, string));\n}\n/**\n * Recursively parses a style expression and outputs a GLSL-compatible string. Takes in a parsing context that\n * will be read and modified during the parsing operation.\n * @param {ParsingContext} context Parsing context\n * @param {ExpressionValue} value Value\n * @param {ValueTypes|number} [typeHint] Hint for the expected final type (can be several types combined)\n * @return {string} GLSL-compatible output\n */\nexport function expressionToGlsl(context, value, typeHint) {\n    // operator\n    if (Array.isArray(value) && typeof value[0] === 'string') {\n        var operator = Operators[value[0]];\n        if (operator === undefined) {\n            throw new Error(\"Unrecognized expression operator: \".concat(JSON.stringify(value)));\n        }\n        return operator.toGlsl(context, value.slice(1), typeHint);\n    }\n    var valueType = getValueType(value);\n    if ((valueType & ValueTypes.NUMBER) > 0) {\n        return numberToGlsl(/** @type {number} */ (value));\n    }\n    if ((valueType & ValueTypes.BOOLEAN) > 0) {\n        return value.toString();\n    }\n    if ((valueType & ValueTypes.STRING) > 0 &&\n        (typeHint === undefined || typeHint == ValueTypes.STRING)) {\n        return stringToGlsl(context, value.toString());\n    }\n    if ((valueType & ValueTypes.COLOR) > 0 &&\n        (typeHint === undefined || typeHint == ValueTypes.COLOR)) {\n        return colorToGlsl(/** @type {Array<number> | string} */ (value));\n    }\n    if ((valueType & ValueTypes.NUMBER_ARRAY) > 0) {\n        return arrayToGlsl(/** @type {Array<number>} */ (value));\n    }\n    throw new Error(\"Unexpected expression \".concat(value, \" (expected type \").concat(typeHint, \")\"));\n}\nfunction assertNumber(value) {\n    if (!(getValueType(value) & ValueTypes.NUMBER)) {\n        throw new Error(\"A numeric value was expected, got \".concat(JSON.stringify(value), \" instead\"));\n    }\n}\nfunction assertNumbers(values) {\n    for (var i = 0; i < values.length; i++) {\n        assertNumber(values[i]);\n    }\n}\nfunction assertString(value) {\n    if (!(getValueType(value) & ValueTypes.STRING)) {\n        throw new Error(\"A string value was expected, got \".concat(JSON.stringify(value), \" instead\"));\n    }\n}\nfunction assertBoolean(value) {\n    if (!(getValueType(value) & ValueTypes.BOOLEAN)) {\n        throw new Error(\"A boolean value was expected, got \".concat(JSON.stringify(value), \" instead\"));\n    }\n}\nfunction assertArgsCount(args, count) {\n    if (args.length !== count) {\n        throw new Error(\"Exactly \".concat(count, \" arguments were expected, got \").concat(args.length, \" instead\"));\n    }\n}\nfunction assertArgsMinCount(args, count) {\n    if (args.length < count) {\n        throw new Error(\"At least \".concat(count, \" arguments were expected, got \").concat(args.length, \" instead\"));\n    }\n}\nfunction assertArgsMaxCount(args, count) {\n    if (args.length > count) {\n        throw new Error(\"At most \".concat(count, \" arguments were expected, got \").concat(args.length, \" instead\"));\n    }\n}\nfunction assertArgsEven(args) {\n    if (args.length % 2 !== 0) {\n        throw new Error(\"An even amount of arguments was expected, got \".concat(args, \" instead\"));\n    }\n}\nfunction assertArgsOdd(args) {\n    if (args.length % 2 === 0) {\n        throw new Error(\"An odd amount of arguments was expected, got \".concat(args, \" instead\"));\n    }\n}\nfunction assertUniqueInferredType(args, types) {\n    if (!isTypeUnique(types)) {\n        throw new Error(\"Could not infer only one type from the following expression: \".concat(JSON.stringify(args)));\n    }\n}\nOperators['get'] = {\n    getReturnType: function (args) {\n        return ValueTypes.ANY;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 1);\n        assertString(args[0]);\n        var value = args[0].toString();\n        if (context.attributes.indexOf(value) === -1) {\n            context.attributes.push(value);\n        }\n        var prefix = context.inFragmentShader ? 'v_' : 'a_';\n        return prefix + value;\n    },\n};\n/**\n * Get the uniform name given a variable name.\n * @param {string} variableName The variable name.\n * @return {string} The uniform name.\n */\nexport function uniformNameForVariable(variableName) {\n    return 'u_var_' + variableName;\n}\nOperators['var'] = {\n    getReturnType: function (args) {\n        return ValueTypes.ANY;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 1);\n        assertString(args[0]);\n        var value = args[0].toString();\n        if (context.variables.indexOf(value) === -1) {\n            context.variables.push(value);\n        }\n        return uniformNameForVariable(value);\n    },\n};\nexport var PALETTE_TEXTURE_ARRAY = 'u_paletteTextures';\n// ['palette', index, colors]\nOperators['palette'] = {\n    getReturnType: function (args) {\n        return ValueTypes.COLOR;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumber(args[0]);\n        var index = expressionToGlsl(context, args[0]);\n        var colors = args[1];\n        if (!Array.isArray(colors)) {\n            throw new Error('The second argument of palette must be an array');\n        }\n        var numColors = colors.length;\n        var palette = new Uint8Array(numColors * 4);\n        for (var i = 0; i < numColors; i++) {\n            var candidate = colors[i];\n            /**\n             * @type {import('../color.js').Color}\n             */\n            var color = void 0;\n            if (typeof candidate === 'string') {\n                color = fromString(candidate);\n            }\n            else {\n                if (!Array.isArray(candidate)) {\n                    throw new Error('The second argument of palette must be an array of strings or colors');\n                }\n                var length_1 = candidate.length;\n                if (length_1 === 4) {\n                    color = candidate;\n                }\n                else {\n                    if (length_1 !== 3) {\n                        throw new Error(\"Expected palette color to have 3 or 4 values, got \".concat(length_1));\n                    }\n                    color = [candidate[0], candidate[1], candidate[2], 1];\n                }\n            }\n            var offset = i * 4;\n            palette[offset] = color[0];\n            palette[offset + 1] = color[1];\n            palette[offset + 2] = color[2];\n            palette[offset + 3] = color[3] * 255;\n        }\n        if (!context.paletteTextures) {\n            context.paletteTextures = [];\n        }\n        var paletteName = \"\".concat(PALETTE_TEXTURE_ARRAY, \"[\").concat(context.paletteTextures.length, \"]\");\n        var paletteTexture = new PaletteTexture(paletteName, palette);\n        context.paletteTextures.push(paletteTexture);\n        return \"texture2D(\".concat(paletteName, \", vec2((\").concat(index, \" + 0.5) / \").concat(numColors, \".0, 0.5))\");\n    },\n};\nvar GET_BAND_VALUE_FUNC = 'getBandValue';\nOperators['band'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsMinCount(args, 1);\n        assertArgsMaxCount(args, 3);\n        var band = args[0];\n        if (!(GET_BAND_VALUE_FUNC in context.functions)) {\n            var ifBlocks = '';\n            var bandCount = context.bandCount || 1;\n            for (var i = 0; i < bandCount; i++) {\n                var colorIndex = Math.floor(i / 4);\n                var bandIndex = i % 4;\n                if (bandIndex === bandCount - 1 && bandIndex === 1) {\n                    // LUMINANCE_ALPHA - band 1 assigned to rgb and band 2 assigned to alpha\n                    bandIndex = 3;\n                }\n                var textureName = \"\".concat(Uniforms.TILE_TEXTURE_ARRAY, \"[\").concat(colorIndex, \"]\");\n                ifBlocks += \"\\n          if (band == \".concat(i + 1, \".0) {\\n            return texture2D(\").concat(textureName, \", v_textureCoord + vec2(dx, dy))[\").concat(bandIndex, \"];\\n          }\\n        \");\n            }\n            context.functions[GET_BAND_VALUE_FUNC] = \"\\n        float getBandValue(float band, float xOffset, float yOffset) {\\n          float dx = xOffset / \".concat(Uniforms.TEXTURE_PIXEL_WIDTH, \";\\n          float dy = yOffset / \").concat(Uniforms.TEXTURE_PIXEL_HEIGHT, \";\\n          \").concat(ifBlocks, \"\\n        }\\n      \");\n        }\n        var bandExpression = expressionToGlsl(context, band);\n        var xOffsetExpression = expressionToGlsl(context, args[1] || 0);\n        var yOffsetExpression = expressionToGlsl(context, args[2] || 0);\n        return \"\".concat(GET_BAND_VALUE_FUNC, \"(\").concat(bandExpression, \", \").concat(xOffsetExpression, \", \").concat(yOffsetExpression, \")\");\n    },\n};\nOperators['time'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 0);\n        return 'u_time';\n    },\n};\nOperators['zoom'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 0);\n        return 'u_zoom';\n    },\n};\nOperators['resolution'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 0);\n        return 'u_resolution';\n    },\n};\nOperators['*'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"(\".concat(expressionToGlsl(context, args[0]), \" * \").concat(expressionToGlsl(context, args[1]), \")\");\n    },\n};\nOperators['/'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"(\".concat(expressionToGlsl(context, args[0]), \" / \").concat(expressionToGlsl(context, args[1]), \")\");\n    },\n};\nOperators['+'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"(\".concat(expressionToGlsl(context, args[0]), \" + \").concat(expressionToGlsl(context, args[1]), \")\");\n    },\n};\nOperators['-'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"(\".concat(expressionToGlsl(context, args[0]), \" - \").concat(expressionToGlsl(context, args[1]), \")\");\n    },\n};\nOperators['clamp'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 3);\n        assertNumbers(args);\n        var min = expressionToGlsl(context, args[1]);\n        var max = expressionToGlsl(context, args[2]);\n        return \"clamp(\".concat(expressionToGlsl(context, args[0]), \", \").concat(min, \", \").concat(max, \")\");\n    },\n};\nOperators['%'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"mod(\".concat(expressionToGlsl(context, args[0]), \", \").concat(expressionToGlsl(context, args[1]), \")\");\n    },\n};\nOperators['^'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"pow(\".concat(expressionToGlsl(context, args[0]), \", \").concat(expressionToGlsl(context, args[1]), \")\");\n    },\n};\nOperators['abs'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 1);\n        assertNumbers(args);\n        return \"abs(\".concat(expressionToGlsl(context, args[0]), \")\");\n    },\n};\nOperators['floor'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 1);\n        assertNumbers(args);\n        return \"floor(\".concat(expressionToGlsl(context, args[0]), \")\");\n    },\n};\nOperators['round'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 1);\n        assertNumbers(args);\n        return \"floor(\".concat(expressionToGlsl(context, args[0]), \" + 0.5)\");\n    },\n};\nOperators['ceil'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 1);\n        assertNumbers(args);\n        return \"ceil(\".concat(expressionToGlsl(context, args[0]), \")\");\n    },\n};\nOperators['sin'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 1);\n        assertNumbers(args);\n        return \"sin(\".concat(expressionToGlsl(context, args[0]), \")\");\n    },\n};\nOperators['cos'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 1);\n        assertNumbers(args);\n        return \"cos(\".concat(expressionToGlsl(context, args[0]), \")\");\n    },\n};\nOperators['atan'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER;\n    },\n    toGlsl: function (context, args) {\n        assertArgsMinCount(args, 1);\n        assertArgsMaxCount(args, 2);\n        assertNumbers(args);\n        return args.length === 2\n            ? \"atan(\".concat(expressionToGlsl(context, args[0]), \", \").concat(expressionToGlsl(context, args[1]), \")\")\n            : \"atan(\".concat(expressionToGlsl(context, args[0]), \")\");\n    },\n};\nOperators['>'] = {\n    getReturnType: function (args) {\n        return ValueTypes.BOOLEAN;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"(\".concat(expressionToGlsl(context, args[0]), \" > \").concat(expressionToGlsl(context, args[1]), \")\");\n    },\n};\nOperators['>='] = {\n    getReturnType: function (args) {\n        return ValueTypes.BOOLEAN;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"(\".concat(expressionToGlsl(context, args[0]), \" >= \").concat(expressionToGlsl(context, args[1]), \")\");\n    },\n};\nOperators['<'] = {\n    getReturnType: function (args) {\n        return ValueTypes.BOOLEAN;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"(\".concat(expressionToGlsl(context, args[0]), \" < \").concat(expressionToGlsl(context, args[1]), \")\");\n    },\n};\nOperators['<='] = {\n    getReturnType: function (args) {\n        return ValueTypes.BOOLEAN;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 2);\n        assertNumbers(args);\n        return \"(\".concat(expressionToGlsl(context, args[0]), \" <= \").concat(expressionToGlsl(context, args[1]), \")\");\n    },\n};\nfunction getEqualOperator(operator) {\n    return {\n        getReturnType: function (args) {\n            return ValueTypes.BOOLEAN;\n        },\n        toGlsl: function (context, args) {\n            assertArgsCount(args, 2);\n            // find common type\n            var type = ValueTypes.ANY;\n            for (var i = 0; i < args.length; i++) {\n                type &= getValueType(args[i]);\n            }\n            if (type === ValueTypes.NONE) {\n                throw new Error(\"All arguments should be of compatible type, got \".concat(JSON.stringify(args), \" instead\"));\n            }\n            // Since it's not possible to have color types here, we can leave it out\n            // This fixes issues in case the value type is ambiguously detected as a color (e.g. the string 'red')\n            type &= ~ValueTypes.COLOR;\n            return \"(\".concat(expressionToGlsl(context, args[0], type), \" \").concat(operator, \" \").concat(expressionToGlsl(context, args[1], type), \")\");\n        },\n    };\n}\nOperators['=='] = getEqualOperator('==');\nOperators['!='] = getEqualOperator('!=');\nOperators['!'] = {\n    getReturnType: function (args) {\n        return ValueTypes.BOOLEAN;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 1);\n        assertBoolean(args[0]);\n        return \"(!\".concat(expressionToGlsl(context, args[0]), \")\");\n    },\n};\nfunction getDecisionOperator(operator) {\n    return {\n        getReturnType: function (args) {\n            return ValueTypes.BOOLEAN;\n        },\n        toGlsl: function (context, args) {\n            assertArgsMinCount(args, 2);\n            for (var i = 0; i < args.length; i++) {\n                assertBoolean(args[i]);\n            }\n            var result = '';\n            result = args\n                .map(function (arg) { return expressionToGlsl(context, arg); })\n                .join(\" \".concat(operator, \" \"));\n            result = \"(\".concat(result, \")\");\n            return result;\n        },\n    };\n}\nOperators['all'] = getDecisionOperator('&&');\nOperators['any'] = getDecisionOperator('||');\nOperators['between'] = {\n    getReturnType: function (args) {\n        return ValueTypes.BOOLEAN;\n    },\n    toGlsl: function (context, args) {\n        assertArgsCount(args, 3);\n        assertNumbers(args);\n        var min = expressionToGlsl(context, args[1]);\n        var max = expressionToGlsl(context, args[2]);\n        var value = expressionToGlsl(context, args[0]);\n        return \"(\".concat(value, \" >= \").concat(min, \" && \").concat(value, \" <= \").concat(max, \")\");\n    },\n};\nOperators['array'] = {\n    getReturnType: function (args) {\n        return ValueTypes.NUMBER_ARRAY;\n    },\n    toGlsl: function (context, args) {\n        assertArgsMinCount(args, 2);\n        assertArgsMaxCount(args, 4);\n        assertNumbers(args);\n        var parsedArgs = args.map(function (val) {\n            return expressionToGlsl(context, val, ValueTypes.NUMBER);\n        });\n        return \"vec\".concat(args.length, \"(\").concat(parsedArgs.join(', '), \")\");\n    },\n};\nOperators['color'] = {\n    getReturnType: function (args) {\n        return ValueTypes.COLOR;\n    },\n    toGlsl: function (context, args) {\n        assertArgsMinCount(args, 3);\n        assertArgsMaxCount(args, 4);\n        assertNumbers(args);\n        var array = /** @type {Array<number>} */ (args);\n        if (args.length === 3) {\n            array.push(1);\n        }\n        var parsedArgs = args.map(function (val, i) {\n            return (expressionToGlsl(context, val, ValueTypes.NUMBER) +\n                (i < 3 ? ' / 255.0' : ''));\n        });\n        return \"vec\".concat(args.length, \"(\").concat(parsedArgs.join(', '), \")\");\n    },\n};\nOperators['interpolate'] = {\n    getReturnType: function (args) {\n        var type = ValueTypes.COLOR | ValueTypes.NUMBER;\n        for (var i = 3; i < args.length; i += 2) {\n            type = type & getValueType(args[i]);\n        }\n        return type;\n    },\n    toGlsl: function (context, args, opt_typeHint) {\n        assertArgsEven(args);\n        assertArgsMinCount(args, 6);\n        // validate interpolation type\n        var type = args[0];\n        var interpolation;\n        switch (type[0]) {\n            case 'linear':\n                interpolation = 1;\n                break;\n            case 'exponential':\n                interpolation = type[1];\n                break;\n            default:\n                interpolation = null;\n        }\n        if (!interpolation) {\n            throw new Error(\"Invalid interpolation type for \\\"interpolate\\\" operator, received: \".concat(JSON.stringify(type)));\n        }\n        // compute input/output types\n        var typeHint = opt_typeHint !== undefined ? opt_typeHint : ValueTypes.ANY;\n        var outputType = Operators['interpolate'].getReturnType(args) & typeHint;\n        assertUniqueInferredType(args, outputType);\n        var input = expressionToGlsl(context, args[1]);\n        var exponent = numberToGlsl(interpolation);\n        var result = '';\n        for (var i = 2; i < args.length - 2; i += 2) {\n            var stop1 = expressionToGlsl(context, args[i]);\n            var output1 = result || expressionToGlsl(context, args[i + 1], outputType);\n            var stop2 = expressionToGlsl(context, args[i + 2]);\n            var output2 = expressionToGlsl(context, args[i + 3], outputType);\n            result = \"mix(\".concat(output1, \", \").concat(output2, \", pow(clamp((\").concat(input, \" - \").concat(stop1, \") / (\").concat(stop2, \" - \").concat(stop1, \"), 0.0, 1.0), \").concat(exponent, \"))\");\n        }\n        return result;\n    },\n};\nOperators['match'] = {\n    getReturnType: function (args) {\n        var type = ValueTypes.ANY;\n        for (var i = 2; i < args.length; i += 2) {\n            type = type & getValueType(args[i]);\n        }\n        type = type & getValueType(args[args.length - 1]);\n        return type;\n    },\n    toGlsl: function (context, args, opt_typeHint) {\n        assertArgsEven(args);\n        assertArgsMinCount(args, 4);\n        var typeHint = opt_typeHint !== undefined ? opt_typeHint : ValueTypes.ANY;\n        var outputType = Operators['match'].getReturnType(args) & typeHint;\n        assertUniqueInferredType(args, outputType);\n        var input = expressionToGlsl(context, args[0]);\n        var fallback = expressionToGlsl(context, args[args.length - 1], outputType);\n        var result = null;\n        for (var i = args.length - 3; i >= 1; i -= 2) {\n            var match = expressionToGlsl(context, args[i]);\n            var output = expressionToGlsl(context, args[i + 1], outputType);\n            result = \"(\".concat(input, \" == \").concat(match, \" ? \").concat(output, \" : \").concat(result || fallback, \")\");\n        }\n        return result;\n    },\n};\nOperators['case'] = {\n    getReturnType: function (args) {\n        var type = ValueTypes.ANY;\n        for (var i = 1; i < args.length; i += 2) {\n            type = type & getValueType(args[i]);\n        }\n        type = type & getValueType(args[args.length - 1]);\n        return type;\n    },\n    toGlsl: function (context, args, opt_typeHint) {\n        assertArgsOdd(args);\n        assertArgsMinCount(args, 3);\n        var typeHint = opt_typeHint !== undefined ? opt_typeHint : ValueTypes.ANY;\n        var outputType = Operators['case'].getReturnType(args) & typeHint;\n        assertUniqueInferredType(args, outputType);\n        for (var i = 0; i < args.length - 1; i += 2) {\n            assertBoolean(args[i]);\n        }\n        var fallback = expressionToGlsl(context, args[args.length - 1], outputType);\n        var result = null;\n        for (var i = args.length - 3; i >= 0; i -= 2) {\n            var condition = expressionToGlsl(context, args[i]);\n            var output = expressionToGlsl(context, args[i + 1], outputType);\n            result = \"(\".concat(condition, \" ? \").concat(output, \" : \").concat(result || fallback, \")\");\n        }\n        return result;\n    },\n};\n//# sourceMappingURL=expressions.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/WebGLTile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport LayerProperty from '../layer/Property.js';\nimport WebGLTileLayerRenderer, { Attributes, Uniforms, } from '../renderer/webgl/TileLayer.js';\nimport { PALETTE_TEXTURE_ARRAY, ValueTypes, expressionToGlsl, getStringNumberEquivalent, uniformNameForVariable, } from '../style/expressions.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {import(\"../source/DataTile.js\").default|import(\"../source/TileImage.js\").default} SourceType\n */\n/**\n * @typedef {Object} Style\n * Translates tile data to rendered pixels.\n *\n * @property {Object<string, (string|number)>} [variables] Style variables.  Each variable must hold a number or string.  These\n * variables can be used in the `color`, `brightness`, `contrast`, `exposure`, `saturation` and `gamma`\n * {@link import(\"../style/expressions.js\").ExpressionValue expressions}, using the `['var', 'varName']` operator.\n * To update style variables, use the {@link import(\"./WebGLTile.js\").default#updateStyleVariables} method.\n * @property {import(\"../style/expressions.js\").ExpressionValue} [color] An expression applied to color values.\n * @property {import(\"../style/expressions.js\").ExpressionValue} [brightness=0] Value used to decrease or increase\n * the layer brightness.  Values range from -1 to 1.\n * @property {import(\"../style/expressions.js\").ExpressionValue} [contrast=0] Value used to decrease or increase\n * the layer contrast.  Values range from -1 to 1.\n * @property {import(\"../style/expressions.js\").ExpressionValue} [exposure=0] Value used to decrease or increase\n * the layer exposure.  Values range from -1 to 1.\n * @property {import(\"../style/expressions.js\").ExpressionValue} [saturation=0] Value used to decrease or increase\n * the layer saturation.  Values range from -1 to 1.\n * @property {import(\"../style/expressions.js\").ExpressionValue} [gamma=1] Apply a gamma correction to the layer.\n * Values range from 0 to infinity.\n */\n/**\n * @typedef {Object} Options\n * @property {Style} [style] Style to apply to the layer.\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {SourceType} [source] Source for this layer.\n * @property {Array<SourceType>|function(import(\"../extent.js\").Extent, number):Array<SourceType>} [sources] Array\n * of sources for this layer. Takes precedence over `source`. Can either be an array of sources, or a function that\n * expects an extent and a resolution (in view projection units per pixel) and returns an array of sources. See\n * {@link module:ol/source.sourcesFromTileGrid} for a helper function to generate sources that are organized in a\n * pyramid following the same pattern as a tile grid. **Note:** All sources must have the same band count and content.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map~Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {number} [cacheSize=512] The internal texture cache size.  This needs to be large enough to render\n * two zoom levels worth of tiles.\n */\n/**\n * @typedef {Object} ParsedStyle\n * @property {string} vertexShader The vertex shader.\n * @property {string} fragmentShader The fragment shader.\n * @property {Object<string,import(\"../webgl/Helper.js\").UniformValue>} uniforms Uniform definitions.\n * @property {Array<import(\"../webgl/PaletteTexture.js\").default>} paletteTextures Palette textures.\n */\n/**\n * @param {Style} style The layer style.\n * @param {number} [bandCount] The number of bands.\n * @return {ParsedStyle} Shaders and uniforms generated from the style.\n */\nfunction parseStyle(style, bandCount) {\n    var vertexShader = \"\\n    attribute vec2 \".concat(Attributes.TEXTURE_COORD, \";\\n    uniform mat4 \").concat(Uniforms.TILE_TRANSFORM, \";\\n    uniform float \").concat(Uniforms.TEXTURE_PIXEL_WIDTH, \";\\n    uniform float \").concat(Uniforms.TEXTURE_PIXEL_HEIGHT, \";\\n    uniform float \").concat(Uniforms.TEXTURE_RESOLUTION, \";\\n    uniform float \").concat(Uniforms.TEXTURE_ORIGIN_X, \";\\n    uniform float \").concat(Uniforms.TEXTURE_ORIGIN_Y, \";\\n    uniform float \").concat(Uniforms.DEPTH, \";\\n\\n    varying vec2 v_textureCoord;\\n    varying vec2 v_mapCoord;\\n\\n    void main() {\\n      v_textureCoord = \").concat(Attributes.TEXTURE_COORD, \";\\n      v_mapCoord = vec2(\\n        \").concat(Uniforms.TEXTURE_ORIGIN_X, \" + \").concat(Uniforms.TEXTURE_RESOLUTION, \" * \").concat(Uniforms.TEXTURE_PIXEL_WIDTH, \" * v_textureCoord[0],\\n        \").concat(Uniforms.TEXTURE_ORIGIN_Y, \" - \").concat(Uniforms.TEXTURE_RESOLUTION, \" * \").concat(Uniforms.TEXTURE_PIXEL_HEIGHT, \" * v_textureCoord[1]\\n      );\\n      gl_Position = \").concat(Uniforms.TILE_TRANSFORM, \" * vec4(\").concat(Attributes.TEXTURE_COORD, \", \").concat(Uniforms.DEPTH, \", 1.0);\\n    }\\n  \");\n    /**\n     * @type {import(\"../style/expressions.js\").ParsingContext}\n     */\n    var context = {\n        inFragmentShader: true,\n        variables: [],\n        attributes: [],\n        stringLiteralsMap: {},\n        functions: {},\n        bandCount: bandCount,\n    };\n    var pipeline = [];\n    if (style.color !== undefined) {\n        var color = expressionToGlsl(context, style.color, ValueTypes.COLOR);\n        pipeline.push(\"color = \".concat(color, \";\"));\n    }\n    if (style.contrast !== undefined) {\n        var contrast = expressionToGlsl(context, style.contrast, ValueTypes.NUMBER);\n        pipeline.push(\"color.rgb = clamp((\".concat(contrast, \" + 1.0) * color.rgb - (\").concat(contrast, \" / 2.0), vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));\"));\n    }\n    if (style.exposure !== undefined) {\n        var exposure = expressionToGlsl(context, style.exposure, ValueTypes.NUMBER);\n        pipeline.push(\"color.rgb = clamp((\".concat(exposure, \" + 1.0) * color.rgb, vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));\"));\n    }\n    if (style.saturation !== undefined) {\n        var saturation = expressionToGlsl(context, style.saturation, ValueTypes.NUMBER);\n        pipeline.push(\"\\n      float saturation = \".concat(saturation, \" + 1.0;\\n      float sr = (1.0 - saturation) * 0.2126;\\n      float sg = (1.0 - saturation) * 0.7152;\\n      float sb = (1.0 - saturation) * 0.0722;\\n      mat3 saturationMatrix = mat3(\\n        sr + saturation, sr, sr,\\n        sg, sg + saturation, sg,\\n        sb, sb, sb + saturation\\n      );\\n      color.rgb = clamp(saturationMatrix * color.rgb, vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));\\n    \"));\n    }\n    if (style.gamma !== undefined) {\n        var gamma = expressionToGlsl(context, style.gamma, ValueTypes.NUMBER);\n        pipeline.push(\"color.rgb = pow(color.rgb, vec3(1.0 / \".concat(gamma, \"));\"));\n    }\n    if (style.brightness !== undefined) {\n        var brightness = expressionToGlsl(context, style.brightness, ValueTypes.NUMBER);\n        pipeline.push(\"color.rgb = clamp(color.rgb + \".concat(brightness, \", vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0));\"));\n    }\n    /** @type {Object<string,import(\"../webgl/Helper\").UniformValue>} */\n    var uniforms = {};\n    var numVariables = context.variables.length;\n    if (numVariables > 1 && !style.variables) {\n        throw new Error(\"Missing variables in style (expected \".concat(context.variables, \")\"));\n    }\n    var _loop_1 = function (i) {\n        var variableName = context.variables[i];\n        if (!(variableName in style.variables)) {\n            throw new Error(\"Missing '\".concat(variableName, \"' in style variables\"));\n        }\n        var uniformName = uniformNameForVariable(variableName);\n        uniforms[uniformName] = function () {\n            var value = style.variables[variableName];\n            if (typeof value === 'string') {\n                value = getStringNumberEquivalent(context, value);\n            }\n            return value !== undefined ? value : -9999999; // to avoid matching with the first string literal\n        };\n    };\n    for (var i = 0; i < numVariables; ++i) {\n        _loop_1(i);\n    }\n    var uniformDeclarations = Object.keys(uniforms).map(function (name) {\n        return \"uniform float \".concat(name, \";\");\n    });\n    var textureCount = Math.ceil(bandCount / 4);\n    uniformDeclarations.push(\"uniform sampler2D \".concat(Uniforms.TILE_TEXTURE_ARRAY, \"[\").concat(textureCount, \"];\"));\n    if (context.paletteTextures) {\n        uniformDeclarations.push(\"uniform sampler2D \".concat(PALETTE_TEXTURE_ARRAY, \"[\").concat(context.paletteTextures.length, \"];\"));\n    }\n    var functionDefintions = Object.keys(context.functions).map(function (name) {\n        return context.functions[name];\n    });\n    var fragmentShader = \"\\n    #ifdef GL_FRAGMENT_PRECISION_HIGH\\n    precision highp float;\\n    #else\\n    precision mediump float;\\n    #endif\\n\\n    varying vec2 v_textureCoord;\\n    varying vec2 v_mapCoord;\\n    uniform vec4 \".concat(Uniforms.RENDER_EXTENT, \";\\n    uniform float \").concat(Uniforms.TRANSITION_ALPHA, \";\\n    uniform float \").concat(Uniforms.TEXTURE_PIXEL_WIDTH, \";\\n    uniform float \").concat(Uniforms.TEXTURE_PIXEL_HEIGHT, \";\\n    uniform float \").concat(Uniforms.RESOLUTION, \";\\n    uniform float \").concat(Uniforms.ZOOM, \";\\n\\n    \").concat(uniformDeclarations.join('\\n'), \"\\n\\n    \").concat(functionDefintions.join('\\n'), \"\\n\\n    void main() {\\n      if (\\n        v_mapCoord[0] < \").concat(Uniforms.RENDER_EXTENT, \"[0] ||\\n        v_mapCoord[1] < \").concat(Uniforms.RENDER_EXTENT, \"[1] ||\\n        v_mapCoord[0] > \").concat(Uniforms.RENDER_EXTENT, \"[2] ||\\n        v_mapCoord[1] > \").concat(Uniforms.RENDER_EXTENT, \"[3]\\n      ) {\\n        discard;\\n      }\\n\\n      vec4 color = texture2D(\").concat(Uniforms.TILE_TEXTURE_ARRAY, \"[0],  v_textureCoord);\\n\\n      \").concat(pipeline.join('\\n'), \"\\n\\n      if (color.a == 0.0) {\\n        discard;\\n      }\\n\\n      gl_FragColor = color;\\n      gl_FragColor.rgb *= gl_FragColor.a;\\n      gl_FragColor *= \").concat(Uniforms.TRANSITION_ALPHA, \";\\n    }\");\n    return {\n        vertexShader: vertexShader,\n        fragmentShader: fragmentShader,\n        uniforms: uniforms,\n        paletteTextures: context.paletteTextures,\n    };\n}\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends BaseTileLayer<SourceType, WebGLTileLayerRenderer>\n * @fires import(\"../render/Event.js\").RenderEvent\n * @api\n */\nvar WebGLTileLayer = /** @class */ (function (_super) {\n    __extends(WebGLTileLayer, _super);\n    /**\n     * @param {Options} opt_options Tile layer options.\n     */\n    function WebGLTileLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? assign({}, opt_options) : {};\n        var style = options.style || {};\n        delete options.style;\n        var cacheSize = options.cacheSize;\n        delete options.cacheSize;\n        _this = _super.call(this, options) || this;\n        /**\n         * @type {Array<SourceType>|function(import(\"../extent.js\").Extent, number):Array<SourceType>}\n         * @private\n         */\n        _this.sources_ = options.sources;\n        /**\n         * @type {SourceType|null}\n         * @private\n         */\n        _this.renderedSource_ = null;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.renderedResolution_ = NaN;\n        /**\n         * @type {Style}\n         * @private\n         */\n        _this.style_ = style;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.cacheSize_ = cacheSize;\n        /**\n         * @type {Object<string, (string|number)>}\n         * @private\n         */\n        _this.styleVariables_ = _this.style_.variables || {};\n        _this.addChangeListener(LayerProperty.SOURCE, _this.handleSourceUpdate_);\n        return _this;\n    }\n    /**\n     * Gets the sources for this layer, for a given extent and resolution.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<SourceType>} Sources.\n     */\n    WebGLTileLayer.prototype.getSources = function (extent, resolution) {\n        var source = this.getSource();\n        return this.sources_\n            ? typeof this.sources_ === 'function'\n                ? this.sources_(extent, resolution)\n                : this.sources_\n            : source\n                ? [source]\n                : [];\n    };\n    /**\n     * @return {SourceType} The source being rendered.\n     */\n    WebGLTileLayer.prototype.getRenderSource = function () {\n        return this.renderedSource_ || this.getSource();\n    };\n    /**\n     * @return {import(\"../source/Source.js\").State} Source state.\n     */\n    WebGLTileLayer.prototype.getSourceState = function () {\n        var source = this.getRenderSource();\n        return source ? source.getState() : 'undefined';\n    };\n    /**\n     * @private\n     */\n    WebGLTileLayer.prototype.handleSourceUpdate_ = function () {\n        if (this.getSource()) {\n            this.setStyle(this.style_);\n        }\n    };\n    /**\n     * @private\n     * @return {number} The number of source bands.\n     */\n    WebGLTileLayer.prototype.getSourceBandCount_ = function () {\n        var max = Number.MAX_SAFE_INTEGER;\n        var sources = this.getSources([-max, -max, max, max], max);\n        return sources && sources.length && 'bandCount' in sources[0]\n            ? sources[0].bandCount\n            : 4;\n    };\n    WebGLTileLayer.prototype.createRenderer = function () {\n        var parsedStyle = parseStyle(this.style_, this.getSourceBandCount_());\n        return new WebGLTileLayerRenderer(this, {\n            vertexShader: parsedStyle.vertexShader,\n            fragmentShader: parsedStyle.fragmentShader,\n            uniforms: parsedStyle.uniforms,\n            cacheSize: this.cacheSize_,\n            paletteTextures: parsedStyle.paletteTextures,\n        });\n    };\n    /**\n     * @param {import(\"../PluggableMap\").FrameState} frameState Frame state.\n     * @param {Array<SourceType>} sources Sources.\n     * @return {HTMLElement} Canvas.\n     */\n    WebGLTileLayer.prototype.renderSources = function (frameState, sources) {\n        var layerRenderer = this.getRenderer();\n        var canvas;\n        for (var i = 0, ii = sources.length; i < ii; ++i) {\n            this.renderedSource_ = sources[i];\n            if (layerRenderer.prepareFrame(frameState)) {\n                canvas = layerRenderer.renderFrame(frameState);\n            }\n        }\n        return canvas;\n    };\n    /**\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target which the renderer may (but need not) use\n     * for rendering its content.\n     * @return {HTMLElement} The rendered element.\n     */\n    WebGLTileLayer.prototype.render = function (frameState, target) {\n        var _this = this;\n        this.rendered = true;\n        var viewState = frameState.viewState;\n        var sources = this.getSources(frameState.extent, viewState.resolution);\n        var ready = true;\n        var _loop_2 = function (i, ii) {\n            var source = sources[i];\n            var sourceState = source.getState();\n            if (sourceState == 'loading') {\n                var onChange_1 = function () {\n                    if (source.getState() == 'ready') {\n                        source.removeEventListener('change', onChange_1);\n                        _this.changed();\n                    }\n                };\n                source.addEventListener('change', onChange_1);\n            }\n            ready = ready && sourceState == 'ready';\n        };\n        for (var i = 0, ii = sources.length; i < ii; ++i) {\n            _loop_2(i, ii);\n        }\n        var canvas = this.renderSources(frameState, sources);\n        if (this.getRenderer().renderComplete && ready) {\n            // Fully rendered, done.\n            this.renderedResolution_ = viewState.resolution;\n            return canvas;\n        }\n        // Render sources from previously fully rendered frames\n        if (this.renderedResolution_ > 0.5 * viewState.resolution) {\n            var altSources = this.getSources(frameState.extent, this.renderedResolution_).filter(function (source) { return !sources.includes(source); });\n            if (altSources.length > 0) {\n                return this.renderSources(frameState, altSources);\n            }\n        }\n        return canvas;\n    };\n    /**\n     * Update the layer style.  The `updateStyleVariables` function is a more efficient\n     * way to update layer rendering.  In cases where the whole style needs to be updated,\n     * this method may be called instead.  Note that calling this method will also replace\n     * any previously set variables, so the new style also needs to include new variables,\n     * if needed.\n     * @param {Style} style The new style.\n     */\n    WebGLTileLayer.prototype.setStyle = function (style) {\n        this.styleVariables_ = style.variables || {};\n        this.style_ = style;\n        var parsedStyle = parseStyle(this.style_, this.getSourceBandCount_());\n        var renderer = this.getRenderer();\n        renderer.reset({\n            vertexShader: parsedStyle.vertexShader,\n            fragmentShader: parsedStyle.fragmentShader,\n            uniforms: parsedStyle.uniforms,\n            paletteTextures: parsedStyle.paletteTextures,\n        });\n        this.changed();\n    };\n    /**\n     * Update any variables used by the layer style and trigger a re-render.\n     * @param {Object<string, number>} variables Variables to update.\n     * @api\n     */\n    WebGLTileLayer.prototype.updateStyleVariables = function (variables) {\n        assign(this.styleVariables_, variables);\n        this.changed();\n    };\n    return WebGLTileLayer;\n}(BaseTileLayer));\n/**\n * Clean up underlying WebGL resources.\n * @function\n * @api\n */\nWebGLTileLayer.prototype.dispose;\nexport default WebGLTileLayer;\n//# sourceMappingURL=WebGLTile.js.map"],"sourceRoot":""}