{"version":3,"sources":["webpack:///./src/hooks/updateMapSize.js","webpack:///./src/views/third-party-map-display/tile-arc-gis/index.vue?3f6d","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/source/TileArcGISRest.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/uri.js","webpack:///./src/views/third-party-map-display/tile-arc-gis/index.vue","webpack:///./src/views/third-party-map-display/tile-arc-gis/index.vue?c9a2"],"names":["map","targetNode","document","querySelector","observer","MutationObserver","mutationsList","mutation","type","attributeName","i","length","updateSize","observe","attributes","childList","subtree","onBeforeUnmount","disconnect","extendStatics","__extends","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","this","constructor","create","_super","TileArcGISRest","opt_options","_this","options","interpolate","undefined","imageSmoothing","attributions","cacheSize","crossOrigin","projection","reprojectionErrorThreshold","tileGrid","tileLoadFunction","url","urls","wrapX","transition","zDirection","params_","params","hidpi_","hidpi","tmpExtent_","setKey","getKeyForParams_","res","key","join","getParams","getRequestUrl_","tileCoord","tileSize","tileExtent","pixelRatio","srid","getCode","split","pop","Math","round","uri","keyParams","keys","forEach","k","push","encodeURIComponent","qs","replace","indexOf","appendParams","getTilePixelRatio","updateParams","tileUrlFunction","getTileGrid","getTileGridForProjection","getResolutions","getTileCoordExtent","getTileSize","tmpSize","baseParams","TileImage","arcGISSource","ATTRIBUTIONS","arcGISLayers","Tile","source","extent","onMounted","Map","target","layers","view","View","center","zoom","addLayer","updateMapSize","__exports__"],"mappings":"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","file":"js/chunk-142392b7.624ba5b5.js","sourcesContent":["import { onBeforeUnmount } from \"vue\";\n\n/**\n * 监听侧边栏，侧边栏发生变化更新地图\n * @param {ol.Map} map 地图实例\n */\nexport default (...map) => {\n  // 选择需要观察变动的节点\n  const targetNode = document.querySelector(\n    \".el-aside .menu .el-scrollbar__view\"\n  );\n  // 观察器的配置（需要观察什么变动）\n  const config = { attributes: true, childList: true, subtree: true };\n  // 当观察到变动时执行的回调函数\n  const callback = function (mutationsList) {\n    // Use traditional 'for loops' for IE 11\n    for (let mutation of mutationsList) {\n      if (mutation.type === \"childList\") {\n        // console.log(\"已添加或删除子节点。\");\n      } else if (\n        mutation.type === \"attributes\" &&\n        mutation.attributeName === \"style\"\n      ) {\n        for (let i = 0; i < map.length; i++) {\n          map[i].updateSize();\n        }\n\n        // console.log(\"这个 \" + mutation.attributeName + \" 属性被修改。\");\n      }\n    }\n  };\n  // 创建一个观察器实例并传入回调函数\n  const observer = new MutationObserver(callback);\n\n  // 以上述配置开始观察目标节点\n  observer.observe(targetNode, config);\n\n  //卸载前\n  onBeforeUnmount(() => {\n    observer.disconnect();\n  });\n};\n","export * from \"-!../../../../node_modules/.pnpm/mini-css-extract-plugin@0.9.0_webpack@4.47.0/node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../../node_modules/.pnpm/css-loader@3.6.0_webpack@4.47.0/node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/.pnpm/vue-loader@16.8.3_@vue+compiler-sfc@3.4.6_vue@3.4.6_webpack@4.47.0/node_modules/vue-loader/dist/stylePostLoader.js!../../../../node_modules/.pnpm/postcss-loader@3.0.0/node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/.pnpm/cache-loader@4.1.0_webpack@4.47.0/node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/.pnpm/vue-loader@16.8.3_@vue+compiler-sfc@3.4.6_vue@3.4.6_webpack@4.47.0/node_modules/vue-loader/dist/index.js??ref--1-1!./index.vue?vue&type=style&index=0&id=06b0c667&scoped=true&lang=css\"","/**\n * @module ol/source/TileArcGISRest\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileImage from './TileImage.js';\nimport { appendParams } from '../uri.js';\nimport { assign } from '../obj.js';\nimport { createEmpty } from '../extent.js';\nimport { modulo } from '../math.js';\nimport { scale as scaleSize, toSize } from '../size.js';\nimport { hash as tileCoordHash } from '../tilecoord.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service defaults will be\n * used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is `IMAGE` by\n * default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`,\n * and `IMAGESR` will be set dynamically. Set `LAYERS` to\n * override the default service layer visibility. See\n * https://developers.arcgis.com/rest/services-reference/export-map.htm\n * for further reference.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * The projection code must contain a numeric end portion separated by :\n * or the entire code must form a valid ArcGIS SpatialReference definition.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL.\n * The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The\n * url should include /MapServer or /ImageServer.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.  To disable the opacity\n * transition, pass `transition: 0`.\n * @property {Array<string>} [urls] ArcGIS Rest service urls. Use this instead of `url` when the ArcGIS\n * Service supports multiple urls for export requests.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n/**\n * @classdesc\n * Layer source for tile data from ArcGIS Rest services. Map and Image\n * Services are supported.\n *\n * For cached ArcGIS services, better performance is available using the\n * {@link module:ol/source/XYZ~XYZ} data source.\n * @api\n */\nvar TileArcGISRest = /** @class */ (function (_super) {\n    __extends(TileArcGISRest, _super);\n    /**\n     * @param {Options} [opt_options] Tile ArcGIS Rest options.\n     */\n    function TileArcGISRest(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var interpolate = options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n        if (options.interpolate !== undefined) {\n            interpolate = options.interpolate;\n        }\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            interpolate: interpolate,\n            projection: options.projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileGrid: options.tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @private\n         * @type {!Object}\n         */\n        _this.params_ = options.params || {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.tmpExtent_ = createEmpty();\n        _this.setKey(_this.getKeyForParams_());\n        return _this;\n    }\n    /**\n     * @private\n     * @return {string} The key for the current params.\n     */\n    TileArcGISRest.prototype.getKeyForParams_ = function () {\n        var i = 0;\n        var res = [];\n        for (var key in this.params_) {\n            res[i++] = key + '-' + this.params_[key];\n        }\n        return res.join('/');\n    };\n    /**\n     * Get the user-provided params, i.e. those passed to the constructor through\n     * the \"params\" option, and possibly updated using the updateParams method.\n     * @return {Object} Params.\n     * @api\n     */\n    TileArcGISRest.prototype.getParams = function () {\n        return this.params_;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../size.js\").Size} tileSize Tile size.\n     * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {Object} params Params.\n     * @return {string|undefined} Request URL.\n     * @private\n     */\n    TileArcGISRest.prototype.getRequestUrl_ = function (tileCoord, tileSize, tileExtent, pixelRatio, projection, params) {\n        var urls = this.urls;\n        if (!urls) {\n            return undefined;\n        }\n        // ArcGIS Server only wants the numeric portion of the projection ID.\n        // (if there is no numeric portion the entire projection code must\n        // form a valid ArcGIS SpatialReference definition).\n        var srid = projection\n            .getCode()\n            .split(/:(?=\\d+$)/)\n            .pop();\n        params['SIZE'] = tileSize[0] + ',' + tileSize[1];\n        params['BBOX'] = tileExtent.join(',');\n        params['BBOXSR'] = srid;\n        params['IMAGESR'] = srid;\n        params['DPI'] = Math.round(params['DPI'] ? params['DPI'] * pixelRatio : 90 * pixelRatio);\n        var url;\n        if (urls.length == 1) {\n            url = urls[0];\n        }\n        else {\n            var index = modulo(tileCoordHash(tileCoord), urls.length);\n            url = urls[index];\n        }\n        var modifiedUrl = url\n            .replace(/MapServer\\/?$/, 'MapServer/export')\n            .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n        return appendParams(modifiedUrl, params);\n    };\n    /**\n     * Get the tile pixel ratio for this source.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Tile pixel ratio.\n     */\n    TileArcGISRest.prototype.getTilePixelRatio = function (pixelRatio) {\n        return this.hidpi_ ? pixelRatio : 1;\n    };\n    /**\n     * Update the user-provided params.\n     * @param {Object} params Params.\n     * @api\n     */\n    TileArcGISRest.prototype.updateParams = function (params) {\n        assign(this.params_, params);\n        this.setKey(this.getKeyForParams_());\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n     * @param {number} pixelRatio The pixel ratio\n     * @param {import(\"../proj/Projection.js\").default} projection The projection\n     * @return {string|undefined} The tile URL\n     * @override\n     */\n    TileArcGISRest.prototype.tileUrlFunction = function (tileCoord, pixelRatio, projection) {\n        var tileGrid = this.getTileGrid();\n        if (!tileGrid) {\n            tileGrid = this.getTileGridForProjection(projection);\n        }\n        if (tileGrid.getResolutions().length <= tileCoord[0]) {\n            return undefined;\n        }\n        if (pixelRatio != 1 && !this.hidpi_) {\n            pixelRatio = 1;\n        }\n        var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n        var tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n        if (pixelRatio != 1) {\n            tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n        }\n        // Apply default params and override with user specified values.\n        var baseParams = {\n            'F': 'image',\n            'FORMAT': 'PNG32',\n            'TRANSPARENT': true,\n        };\n        assign(baseParams, this.params_);\n        return this.getRequestUrl_(tileCoord, tileSize, tileExtent, pixelRatio, projection, baseParams);\n    };\n    return TileArcGISRest;\n}(TileImage));\nexport default TileArcGISRest;\n//# sourceMappingURL=TileArcGISRest.js.map","/**\n * @module ol/uri\n */\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n    var keyParams = [];\n    // Skip any null or undefined parameter values\n    Object.keys(params).forEach(function (k) {\n        if (params[k] !== null && params[k] !== undefined) {\n            keyParams.push(k + '=' + encodeURIComponent(params[k]));\n        }\n    });\n    var qs = keyParams.join('&');\n    // remove any trailing ? or &\n    uri = uri.replace(/[?&]$/, '');\n    // append ? or & depending on whether uri has existing parameters\n    uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n    return uri + qs;\n}\n//# sourceMappingURL=uri.js.map","<template>\n  <div id=\"map\"></div>\n</template>\n\n<script setup>\n  import \"ol/ol.css\";\n  import { onMounted } from \"vue\";\n  import { Map, View } from \"ol\";\n  import { Tile } from \"ol/layer\";\n  import { TileArcGISRest } from \"ol/source\";\n  import { ATTRIBUTIONS } from \"@/constants\";\n  import updateMapSize from \"@/hooks/updateMapSize\";\n\n  const arcGISSource = new TileArcGISRest({\n    attributions: ATTRIBUTIONS,\n    //ArcGIS Rest服务url,url中包括MapServer或ImageServer\n    url:\n      \"http://sampleserver1.arcgisonline.com/ArcGIS/rest/services/\" +\n      \"Specialty/ESRI_StateCityHighway_USA/MapServer\",\n  });\n  const arcGISLayers = new Tile({\n    source: arcGISSource,\n    extent: [-13884991, 2870341, -7455066, 6338219],\n  });\n  const initMap = () => {\n    return new Map({\n      //初始化map\n      target: \"map\",\n      //地图容器中加载的图层\n      layers: [],\n      //地图视图设置\n      view: new View({\n        //地图初始中心点\n        center: [-10997148, 4569099],\n        zoom: 5, //地图初始显示级别\n      }),\n    });\n  };\n  onMounted(() => {\n    const map = initMap();\n    //添加瓦片地图图层\n    map.addLayer(arcGISLayers);\n    // 侧边栏变化更新地图\n    updateMapSize(map);\n  });\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n  #map {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n  }\n</style>\n","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=06b0c667&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/openlayers/openlayers/node_modules/.pnpm/vue-loader@16.8.3_@vue+compiler-sfc@3.4.6_vue@3.4.6_webpack@4.47.0/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-06b0c667\"]])\n\nexport default __exports__"],"sourceRoot":""}