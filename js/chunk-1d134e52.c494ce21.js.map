{"version":3,"sources":["webpack:///./src/hooks/updateMapSize.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/geom/MultiPoint.js","webpack:///./src/views/map-marker/street-marked/index.vue?3218","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/geom/GeometryCollection.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/format/JSONFeature.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/format/GeoJSON.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/geom/flat/interpolate.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/geom/MultiPolygon.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/geom/flat/center.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/geom/MultiLineString.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/style/Text.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/format/Feature.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/control/FullScreen.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/geom/LineString.js","webpack:///./src/views/map-marker/street-marked/index.vue","webpack:///./src/views/map-marker/street-marked/index.vue?a25f"],"names":["map","targetNode","document","querySelector","observer","MutationObserver","mutationsList","mutation","type","attributeName","i","length","updateSize","observe","attributes","childList","subtree","onBeforeUnmount","disconnect","extendStatics","__extends","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","this","constructor","create","MultiPoint","_super","coordinates","opt_layout","_this","isArray","setFlatCoordinates","setCoordinates","appendPoint","point","flatCoordinates","getFlatCoordinates","slice","changed","clone","multiPoint","layout","applyProperties","closestPointXY","x","y","closestPoint","minSquaredDistance","getExtent","stride","ii","squaredDistance","j","getCoordinates","getPoint","index","n","getPoints","points","push","getType","intersectsExtent","extent","setLayout","GeometryCollection","opt_geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","forEach","CHANGE","geometryCollection","setGeometries","geometries","containsXY","computeExtent","getGeometries","cloneGeometries","getGeometriesArray","getGeometriesArrayRecursive","geometriesArray","concat","getSimplifiedGeometry","squaredTolerance","simplifiedGeometryRevision","getRevision","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometries","simplified","geometry","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","isEmpty","rotate","angle","anchor","scale","sx","opt_sy","opt_anchor","applyTransform","transformFn","translate","deltaX","deltaY","disposeInternal","clonedGeometries","getObject","source","object","JSON","parse","JSONFeature","readFeature","opt_options","readFeatureFromObject","getReadOptions","readFeatures","readFeaturesFromObject","readGeometry","readGeometryFromObject","readProjection","readProjectionFromObject","writeFeature","feature","stringify","writeFeatureObject","writeFeatures","features","writeFeaturesObject","writeGeometry","writeGeometryObject","GeoJSON","options","dataProjection","featureProjection","defaultFeatureProjection","geometryName_","geometryName","extractGeometryName_","extractGeometryName","supportedMediaTypes","geoJSONFeature","Feature","setGeometryName","undefined","setGeometry","setId","setProperties","geoJSONFeatures","projection","crs","adaptOptions","properties","id","getId","hasProperties","getProperties","getGeometry","getGeometryName","objects","Point","readPointGeometry","LineString","readLineStringGeometry","Polygon","readPolygonGeometry","readMultiPointGeometry","MultiLineString","readMultiLineStringGeometry","MultiPolygon","readMultiPolygonGeometry","readGeometryCollectionGeometry","Error","geoJSON","writePointGeometry","writeLineStringGeometry","right","rightHanded","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","interpolatePoint","offset","end","fraction","opt_dest","opt_dimension","o","t","x1","y1","length_1","cumulativeLengths","x2","y2","Math","sqrt","target","dimension","dest","NaN","lineStringCoordinateAtM","m","extrapolate","coordinate","lo","hi","mid","m0","lineStringsCoordinateAtM","ends","interpolate","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","maxDelta_","maxDeltaRevision_","orientedRevision_","orientedFlatCoordinates_","getLayout","polygons","endss","polygon","getEnds","jj","appendPolygon","len","newEndss","multiPolygon","getOrientedFlatCoordinates","getArea","opt_right","orient","inflate","getEndss","getFlatInteriorPoints","flatCenters","linearRingss","getInteriorPoints","GeometryLayout","XYM","getSimplifiedGeometryInternal","simplifiedFlatCoordinates","simplifiedEndss","XY","getPolygon","prevEnds","getPolygons","deflate","lastEnds","SimpleGeometry","opt_ends","ends_","lineStrings","lineString","appendLineString","multiLineString","getCoordinateAtM","opt_extrapolate","opt_interpolate","XYZM","getLineString","getLineStrings","getFlatMidpoints","midpoints","midpoint","simplifiedEnds","Text","font_","font","rotation_","rotation","rotateWithView_","rotateWithView","scale_","scaleArray_","text_","text","textAlign_","textAlign","justify_","justify","textBaseline_","textBaseline","fill_","fill","color","maxAngle_","maxAngle","PI","placement_","placement","POINT","overflow_","overflow","stroke_","stroke","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getScale","getFont","getPlacement","getMaxAngle","getOverflow","getRotation","getRotateWithView","getText","getTextAlign","getJustify","getTextBaseline","getFill","getStroke","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","getScaleArray","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRotateWithView","setFill","setRotation","setScale","setStroke","setText","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","FeatureFormat","getUnits","TILE_PIXELS","setWorldExtent","transformGeometryWithOptions","write","transformed","transform","decimals","power_1","pow","round","events","FullScreenEventType","FullScreen","element","createElement","on","once","un","keys_","keys","source_","isInFullscreen_","boundHandleMapTargetChange_","handleMapTargetChange_","bind","cssClassName_","className","documentListeners_","activeClassName_","activeClassName","split","inactiveClassName_","inactiveClassName","label","labelNode_","createTextNode","labelActive","labelActiveNode_","tipLabel","button_","title","setAttribute","appendChild","addEventListener","CLICK","handleClick_","setClassName_","event","preventDefault","handleFullScreen_","getMap","doc","getOwnerDocument","isFullScreenSupported","isFullScreen","exitFullscreen","exitFullScreen","getElementById","getTargetElement","requestFullScreen","requestFullScreenWithKeys","handleFullScreenChange_","wasInFullscreen","dispatchEvent","fullscreen","_a","_b","_c","_d","classList","remove","apply","add","setMap","oldMap","removeChangeListener","TARGET","addChangeListener","listeners","body","requestFullscreen","fullscreenEnabled","fullscreenElement","flatMidpoint_","flatMidpointRevision_","appendCoordinate","forEachSegment","callback","getCoordinateAt","getLength","getFlatMidpoint","style","Style","Fill","raster","TileLayer","XYZ","attributions","ATTRIBUTIONS","url","MAPURL","maxZoom","viewExtent","onMounted","initMap","Map","layers","VectorLayer","declutter","VectorSource","format","get","view","View","center","getCenter","zoom","minZoom","controls","defaults","extend","updateMapSize","__exports__"],"mappings":"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","file":"js/chunk-1d134e52.c494ce21.js","sourcesContent":["import { onBeforeUnmount } from \"vue\";\n\n/**\n * 监听侧边栏，侧边栏发生变化更新地图\n * @param {ol.Map} map 地图实例\n */\nexport default (...map) => {\n  // 选择需要观察变动的节点\n  const targetNode = document.querySelector(\n    \".el-aside .menu .el-scrollbar__view\"\n  );\n  // 观察器的配置（需要观察什么变动）\n  const config = { attributes: true, childList: true, subtree: true };\n  // 当观察到变动时执行的回调函数\n  const callback = function (mutationsList) {\n    // Use traditional 'for loops' for IE 11\n    for (let mutation of mutationsList) {\n      if (mutation.type === \"childList\") {\n        // console.log(\"已添加或删除子节点。\");\n      } else if (\n        mutation.type === \"attributes\" &&\n        mutation.attributeName === \"style\"\n      ) {\n        for (let i = 0; i < map.length; i++) {\n          map[i].updateSize();\n        }\n\n        // console.log(\"这个 \" + mutation.attributeName + \" 属性被修改。\");\n      }\n    }\n  };\n  // 创建一个观察器实例并传入回调函数\n  const observer = new MutationObserver(callback);\n\n  // 以上述配置开始观察目标节点\n  observer.observe(targetNode, config);\n\n  //卸载前\n  onBeforeUnmount(() => {\n    observer.disconnect();\n  });\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { closestSquaredDistanceXY, containsXY } from '../extent.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { extend } from '../array.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nvar MultiPoint = /** @class */ (function (_super) {\n    __extends(MultiPoint, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     */\n    function MultiPoint(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        if (opt_layout && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed point to this multipoint.\n     * @param {Point} point Point.\n     * @api\n     */\n    MultiPoint.prototype.appendPoint = function (point) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = point.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, point.getFlatCoordinates());\n        }\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiPoint} Clone.\n     * @api\n     */\n    MultiPoint.prototype.clone = function () {\n        var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n        multiPoint.applyProperties(this);\n        return multiPoint;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    MultiPoint.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        var flatCoordinates = this.flatCoordinates;\n        var stride = this.stride;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var squaredDistance = squaredDx(x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n            if (squaredDistance < minSquaredDistance) {\n                minSquaredDistance = squaredDistance;\n                for (var j = 0; j < stride; ++j) {\n                    closestPoint[j] = flatCoordinates[i + j];\n                }\n                closestPoint.length = stride;\n            }\n        }\n        return minSquaredDistance;\n    };\n    /**\n     * Return the coordinates of the multipoint.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @api\n     */\n    MultiPoint.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the point at the specified index.\n     * @param {number} index Index.\n     * @return {Point} Point.\n     * @api\n     */\n    MultiPoint.prototype.getPoint = function (index) {\n        var n = !this.flatCoordinates\n            ? 0\n            : this.flatCoordinates.length / this.stride;\n        if (index < 0 || n <= index) {\n            return null;\n        }\n        return new Point(this.flatCoordinates.slice(index * this.stride, (index + 1) * this.stride), this.layout);\n    };\n    /**\n     * Return the points of this multipoint.\n     * @return {Array<Point>} Points.\n     * @api\n     */\n    MultiPoint.prototype.getPoints = function () {\n        var flatCoordinates = this.flatCoordinates;\n        var layout = this.layout;\n        var stride = this.stride;\n        /** @type {Array<Point>} */\n        var points = [];\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var point = new Point(flatCoordinates.slice(i, i + stride), layout);\n            points.push(point);\n        }\n        return points;\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./Geometry.js\").Type} Geometry type.\n     * @api\n     */\n    MultiPoint.prototype.getType = function () {\n        return 'MultiPoint';\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    MultiPoint.prototype.intersectsExtent = function (extent) {\n        var flatCoordinates = this.flatCoordinates;\n        var stride = this.stride;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            if (containsXY(extent, x, y)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Set the coordinates of the multipoint.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     * @api\n     */\n    MultiPoint.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return MultiPoint;\n}(SimpleGeometry));\nexport default MultiPoint;\n//# sourceMappingURL=MultiPoint.js.map","export * from \"-!../../../../node_modules/.pnpm/mini-css-extract-plugin@0.9.0_webpack@4.47.0/node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../../node_modules/.pnpm/css-loader@3.6.0_webpack@4.47.0/node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/.pnpm/vue-loader@16.8.3_@vue+compiler-sfc@3.4.6_vue@3.4.6_webpack@4.47.0/node_modules/vue-loader/dist/stylePostLoader.js!../../../../node_modules/.pnpm/postcss-loader@3.0.0/node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/.pnpm/cache-loader@4.1.0_webpack@4.47.0/node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/.pnpm/vue-loader@16.8.3_@vue+compiler-sfc@3.4.6_vue@3.4.6_webpack@4.47.0/node_modules/vue-loader/dist/index.js??ref--1-1!./index.vue?vue&type=style&index=0&id=400b7794&scoped=true&lang=css\"","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport { closestSquaredDistanceXY, createOrUpdateEmpty, extend, getCenter, } from '../extent.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nvar GeometryCollection = /** @class */ (function (_super) {\n    __extends(GeometryCollection, _super);\n    /**\n     * @param {Array<Geometry>} [opt_geometries] Geometries.\n     */\n    function GeometryCollection(opt_geometries) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {Array<Geometry>}\n         */\n        _this.geometries_ = opt_geometries ? opt_geometries : null;\n        /**\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.changeEventsKeys_ = [];\n        _this.listenGeometriesChange_();\n        return _this;\n    }\n    /**\n     * @private\n     */\n    GeometryCollection.prototype.unlistenGeometriesChange_ = function () {\n        this.changeEventsKeys_.forEach(unlistenByKey);\n        this.changeEventsKeys_.length = 0;\n    };\n    /**\n     * @private\n     */\n    GeometryCollection.prototype.listenGeometriesChange_ = function () {\n        if (!this.geometries_) {\n            return;\n        }\n        for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n            this.changeEventsKeys_.push(listen(this.geometries_[i], EventType.CHANGE, this.changed, this));\n        }\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!GeometryCollection} Clone.\n     * @api\n     */\n    GeometryCollection.prototype.clone = function () {\n        var geometryCollection = new GeometryCollection(null);\n        geometryCollection.setGeometries(this.geometries_);\n        geometryCollection.applyProperties(this);\n        return geometryCollection;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    GeometryCollection.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            minSquaredDistance = geometries[i].closestPointXY(x, y, closestPoint, minSquaredDistance);\n        }\n        return minSquaredDistance;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    GeometryCollection.prototype.containsXY = function (x, y) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].containsXY(x, y)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    GeometryCollection.prototype.computeExtent = function (extent) {\n        createOrUpdateEmpty(extent);\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            extend(extent, geometries[i].getExtent());\n        }\n        return extent;\n    };\n    /**\n     * Return the geometries that make up this geometry collection.\n     * @return {Array<Geometry>} Geometries.\n     * @api\n     */\n    GeometryCollection.prototype.getGeometries = function () {\n        return cloneGeometries(this.geometries_);\n    };\n    /**\n     * @return {Array<Geometry>} Geometries.\n     */\n    GeometryCollection.prototype.getGeometriesArray = function () {\n        return this.geometries_;\n    };\n    /**\n     * @return {Array<Geometry>} Geometries.\n     */\n    GeometryCollection.prototype.getGeometriesArrayRecursive = function () {\n        /** @type {Array<Geometry>} */\n        var geometriesArray = [];\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].getType() === this.getType()) {\n                geometriesArray = geometriesArray.concat(\n                /** @type {GeometryCollection} */ (geometries[i]).getGeometriesArrayRecursive());\n            }\n            else {\n                geometriesArray.push(geometries[i]);\n            }\n        }\n        return geometriesArray;\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {GeometryCollection} Simplified GeometryCollection.\n     */\n    GeometryCollection.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision !== this.getRevision()) {\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var simplifiedGeometries = [];\n        var geometries = this.geometries_;\n        var simplified = false;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            var geometry = geometries[i];\n            var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n            simplifiedGeometries.push(simplifiedGeometry);\n            if (simplifiedGeometry !== geometry) {\n                simplified = true;\n            }\n        }\n        if (simplified) {\n            var simplifiedGeometryCollection = new GeometryCollection(null);\n            simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n            return simplifiedGeometryCollection;\n        }\n        else {\n            this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n            return this;\n        }\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./Geometry.js\").Type} Geometry type.\n     * @api\n     */\n    GeometryCollection.prototype.getType = function () {\n        return 'GeometryCollection';\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    GeometryCollection.prototype.intersectsExtent = function (extent) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].intersectsExtent(extent)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    GeometryCollection.prototype.isEmpty = function () {\n        return this.geometries_.length === 0;\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    GeometryCollection.prototype.rotate = function (angle, anchor) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].rotate(angle, anchor);\n        }\n        this.changed();\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n     * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    GeometryCollection.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].scale(sx, opt_sy, anchor);\n        }\n        this.changed();\n    };\n    /**\n     * Set the geometries that make up this geometry collection.\n     * @param {Array<Geometry>} geometries Geometries.\n     * @api\n     */\n    GeometryCollection.prototype.setGeometries = function (geometries) {\n        this.setGeometriesArray(cloneGeometries(geometries));\n    };\n    /**\n     * @param {Array<Geometry>} geometries Geometries.\n     */\n    GeometryCollection.prototype.setGeometriesArray = function (geometries) {\n        this.unlistenGeometriesChange_();\n        this.geometries_ = geometries;\n        this.listenGeometriesChange_();\n        this.changed();\n    };\n    /**\n     * Apply a transform function to the coordinates of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n     * Called with a flat array of geometry coordinates.\n     * @api\n     */\n    GeometryCollection.prototype.applyTransform = function (transformFn) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].applyTransform(transformFn);\n        }\n        this.changed();\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    GeometryCollection.prototype.translate = function (deltaX, deltaY) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].translate(deltaX, deltaY);\n        }\n        this.changed();\n    };\n    /**\n     * Clean up.\n     */\n    GeometryCollection.prototype.disposeInternal = function () {\n        this.unlistenGeometriesChange_();\n        _super.prototype.disposeInternal.call(this);\n    };\n    return GeometryCollection;\n}(Geometry));\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n    var clonedGeometries = [];\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n        clonedGeometries.push(geometries[i].clone());\n    }\n    return clonedGeometries;\n}\nexport default GeometryCollection;\n//# sourceMappingURL=GeometryCollection.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport { abstract } from '../util.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nvar JSONFeature = /** @class */ (function (_super) {\n    __extends(JSONFeature, _super);\n    function JSONFeature() {\n        return _super.call(this) || this;\n    }\n    /**\n     * @return {import(\"./Feature.js\").Type} Format.\n     */\n    JSONFeature.prototype.getType = function () {\n        return 'json';\n    };\n    /**\n     * Read a feature.  Only works for a single feature. Use `readFeatures` to\n     * read a feature collection.\n     *\n     * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     * @api\n     */\n    JSONFeature.prototype.readFeature = function (source, opt_options) {\n        return this.readFeatureFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * Read all features.  Works with both a single feature and a feature\n     * collection.\n     *\n     * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    JSONFeature.prototype.readFeatures = function (source, opt_options) {\n        return this.readFeaturesFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n     * @protected\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    JSONFeature.prototype.readFeatureFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n     * @protected\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    JSONFeature.prototype.readFeaturesFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read a geometry.\n     *\n     * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     * @api\n     */\n    JSONFeature.prototype.readGeometry = function (source, opt_options) {\n        return this.readGeometryFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    JSONFeature.prototype.readGeometryFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the projection.\n     *\n     * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    JSONFeature.prototype.readProjection = function (source) {\n        return this.readProjectionFromObject(getObject(source));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    JSONFeature.prototype.readProjectionFromObject = function (object) {\n        return abstract();\n    };\n    /**\n     * Encode a feature as string.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n     * @return {string} Encoded feature.\n     * @api\n     */\n    JSONFeature.prototype.writeFeature = function (feature, opt_options) {\n        return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeFeatureObject = function (feature, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode an array of features as string.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n     * @return {string} Encoded features.\n     * @api\n     */\n    JSONFeature.prototype.writeFeatures = function (features, opt_options) {\n        return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeFeaturesObject = function (features, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode a geometry as string.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n     * @return {string} Encoded geometry.\n     * @api\n     */\n    JSONFeature.prototype.writeGeometry = function (geometry, opt_options) {\n        return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeGeometryObject = function (geometry, opt_options) {\n        return abstract();\n    };\n    return JSONFeature;\n}(FeatureFormat));\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n    if (typeof source === 'string') {\n        var object = JSON.parse(source);\n        return object ? /** @type {Object} */ (object) : null;\n    }\n    else if (source !== null) {\n        return source;\n    }\n    else {\n        return null;\n    }\n}\nexport default JSONFeature;\n//# sourceMappingURL=JSONFeature.js.map","/**\n * @module ol/format/GeoJSON\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { assert } from '../asserts.js';\nimport { assign, isEmpty } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\nimport { transformGeometryWithOptions } from './Feature.js';\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @api\n */\nvar GeoJSON = /** @class */ (function (_super) {\n    __extends(GeoJSON, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function GeoJSON(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this) || this;\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.dataProjection = getProjection(options.dataProjection ? options.dataProjection : 'EPSG:4326');\n        if (options.featureProjection) {\n            /**\n             * @type {import(\"../proj/Projection.js\").default}\n             */\n            _this.defaultFeatureProjection = getProjection(options.featureProjection);\n        }\n        /**\n         * Name of the geometry attribute for features.\n         * @type {string|undefined}\n         * @private\n         */\n        _this.geometryName_ = options.geometryName;\n        /**\n         * Look for the geometry name in the feature GeoJSON\n         * @type {boolean|undefined}\n         * @private\n         */\n        _this.extractGeometryName_ = options.extractGeometryName;\n        _this.supportedMediaTypes = [\n            'application/geo+json',\n            'application/vnd.geo+json',\n        ];\n        return _this;\n    }\n    /**\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n     * @protected\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    GeoJSON.prototype.readFeatureFromObject = function (object, opt_options) {\n        /**\n         * @type {GeoJSONFeature}\n         */\n        var geoJSONFeature = null;\n        if (object['type'] === 'Feature') {\n            geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n        }\n        else {\n            geoJSONFeature = {\n                'type': 'Feature',\n                'geometry': /** @type {GeoJSONGeometry} */ (object),\n                'properties': null,\n            };\n        }\n        var geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\n        var feature = new Feature();\n        if (this.geometryName_) {\n            feature.setGeometryName(this.geometryName_);\n        }\n        else if (this.extractGeometryName_ &&\n            'geometry_name' in geoJSONFeature !== undefined) {\n            feature.setGeometryName(geoJSONFeature['geometry_name']);\n        }\n        feature.setGeometry(geometry);\n        if ('id' in geoJSONFeature) {\n            feature.setId(geoJSONFeature['id']);\n        }\n        if (geoJSONFeature['properties']) {\n            feature.setProperties(geoJSONFeature['properties'], true);\n        }\n        return feature;\n    };\n    /**\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n     * @protected\n     * @return {Array<Feature>} Features.\n     */\n    GeoJSON.prototype.readFeaturesFromObject = function (object, opt_options) {\n        var geoJSONObject = /** @type {GeoJSONObject} */ (object);\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        var features = null;\n        if (geoJSONObject['type'] === 'FeatureCollection') {\n            var geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);\n            features = [];\n            var geoJSONFeatures = geoJSONFeatureCollection['features'];\n            for (var i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n                features.push(this.readFeatureFromObject(geoJSONFeatures[i], opt_options));\n            }\n        }\n        else {\n            features = [this.readFeatureFromObject(object, opt_options)];\n        }\n        return features;\n    };\n    /**\n     * @param {GeoJSONGeometry} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    GeoJSON.prototype.readGeometryFromObject = function (object, opt_options) {\n        return readGeometry(object, opt_options);\n    };\n    /**\n     * @param {Object} object Object.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    GeoJSON.prototype.readProjectionFromObject = function (object) {\n        var crs = object['crs'];\n        var projection;\n        if (crs) {\n            if (crs['type'] == 'name') {\n                projection = getProjection(crs['properties']['name']);\n            }\n            else if (crs['type'] === 'EPSG') {\n                projection = getProjection('EPSG:' + crs['properties']['code']);\n            }\n            else {\n                assert(false, 36); // Unknown SRS type\n            }\n        }\n        else {\n            projection = this.dataProjection;\n        }\n        return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n    };\n    /**\n     * Encode a feature as a GeoJSON Feature object.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n     * @return {GeoJSONFeature} Object.\n     * @api\n     */\n    GeoJSON.prototype.writeFeatureObject = function (feature, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        /** @type {GeoJSONFeature} */\n        var object = {\n            'type': 'Feature',\n            geometry: null,\n            properties: null,\n        };\n        var id = feature.getId();\n        if (id !== undefined) {\n            object.id = id;\n        }\n        if (!feature.hasProperties()) {\n            return object;\n        }\n        var properties = feature.getProperties();\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            object.geometry = writeGeometry(geometry, opt_options);\n            delete properties[feature.getGeometryName()];\n        }\n        if (!isEmpty(properties)) {\n            object.properties = properties;\n        }\n        return object;\n    };\n    /**\n     * Encode an array of features as a GeoJSON object.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n     * @return {GeoJSONFeatureCollection} GeoJSON Object.\n     * @api\n     */\n    GeoJSON.prototype.writeFeaturesObject = function (features, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        var objects = [];\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            objects.push(this.writeFeatureObject(features[i], opt_options));\n        }\n        return {\n            type: 'FeatureCollection',\n            features: objects,\n        };\n    };\n    /**\n     * Encode a geometry as a GeoJSON object.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n     * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n     * @api\n     */\n    GeoJSON.prototype.writeGeometryObject = function (geometry, opt_options) {\n        return writeGeometry(geometry, this.adaptOptions(opt_options));\n    };\n    return GeoJSON;\n}(JSONFeature));\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n    if (!object) {\n        return null;\n    }\n    /**\n     * @type {import(\"../geom/Geometry.js\").default}\n     */\n    var geometry;\n    switch (object['type']) {\n        case 'Point': {\n            geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n            break;\n        }\n        case 'LineString': {\n            geometry = readLineStringGeometry(\n            /** @type {GeoJSONLineString} */ (object));\n            break;\n        }\n        case 'Polygon': {\n            geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n            break;\n        }\n        case 'MultiPoint': {\n            geometry = readMultiPointGeometry(\n            /** @type {GeoJSONMultiPoint} */ (object));\n            break;\n        }\n        case 'MultiLineString': {\n            geometry = readMultiLineStringGeometry(\n            /** @type {GeoJSONMultiLineString} */ (object));\n            break;\n        }\n        case 'MultiPolygon': {\n            geometry = readMultiPolygonGeometry(\n            /** @type {GeoJSONMultiPolygon} */ (object));\n            break;\n        }\n        case 'GeometryCollection': {\n            geometry = readGeometryCollectionGeometry(\n            /** @type {GeoJSONGeometryCollection} */ (object));\n            break;\n        }\n        default: {\n            throw new Error('Unsupported GeoJSON type: ' + object['type']);\n        }\n    }\n    return transformGeometryWithOptions(geometry, false, opt_options);\n}\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n    var geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n        return readGeometry(geometry, opt_options);\n    });\n    return new GeometryCollection(geometries);\n}\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n    return new Point(object['coordinates']);\n}\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n    return new LineString(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n    return new MultiLineString(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n    return new MultiPoint(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n    return new MultiPolygon(object['coordinates']);\n}\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n    return new Polygon(object['coordinates']);\n}\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n    geometry = transformGeometryWithOptions(geometry, true, opt_options);\n    var type = geometry.getType();\n    /** @type {GeoJSONGeometry} */\n    var geoJSON;\n    switch (type) {\n        case 'Point': {\n            geoJSON = writePointGeometry(\n            /** @type {Point} */ (geometry), opt_options);\n            break;\n        }\n        case 'LineString': {\n            geoJSON = writeLineStringGeometry(\n            /** @type {LineString} */ (geometry), opt_options);\n            break;\n        }\n        case 'Polygon': {\n            geoJSON = writePolygonGeometry(\n            /** @type {Polygon} */ (geometry), opt_options);\n            break;\n        }\n        case 'MultiPoint': {\n            geoJSON = writeMultiPointGeometry(\n            /** @type {MultiPoint} */ (geometry), opt_options);\n            break;\n        }\n        case 'MultiLineString': {\n            geoJSON = writeMultiLineStringGeometry(\n            /** @type {MultiLineString} */ (geometry), opt_options);\n            break;\n        }\n        case 'MultiPolygon': {\n            geoJSON = writeMultiPolygonGeometry(\n            /** @type {MultiPolygon} */ (geometry), opt_options);\n            break;\n        }\n        case 'GeometryCollection': {\n            geoJSON = writeGeometryCollectionGeometry(\n            /** @type {GeometryCollection} */ (geometry), opt_options);\n            break;\n        }\n        case 'Circle': {\n            geoJSON = {\n                type: 'GeometryCollection',\n                geometries: [],\n            };\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return geoJSON;\n}\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n    var geometries = geometry.getGeometriesArray().map(function (geometry) {\n        var options = assign({}, opt_options);\n        delete options.featureProjection;\n        return writeGeometry(geometry, options);\n    });\n    return {\n        type: 'GeometryCollection',\n        geometries: geometries,\n    };\n}\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n    return {\n        type: 'LineString',\n        coordinates: geometry.getCoordinates(),\n    };\n}\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n    return {\n        type: 'MultiLineString',\n        coordinates: geometry.getCoordinates(),\n    };\n}\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n    return {\n        type: 'MultiPoint',\n        coordinates: geometry.getCoordinates(),\n    };\n}\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n    var right;\n    if (opt_options) {\n        right = opt_options.rightHanded;\n    }\n    return {\n        type: 'MultiPolygon',\n        coordinates: geometry.getCoordinates(right),\n    };\n}\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n    return {\n        type: 'Point',\n        coordinates: geometry.getCoordinates(),\n    };\n}\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n    var right;\n    if (opt_options) {\n        right = opt_options.rightHanded;\n    }\n    return {\n        type: 'Polygon',\n        coordinates: geometry.getCoordinates(right),\n    };\n}\nexport default GeoJSON;\n//# sourceMappingURL=GeoJSON.js.map","/**\n * @module ol/geom/flat/interpolate\n */\nimport { binarySearch } from '../../array.js';\nimport { lerp } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [opt_dest] Destination.\n * @param {number} [opt_dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest, opt_dimension) {\n    var o, t;\n    var n = (end - offset) / stride;\n    if (n === 1) {\n        o = offset;\n    }\n    else if (n === 2) {\n        o = offset;\n        t = fraction;\n    }\n    else if (n !== 0) {\n        var x1 = flatCoordinates[offset];\n        var y1 = flatCoordinates[offset + 1];\n        var length_1 = 0;\n        var cumulativeLengths = [0];\n        for (var i = offset + stride; i < end; i += stride) {\n            var x2 = flatCoordinates[i];\n            var y2 = flatCoordinates[i + 1];\n            length_1 += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n            cumulativeLengths.push(length_1);\n            x1 = x2;\n            y1 = y2;\n        }\n        var target = fraction * length_1;\n        var index = binarySearch(cumulativeLengths, target);\n        if (index < 0) {\n            t =\n                (target - cumulativeLengths[-index - 2]) /\n                    (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n            o = offset + (-index - 2) * stride;\n        }\n        else {\n            o = offset + index * stride;\n        }\n    }\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var dest = opt_dest ? opt_dest : new Array(dimension);\n    for (var i = 0; i < dimension; ++i) {\n        dest[i] =\n            o === undefined\n                ? NaN\n                : t === undefined\n                    ? flatCoordinates[o + i]\n                    : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n    if (end == offset) {\n        return null;\n    }\n    var coordinate;\n    if (m < flatCoordinates[offset + stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(offset, offset + stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    else if (flatCoordinates[end - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(end - stride, end);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    // FIXME use O(1) search\n    if (m == flatCoordinates[offset + stride - 1]) {\n        return flatCoordinates.slice(offset, offset + stride);\n    }\n    var lo = offset / stride;\n    var hi = end / stride;\n    while (lo < hi) {\n        var mid = (lo + hi) >> 1;\n        if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n            hi = mid;\n        }\n        else {\n            lo = mid + 1;\n        }\n    }\n    var m0 = flatCoordinates[lo * stride - 1];\n    if (m == m0) {\n        return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n    }\n    var m1 = flatCoordinates[(lo + 1) * stride - 1];\n    var t = (m - m0) / (m1 - m0);\n    coordinate = [];\n    for (var i = 0; i < stride - 1; ++i) {\n        coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i], flatCoordinates[lo * stride + i], t));\n    }\n    coordinate.push(m);\n    return coordinate;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n    if (interpolate) {\n        return lineStringCoordinateAtM(flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n    }\n    var coordinate;\n    if (m < flatCoordinates[stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(0, stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    if (flatCoordinates[flatCoordinates.length - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        if (offset == end) {\n            continue;\n        }\n        if (m < flatCoordinates[offset + stride - 1]) {\n            return null;\n        }\n        else if (m <= flatCoordinates[end - 1]) {\n            return lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, false);\n        }\n        offset = end;\n    }\n    return null;\n}\n//# sourceMappingURL=interpolate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiPolygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta, } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateMultiCoordinatesArray } from './flat/deflate.js';\nimport { extend } from '../array.js';\nimport { getInteriorPointsOfMultiArray } from './flat/interiorpoint.js';\nimport { inflateMultiCoordinatesArray } from './flat/inflate.js';\nimport { intersectsLinearRingMultiArray } from './flat/intersectsextent.js';\nimport { linearRingssAreOriented, orientLinearRingsArray, } from './flat/orient.js';\nimport { linearRingss as linearRingssArea } from './flat/area.js';\nimport { linearRingss as linearRingssCenter } from './flat/center.js';\nimport { linearRingssContainsXY } from './flat/contains.js';\nimport { quantizeMultiArray } from './flat/simplify.js';\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nvar MultiPolygon = /** @class */ (function (_super) {\n    __extends(MultiPolygon, _super);\n    /**\n     * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     * @param {Array<Array<number>>} [opt_endss] Array of ends for internal use with flat coordinates.\n     */\n    function MultiPolygon(coordinates, opt_layout, opt_endss) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<Array<number>>}\n         * @private\n         */\n        _this.endss_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointsRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.flatInteriorPoints_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (!opt_endss && !Array.isArray(coordinates[0])) {\n            var layout = _this.getLayout();\n            var polygons = /** @type {Array<Polygon>} */ (coordinates);\n            var flatCoordinates = [];\n            var endss = [];\n            for (var i = 0, ii = polygons.length; i < ii; ++i) {\n                var polygon = polygons[i];\n                if (i === 0) {\n                    layout = polygon.getLayout();\n                }\n                var offset = flatCoordinates.length;\n                var ends = polygon.getEnds();\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\n                    ends[j] += offset;\n                }\n                extend(flatCoordinates, polygon.getFlatCoordinates());\n                endss.push(ends);\n            }\n            opt_layout = layout;\n            coordinates = flatCoordinates;\n            opt_endss = endss;\n        }\n        if (opt_layout !== undefined && opt_endss) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n            _this.endss_ = opt_endss;\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed polygon to this multipolygon.\n     * @param {Polygon} polygon Polygon.\n     * @api\n     */\n    MultiPolygon.prototype.appendPolygon = function (polygon) {\n        /** @type {Array<number>} */\n        var ends;\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = polygon.getFlatCoordinates().slice();\n            ends = polygon.getEnds().slice();\n            this.endss_.push();\n        }\n        else {\n            var offset = this.flatCoordinates.length;\n            extend(this.flatCoordinates, polygon.getFlatCoordinates());\n            ends = polygon.getEnds().slice();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                ends[i] += offset;\n            }\n        }\n        this.endss_.push(ends);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiPolygon} Clone.\n     * @api\n     */\n    MultiPolygon.prototype.clone = function () {\n        var len = this.endss_.length;\n        var newEndss = new Array(len);\n        for (var i = 0; i < len; ++i) {\n            newEndss[i] = this.endss_[i].slice();\n        }\n        var multiPolygon = new MultiPolygon(this.flatCoordinates.slice(), this.layout, newEndss);\n        multiPolygon.applyProperties(this);\n        return multiPolygon;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    MultiPolygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(this.flatCoordinates, 0, this.endss_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestMultiArrayPoint(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    MultiPolygon.prototype.containsXY = function (x, y) {\n        return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the multipolygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    MultiPolygon.prototype.getArea = function () {\n        return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for multi-polygons.\n     *\n     * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n     * @api\n     */\n    MultiPolygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRingsArray(flatCoordinates, 0, this.endss_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateMultiCoordinatesArray(flatCoordinates, 0, this.endss_, this.stride);\n    };\n    /**\n     * @return {Array<Array<number>>} Endss.\n     */\n    MultiPolygon.prototype.getEndss = function () {\n        return this.endss_;\n    };\n    /**\n     * @return {Array<number>} Flat interior points.\n     */\n    MultiPolygon.prototype.getFlatInteriorPoints = function () {\n        if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n            var flatCenters = linearRingssCenter(this.flatCoordinates, 0, this.endss_, this.stride);\n            this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, flatCenters);\n            this.flatInteriorPointsRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoints_;\n    };\n    /**\n     * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n     * @return {MultiPoint} Interior points as XYM coordinates, where M is\n     * the length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    MultiPolygon.prototype.getInteriorPoints = function () {\n        return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    MultiPolygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length = orientLinearRingsArray(this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {MultiPolygon} Simplified MultiPolygon.\n     * @protected\n     */\n    MultiPolygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEndss = [];\n        simplifiedFlatCoordinates.length = quantizeMultiArray(this.flatCoordinates, 0, this.endss_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEndss);\n        return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\n    };\n    /**\n     * Return the polygon at the specified index.\n     * @param {number} index Index.\n     * @return {Polygon} Polygon.\n     * @api\n     */\n    MultiPolygon.prototype.getPolygon = function (index) {\n        if (index < 0 || this.endss_.length <= index) {\n            return null;\n        }\n        var offset;\n        if (index === 0) {\n            offset = 0;\n        }\n        else {\n            var prevEnds = this.endss_[index - 1];\n            offset = prevEnds[prevEnds.length - 1];\n        }\n        var ends = this.endss_[index].slice();\n        var end = ends[ends.length - 1];\n        if (offset !== 0) {\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                ends[i] -= offset;\n            }\n        }\n        return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\n    };\n    /**\n     * Return the polygons of this multipolygon.\n     * @return {Array<Polygon>} Polygons.\n     * @api\n     */\n    MultiPolygon.prototype.getPolygons = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var endss = this.endss_;\n        var polygons = [];\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            var ends = endss[i].slice();\n            var end = ends[ends.length - 1];\n            if (offset !== 0) {\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\n                    ends[j] -= offset;\n                }\n            }\n            var polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\n            polygons.push(polygon);\n            offset = end;\n        }\n        return polygons;\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./Geometry.js\").Type} Geometry type.\n     * @api\n     */\n    MultiPolygon.prototype.getType = function () {\n        return 'MultiPolygon';\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    MultiPolygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the multipolygon.\n     * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     * @api\n     */\n    MultiPolygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 3);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var endss = deflateMultiCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n        if (endss.length === 0) {\n            this.flatCoordinates.length = 0;\n        }\n        else {\n            var lastEnds = endss[endss.length - 1];\n            this.flatCoordinates.length =\n                lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n        }\n        this.changed();\n    };\n    return MultiPolygon;\n}(SimpleGeometry));\nexport default MultiPolygon;\n//# sourceMappingURL=MultiPolygon.js.map","/**\n * @module ol/geom/flat/center\n */\nimport { createEmpty, createOrUpdateFromFlatCoordinates } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var flatCenters = [];\n    var extent = createEmpty();\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n        flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n        offset = ends[ends.length - 1];\n    }\n    return flatCenters;\n}\n//# sourceMappingURL=center.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiLineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { arrayMaxSquaredDelta, assignClosestArrayPoint } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { douglasPeuckerArray } from './flat/simplify.js';\nimport { extend } from '../array.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { interpolatePoint, lineStringsCoordinateAtM, } from './flat/interpolate.js';\nimport { intersectsLineStringArray } from './flat/intersectsextent.js';\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nvar MultiLineString = /** @class */ (function (_super) {\n    __extends(MultiLineString, _super);\n    /**\n     * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n     *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n     *     combination with `opt_layout` and `opt_ends` are also accepted.)\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     * @param {Array<number>} [opt_ends] Flat coordinate ends for internal use.\n     */\n    function MultiLineString(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (Array.isArray(coordinates[0])) {\n            _this.setCoordinates(\n            /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        else if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            var layout = _this.getLayout();\n            var lineStrings = /** @type {Array<LineString>} */ (coordinates);\n            var flatCoordinates = [];\n            var ends = [];\n            for (var i = 0, ii = lineStrings.length; i < ii; ++i) {\n                var lineString = lineStrings[i];\n                if (i === 0) {\n                    layout = lineString.getLayout();\n                }\n                extend(flatCoordinates, lineString.getFlatCoordinates());\n                ends.push(flatCoordinates.length);\n            }\n            _this.setFlatCoordinates(layout, flatCoordinates);\n            _this.ends_ = ends;\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linestring to the multilinestring.\n     * @param {LineString} lineString LineString.\n     * @api\n     */\n    MultiLineString.prototype.appendLineString = function (lineString) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = lineString.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiLineString} Clone.\n     * @api\n     */\n    MultiLineString.prototype.clone = function () {\n        var multiLineString = new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n        multiLineString.applyProperties(this);\n        return multiLineString;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    MultiLineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\n     * such coordinate exists.\n     *\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n     * M will return the first coordinate and Ms greater than the last M will\n     * return the last coordinate.\n     *\n     * `opt_interpolate` controls interpolation between consecutive LineStrings\n     * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n     * will be linearly interpolated between the last coordinate of one LineString\n     * and the first coordinate of the next LineString.  If `opt_interpolate` is\n     * `false` then the function will return `null` for Ms falling between\n     * LineStrings.\n     *\n     * @param {number} m M.\n     * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n     * @param {boolean} [opt_interpolate] Interpolate. Default is `false`.\n     * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n     * @api\n     */\n    MultiLineString.prototype.getCoordinateAtM = function (m, opt_extrapolate, opt_interpolate) {\n        if ((this.layout != GeometryLayout.XYM &&\n            this.layout != GeometryLayout.XYZM) ||\n            this.flatCoordinates.length === 0) {\n            return null;\n        }\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n        var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n        return lineStringsCoordinateAtM(this.flatCoordinates, 0, this.ends_, this.stride, m, extrapolate, interpolate);\n    };\n    /**\n     * Return the coordinates of the multilinestring.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @api\n     */\n    MultiLineString.prototype.getCoordinates = function () {\n        return inflateCoordinatesArray(this.flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    MultiLineString.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * Return the linestring at the specified index.\n     * @param {number} index Index.\n     * @return {LineString} LineString.\n     * @api\n     */\n    MultiLineString.prototype.getLineString = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LineString(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linestrings of this multilinestring.\n     * @return {Array<LineString>} LineStrings.\n     * @api\n     */\n    MultiLineString.prototype.getLineStrings = function () {\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var layout = this.layout;\n        /** @type {Array<LineString>} */\n        var lineStrings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var lineString = new LineString(flatCoordinates.slice(offset, end), layout);\n            lineStrings.push(lineString);\n            offset = end;\n        }\n        return lineStrings;\n    };\n    /**\n     * @return {Array<number>} Flat midpoints.\n     */\n    MultiLineString.prototype.getFlatMidpoints = function () {\n        var midpoints = [];\n        var flatCoordinates = this.flatCoordinates;\n        var offset = 0;\n        var ends = this.ends_;\n        var stride = this.stride;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var midpoint = interpolatePoint(flatCoordinates, offset, end, stride, 0.5);\n            extend(midpoints, midpoint);\n            offset = end;\n        }\n        return midpoints;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {MultiLineString} Simplified MultiLineString.\n     * @protected\n     */\n    MultiLineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = douglasPeuckerArray(this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./Geometry.js\").Type} Geometry type.\n     * @api\n     */\n    MultiLineString.prototype.getType = function () {\n        return 'MultiLineString';\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    MultiLineString.prototype.intersectsExtent = function (extent) {\n        return intersectsLineStringArray(this.flatCoordinates, 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the multilinestring.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {GeometryLayout} [opt_layout] Layout.\n     * @api\n     */\n    MultiLineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return MultiLineString;\n}(SimpleGeometry));\nexport default MultiLineString;\n//# sourceMappingURL=MultiLineString.js.map","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\nimport { toSize } from '../size.js';\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nvar DEFAULT_FILL_COLOR = '#333';\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nvar Text = /** @class */ (function () {\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function Text(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.font_ = options.font;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size|undefined}\n         */\n        this.scale_ = options.scale;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n        /**\n         * @private\n         * @type {string|Array<string>|undefined}\n         */\n        this.text_ = options.text;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textAlign_ = options.textAlign;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.justify_ = options.justify;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textBaseline_ = options.textBaseline;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ =\n            options.fill !== undefined\n                ? options.fill\n                : new Fill({ color: DEFAULT_FILL_COLOR });\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxAngle_ =\n            options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n        /**\n         * @private\n         * @type {import(\"./TextPlacement.js\").default|string}\n         */\n        this.placement_ =\n            options.placement !== undefined ? options.placement : TextPlacement.POINT;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.overflow_ = !!options.overflow;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.backgroundFill_ = options.backgroundFill\n            ? options.backgroundFill\n            : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.backgroundStroke_ = options.backgroundStroke\n            ? options.backgroundStroke\n            : null;\n        /**\n         * @private\n         * @type {Array<number>|null}\n         */\n        this.padding_ = options.padding === undefined ? null : options.padding;\n    }\n    /**\n     * Clones the style.\n     * @return {Text} The cloned style.\n     * @api\n     */\n    Text.prototype.clone = function () {\n        var scale = this.getScale();\n        return new Text({\n            font: this.getFont(),\n            placement: this.getPlacement(),\n            maxAngle: this.getMaxAngle(),\n            overflow: this.getOverflow(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            text: this.getText(),\n            textAlign: this.getTextAlign(),\n            justify: this.getJustify(),\n            textBaseline: this.getTextBaseline(),\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            offsetX: this.getOffsetX(),\n            offsetY: this.getOffsetY(),\n            backgroundFill: this.getBackgroundFill()\n                ? this.getBackgroundFill().clone()\n                : undefined,\n            backgroundStroke: this.getBackgroundStroke()\n                ? this.getBackgroundStroke().clone()\n                : undefined,\n            padding: this.getPadding() || undefined,\n        });\n    };\n    /**\n     * Get the `overflow` configuration.\n     * @return {boolean} Let text overflow the length of the path they follow.\n     * @api\n     */\n    Text.prototype.getOverflow = function () {\n        return this.overflow_;\n    };\n    /**\n     * Get the font name.\n     * @return {string|undefined} Font.\n     * @api\n     */\n    Text.prototype.getFont = function () {\n        return this.font_;\n    };\n    /**\n     * Get the maximum angle between adjacent characters.\n     * @return {number} Angle in radians.\n     * @api\n     */\n    Text.prototype.getMaxAngle = function () {\n        return this.maxAngle_;\n    };\n    /**\n     * Get the label placement.\n     * @return {import(\"./TextPlacement.js\").default|string} Text placement.\n     * @api\n     */\n    Text.prototype.getPlacement = function () {\n        return this.placement_;\n    };\n    /**\n     * Get the x-offset for the text.\n     * @return {number} Horizontal text offset.\n     * @api\n     */\n    Text.prototype.getOffsetX = function () {\n        return this.offsetX_;\n    };\n    /**\n     * Get the y-offset for the text.\n     * @return {number} Vertical text offset.\n     * @api\n     */\n    Text.prototype.getOffsetY = function () {\n        return this.offsetY_;\n    };\n    /**\n     * Get the fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Determine whether the text rotates with the map.\n     * @return {boolean|undefined} Rotate with map.\n     * @api\n     */\n    Text.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the text rotation.\n     * @return {number|undefined} Rotation.\n     * @api\n     */\n    Text.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the text scale.\n     * @return {number|import(\"../size.js\").Size|undefined} Scale.\n     * @api\n     */\n    Text.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the symbolizer scale array.\n     * @return {import(\"../size.js\").Size} Scale array.\n     */\n    Text.prototype.getScaleArray = function () {\n        return this.scaleArray_;\n    };\n    /**\n     * Get the stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Get the text to be rendered.\n     * @return {string|Array<string>|undefined} Text.\n     * @api\n     */\n    Text.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Get the text alignment.\n     * @return {string|undefined} Text align.\n     * @api\n     */\n    Text.prototype.getTextAlign = function () {\n        return this.textAlign_;\n    };\n    /**\n     * Get the justification.\n     * @return {string|undefined} Justification.\n     * @api\n     */\n    Text.prototype.getJustify = function () {\n        return this.justify_;\n    };\n    /**\n     * Get the text baseline.\n     * @return {string|undefined} Text baseline.\n     * @api\n     */\n    Text.prototype.getTextBaseline = function () {\n        return this.textBaseline_;\n    };\n    /**\n     * Get the background fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getBackgroundFill = function () {\n        return this.backgroundFill_;\n    };\n    /**\n     * Get the background stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getBackgroundStroke = function () {\n        return this.backgroundStroke_;\n    };\n    /**\n     * Get the padding for the text.\n     * @return {Array<number>|null} Padding.\n     * @api\n     */\n    Text.prototype.getPadding = function () {\n        return this.padding_;\n    };\n    /**\n     * Set the `overflow` property.\n     *\n     * @param {boolean} overflow Let text overflow the path that it follows.\n     * @api\n     */\n    Text.prototype.setOverflow = function (overflow) {\n        this.overflow_ = overflow;\n    };\n    /**\n     * Set the font.\n     *\n     * @param {string|undefined} font Font.\n     * @api\n     */\n    Text.prototype.setFont = function (font) {\n        this.font_ = font;\n    };\n    /**\n     * Set the maximum angle between adjacent characters.\n     *\n     * @param {number} maxAngle Angle in radians.\n     * @api\n     */\n    Text.prototype.setMaxAngle = function (maxAngle) {\n        this.maxAngle_ = maxAngle;\n    };\n    /**\n     * Set the x offset.\n     *\n     * @param {number} offsetX Horizontal text offset.\n     * @api\n     */\n    Text.prototype.setOffsetX = function (offsetX) {\n        this.offsetX_ = offsetX;\n    };\n    /**\n     * Set the y offset.\n     *\n     * @param {number} offsetY Vertical text offset.\n     * @api\n     */\n    Text.prototype.setOffsetY = function (offsetY) {\n        this.offsetY_ = offsetY;\n    };\n    /**\n     * Set the text placement.\n     *\n     * @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n     * @api\n     */\n    Text.prototype.setPlacement = function (placement) {\n        this.placement_ = placement;\n    };\n    /**\n     * Set whether to rotate the text with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    Text.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number|undefined} rotation Rotation.\n     * @api\n     */\n    Text.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n     * @api\n     */\n    Text.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n        this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n    };\n    /**\n     * Set the stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Set the text.\n     *\n     * @param {string|Array<string>|undefined} text Text.\n     * @api\n     */\n    Text.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Set the text alignment.\n     *\n     * @param {string|undefined} textAlign Text align.\n     * @api\n     */\n    Text.prototype.setTextAlign = function (textAlign) {\n        this.textAlign_ = textAlign;\n    };\n    /**\n     * Set the justification.\n     *\n     * @param {string|undefined} justify Justification.\n     * @api\n     */\n    Text.prototype.setJustify = function (justify) {\n        this.justify_ = justify;\n    };\n    /**\n     * Set the text baseline.\n     *\n     * @param {string|undefined} textBaseline Text baseline.\n     * @api\n     */\n    Text.prototype.setTextBaseline = function (textBaseline) {\n        this.textBaseline_ = textBaseline;\n    };\n    /**\n     * Set the background fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setBackgroundFill = function (fill) {\n        this.backgroundFill_ = fill;\n    };\n    /**\n     * Set the background stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setBackgroundStroke = function (stroke) {\n        this.backgroundStroke_ = stroke;\n    };\n    /**\n     * Set the padding (`[top, right, bottom, left]`).\n     *\n     * @param {Array<number>|null} padding Padding.\n     * @api\n     */\n    Text.prototype.setPadding = function (padding) {\n        this.padding_ = padding;\n    };\n    return Text;\n}());\nexport default Text;\n//# sourceMappingURL=Text.js.map","/**\n * @module ol/format/Feature\n */\nimport Units from '../proj/Units.js';\nimport { abstract } from '../util.js';\nimport { assign } from '../obj.js';\nimport { equivalent as equivalentProjection, get as getProjection, transformExtent, } from '../proj.js';\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nvar FeatureFormat = /** @class */ (function () {\n    function FeatureFormat() {\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default|undefined}\n         */\n        this.dataProjection = undefined;\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default|undefined}\n         */\n        this.defaultFeatureProjection = undefined;\n        /**\n         * A list media types supported by the format in descending order of preference.\n         * @type {Array<string>}\n         */\n        this.supportedMediaTypes = null;\n    }\n    /**\n     * Adds the data projection to the read options.\n     * @param {Document|Element|Object|string} source Source.\n     * @param {ReadOptions} [opt_options] Options.\n     * @return {ReadOptions|undefined} Options.\n     * @protected\n     */\n    FeatureFormat.prototype.getReadOptions = function (source, opt_options) {\n        var options;\n        if (opt_options) {\n            var dataProjection = opt_options.dataProjection\n                ? getProjection(opt_options.dataProjection)\n                : this.readProjection(source);\n            if (opt_options.extent &&\n                dataProjection &&\n                dataProjection.getUnits() === Units.TILE_PIXELS) {\n                dataProjection = getProjection(dataProjection);\n                dataProjection.setWorldExtent(opt_options.extent);\n            }\n            options = {\n                dataProjection: dataProjection,\n                featureProjection: opt_options.featureProjection,\n            };\n        }\n        return this.adaptOptions(options);\n    };\n    /**\n     * Sets the `dataProjection` on the options, if no `dataProjection`\n     * is set.\n     * @param {WriteOptions|ReadOptions|undefined} options\n     *     Options.\n     * @protected\n     * @return {WriteOptions|ReadOptions|undefined}\n     *     Updated options.\n     */\n    FeatureFormat.prototype.adaptOptions = function (options) {\n        return assign({\n            dataProjection: this.dataProjection,\n            featureProjection: this.defaultFeatureProjection,\n        }, options);\n    };\n    /**\n     * @abstract\n     * @return {Type} The format type.\n     */\n    FeatureFormat.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Read a single feature from a source.\n     *\n     * @abstract\n     * @param {Document|Element|Object|string} source Source.\n     * @param {ReadOptions} [opt_options] Read options.\n     * @return {import(\"../Feature.js\").FeatureLike} Feature.\n     */\n    FeatureFormat.prototype.readFeature = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read all features from a source.\n     *\n     * @abstract\n     * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n     * @param {ReadOptions} [opt_options] Read options.\n     * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n     */\n    FeatureFormat.prototype.readFeatures = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read a single geometry from a source.\n     *\n     * @abstract\n     * @param {Document|Element|Object|string} source Source.\n     * @param {ReadOptions} [opt_options] Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    FeatureFormat.prototype.readGeometry = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the projection from a source.\n     *\n     * @abstract\n     * @param {Document|Element|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n     */\n    FeatureFormat.prototype.readProjection = function (source) {\n        return abstract();\n    };\n    /**\n     * Encode a feature in this format.\n     *\n     * @abstract\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {WriteOptions} [opt_options] Write options.\n     * @return {string|ArrayBuffer} Result.\n     */\n    FeatureFormat.prototype.writeFeature = function (feature, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode an array of features in this format.\n     *\n     * @abstract\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {WriteOptions} [opt_options] Write options.\n     * @return {string|ArrayBuffer} Result.\n     */\n    FeatureFormat.prototype.writeFeatures = function (features, opt_options) {\n        return abstract();\n    };\n    /**\n     * Write a single geometry in this format.\n     *\n     * @abstract\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {WriteOptions} [opt_options] Write options.\n     * @return {string|ArrayBuffer} Result.\n     */\n    FeatureFormat.prototype.writeGeometry = function (geometry, opt_options) {\n        return abstract();\n    };\n    return FeatureFormat;\n}());\nexport default FeatureFormat;\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [opt_options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n    var featureProjection = opt_options\n        ? getProjection(opt_options.featureProjection)\n        : null;\n    var dataProjection = opt_options\n        ? getProjection(opt_options.dataProjection)\n        : null;\n    var transformed;\n    if (featureProjection &&\n        dataProjection &&\n        !equivalentProjection(featureProjection, dataProjection)) {\n        transformed = (write ? geometry.clone() : geometry).transform(write ? featureProjection : dataProjection, write ? dataProjection : featureProjection);\n    }\n    else {\n        transformed = geometry;\n    }\n    if (write &&\n        opt_options &&\n        /** @type {WriteOptions} */ (opt_options).decimals !== undefined) {\n        var power_1 = Math.pow(10, \n        /** @type {WriteOptions} */ (opt_options).decimals);\n        // if decimals option on write, round each coordinate appropriately\n        /**\n         * @param {Array<number>} coordinates Coordinates.\n         * @return {Array<number>} Transformed coordinates.\n         */\n        var transform = function (coordinates) {\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = Math.round(coordinates[i] * power_1) / power_1;\n            }\n            return coordinates;\n        };\n        if (transformed === geometry) {\n            transformed = geometry.clone();\n        }\n        transformed.applyTransform(transform);\n    }\n    return transformed;\n}\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [opt_options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n    var featureProjection = opt_options\n        ? getProjection(opt_options.featureProjection)\n        : null;\n    var dataProjection = opt_options\n        ? getProjection(opt_options.dataProjection)\n        : null;\n    if (featureProjection &&\n        dataProjection &&\n        !equivalentProjection(featureProjection, dataProjection)) {\n        return transformExtent(extent, dataProjection, featureProjection);\n    }\n    else {\n        return extent;\n    }\n}\n//# sourceMappingURL=Feature.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/FullScreen\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport MapProperty from '../MapProperty.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED } from '../css.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { replaceNode } from '../dom.js';\nvar events = [\n    'fullscreenchange',\n    'webkitfullscreenchange',\n    'MSFullscreenChange',\n];\n/**\n * @enum {string}\n */\nvar FullScreenEventType = {\n    /**\n     * Triggered after the map entered fullscreen.\n     * @event FullScreenEventType#enterfullscreen\n     * @api\n     */\n    ENTERFULLSCREEN: 'enterfullscreen',\n    /**\n     * Triggered after the map leave fullscreen.\n     * @event FullScreenEventType#leavefullscreen\n     * @api\n     */\n    LEAVEFULLSCREEN: 'leavefullscreen',\n};\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen', import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen'|import(\"../ObjectEventType\").Types, Return>} FullScreenOnSignature\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text|HTMLElement} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text|HTMLElement} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [activeClassName=className + '-true'] CSS class name for the button\n * when full-screen is active.\n * @property {string} [inactiveClassName=className + '-false'] CSS class name for the button\n * when full-screen is inactive.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](https://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @fires FullScreenEventType#enterfullscreen\n * @fires FullScreenEventType#leavefullscreen\n * @api\n */\nvar FullScreen = /** @class */ (function (_super) {\n    __extends(FullScreen, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function FullScreen(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target,\n        }) || this;\n        /***\n         * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {FullScreenOnSignature<void>}\n         */\n        _this.un;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.keys_ = options.keys !== undefined ? options.keys : false;\n        /**\n         * @private\n         * @type {HTMLElement|string|undefined}\n         */\n        _this.source_ = options.source;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.isInFullscreen_ = false;\n        /**\n         * @private\n         */\n        _this.boundHandleMapTargetChange_ = _this.handleMapTargetChange_.bind(_this);\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.cssClassName_ =\n            options.className !== undefined ? options.className : 'ol-full-screen';\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.documentListeners_ = [];\n        /**\n         * @private\n         * @type {Array<string>}\n         */\n        _this.activeClassName_ =\n            options.activeClassName !== undefined\n                ? options.activeClassName.split(' ')\n                : [_this.cssClassName_ + '-true'];\n        /**\n         * @private\n         * @type {Array<string>}\n         */\n        _this.inactiveClassName_ =\n            options.inactiveClassName !== undefined\n                ? options.inactiveClassName.split(' ')\n                : [_this.cssClassName_ + '-false'];\n        var label = options.label !== undefined ? options.label : '\\u2922';\n        /**\n         * @private\n         * @type {Text|HTMLElement}\n         */\n        _this.labelNode_ =\n            typeof label === 'string' ? document.createTextNode(label) : label;\n        var labelActive = options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n        /**\n         * @private\n         * @type {Text|HTMLElement}\n         */\n        _this.labelActiveNode_ =\n            typeof labelActive === 'string'\n                ? document.createTextNode(labelActive)\n                : labelActive;\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.button_ = document.createElement('button');\n        _this.button_.title = tipLabel;\n        _this.button_.setAttribute('type', 'button');\n        _this.button_.appendChild(_this.labelNode_);\n        _this.button_.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        _this.setClassName_(_this.button_, _this.isInFullscreen_);\n        _this.element.className = \"\".concat(_this.cssClassName_, \" \").concat(CLASS_UNSELECTABLE, \" \").concat(CLASS_CONTROL);\n        _this.element.appendChild(_this.button_);\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    FullScreen.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleFullScreen_();\n    };\n    /**\n     * @private\n     */\n    FullScreen.prototype.handleFullScreen_ = function () {\n        var map = this.getMap();\n        if (!map) {\n            return;\n        }\n        var doc = map.getOwnerDocument();\n        if (!isFullScreenSupported(doc)) {\n            return;\n        }\n        if (isFullScreen(doc)) {\n            exitFullScreen(doc);\n        }\n        else {\n            var element = void 0;\n            if (this.source_) {\n                element =\n                    typeof this.source_ === 'string'\n                        ? doc.getElementById(this.source_)\n                        : this.source_;\n            }\n            else {\n                element = map.getTargetElement();\n            }\n            if (this.keys_) {\n                requestFullScreenWithKeys(element);\n            }\n            else {\n                requestFullScreen(element);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    FullScreen.prototype.handleFullScreenChange_ = function () {\n        var map = this.getMap();\n        if (!map) {\n            return;\n        }\n        var wasInFullscreen = this.isInFullscreen_;\n        this.isInFullscreen_ = isFullScreen(map.getOwnerDocument());\n        if (wasInFullscreen !== this.isInFullscreen_) {\n            this.setClassName_(this.button_, this.isInFullscreen_);\n            if (this.isInFullscreen_) {\n                replaceNode(this.labelActiveNode_, this.labelNode_);\n                this.dispatchEvent(FullScreenEventType.ENTERFULLSCREEN);\n            }\n            else {\n                replaceNode(this.labelNode_, this.labelActiveNode_);\n                this.dispatchEvent(FullScreenEventType.LEAVEFULLSCREEN);\n            }\n            map.updateSize();\n        }\n    };\n    /**\n     * @param {HTMLElement} element Target element\n     * @param {boolean} fullscreen True if fullscreen class name should be active\n     * @private\n     */\n    FullScreen.prototype.setClassName_ = function (element, fullscreen) {\n        var _a, _b, _c, _d;\n        if (fullscreen) {\n            (_a = element.classList).remove.apply(_a, this.inactiveClassName_);\n            (_b = element.classList).add.apply(_b, this.activeClassName_);\n        }\n        else {\n            (_c = element.classList).remove.apply(_c, this.activeClassName_);\n            (_d = element.classList).add.apply(_d, this.inactiveClassName_);\n        }\n    };\n    /**\n     * Remove the control from its current map and attach it to the new map.\n     * Pass `null` to just remove the control from the current map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default|null} map Map.\n     * @api\n     */\n    FullScreen.prototype.setMap = function (map) {\n        var oldMap = this.getMap();\n        if (oldMap) {\n            oldMap.removeChangeListener(MapProperty.TARGET, this.boundHandleMapTargetChange_);\n        }\n        _super.prototype.setMap.call(this, map);\n        this.handleMapTargetChange_();\n        if (map) {\n            map.addChangeListener(MapProperty.TARGET, this.boundHandleMapTargetChange_);\n        }\n    };\n    /**\n     * @private\n     */\n    FullScreen.prototype.handleMapTargetChange_ = function () {\n        var listeners = this.documentListeners_;\n        for (var i = 0, ii = listeners.length; i < ii; ++i) {\n            unlistenByKey(listeners[i]);\n        }\n        listeners.length = 0;\n        var map = this.getMap();\n        if (map) {\n            var doc = map.getOwnerDocument();\n            if (isFullScreenSupported(doc)) {\n                this.element.classList.remove(CLASS_UNSUPPORTED);\n            }\n            else {\n                this.element.classList.add(CLASS_UNSUPPORTED);\n            }\n            for (var i = 0, ii = events.length; i < ii; ++i) {\n                listeners.push(listen(doc, events[i], this.handleFullScreenChange_, this));\n            }\n            this.handleFullScreenChange_();\n        }\n    };\n    return FullScreen;\n}(Control));\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported(doc) {\n    var body = doc.body;\n    return !!(body['webkitRequestFullscreen'] ||\n        (body['msRequestFullscreen'] && doc['msFullscreenEnabled']) ||\n        (body.requestFullscreen && doc.fullscreenEnabled));\n}\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen(doc) {\n    return !!(doc['webkitIsFullScreen'] ||\n        doc['msFullscreenElement'] ||\n        doc.fullscreenElement);\n}\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n    if (element.requestFullscreen) {\n        element.requestFullscreen();\n    }\n    else if (element['msRequestFullscreen']) {\n        element['msRequestFullscreen']();\n    }\n    else if (element['webkitRequestFullscreen']) {\n        element['webkitRequestFullscreen']();\n    }\n}\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n    if (element['webkitRequestFullscreen']) {\n        element['webkitRequestFullscreen']();\n    }\n    else {\n        requestFullScreen(element);\n    }\n}\n/**\n * Exit fullscreen.\n * @param {Document} doc The document to exit fullscren from\n */\nfunction exitFullScreen(doc) {\n    if (doc.exitFullscreen) {\n        doc.exitFullscreen();\n    }\n    else if (doc['msExitFullscreen']) {\n        doc['msExitFullscreen']();\n    }\n    else if (doc['webkitExitFullscreen']) {\n        doc['webkitExitFullscreen']();\n    }\n}\nexport default FullScreen;\n//# sourceMappingURL=FullScreen.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\nimport { extend } from '../array.js';\nimport { forEach as forEachSegment } from './flat/segments.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { interpolatePoint, lineStringCoordinateAtM } from './flat/interpolate.js';\nimport { intersectsLineString } from './flat/intersectsextent.js';\nimport { lineStringLength } from './flat/length.js';\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nvar LineString = /** @class */ (function (_super) {\n    __extends(LineString, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     */\n    function LineString(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatMidpoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatMidpointRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed coordinate to the coordinates of the linestring.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @api\n     */\n    LineString.prototype.appendCoordinate = function (coordinate) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = coordinate.slice();\n        }\n        else {\n            extend(this.flatCoordinates, coordinate);\n        }\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LineString} Clone.\n     * @api\n     */\n    LineString.prototype.clone = function () {\n        var lineString = new LineString(this.flatCoordinates.slice(), this.layout);\n        lineString.applyProperties(this);\n        return lineString;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    LineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Iterate over each segment, calling the provided callback.\n     * If the callback returns a truthy value the function returns that\n     * value immediately. Otherwise the function returns `false`.\n     *\n     * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n     *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n     * @return {T|boolean} Value.\n     * @template T,S\n     * @api\n     */\n    LineString.prototype.forEachSegment = function (callback) {\n        return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n    };\n    /**\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\n     * such coordinate exists.\n     *\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n     * M will return the first coordinate and Ms greater than the last M will\n     * return the last coordinate.\n     *\n     * @param {number} m M.\n     * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n     * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n     * @api\n     */\n    LineString.prototype.getCoordinateAtM = function (m, opt_extrapolate) {\n        if (this.layout != GeometryLayout.XYM &&\n            this.layout != GeometryLayout.XYZM) {\n            return null;\n        }\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n        return lineStringCoordinateAtM(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, m, extrapolate);\n    };\n    /**\n     * Return the coordinates of the linestring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @api\n     */\n    LineString.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinate at the provided fraction along the linestring.\n     * The `fraction` is a number between 0 and 1, where 0 is the start of the\n     * linestring and 1 is the end.\n     * @param {number} fraction Fraction.\n     * @param {import(\"../coordinate.js\").Coordinate} [opt_dest] Optional coordinate whose values will\n     *     be modified. If not provided, a new coordinate will be returned.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n     * @api\n     */\n    LineString.prototype.getCoordinateAt = function (fraction, opt_dest) {\n        return interpolatePoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, fraction, opt_dest, this.stride);\n    };\n    /**\n     * Return the length of the linestring on projected plane.\n     * @return {number} Length (on projected plane).\n     * @api\n     */\n    LineString.prototype.getLength = function () {\n        return lineStringLength(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat midpoint.\n     */\n    LineString.prototype.getFlatMidpoint = function () {\n        if (this.flatMidpointRevision_ != this.getRevision()) {\n            this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n            this.flatMidpointRevision_ = this.getRevision();\n        }\n        return this.flatMidpoint_;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {LineString} Simplified LineString.\n     * @protected\n     */\n    LineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./Geometry.js\").Type} Geometry type.\n     * @api\n     */\n    LineString.prototype.getType = function () {\n        return 'LineString';\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    LineString.prototype.intersectsExtent = function (extent) {\n        return intersectsLineString(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the linestring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     * @api\n     */\n    LineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LineString;\n}(SimpleGeometry));\nexport default LineString;\n//# sourceMappingURL=LineString.js.map","<template>\n  <div id=\"map\"></div>\n</template>\n\n<script setup>\n  import \"ol/ol.css\";\n  import { onMounted } from \"vue\";\n  import GeoJSON from \"ol/format/GeoJSON\";\n  import { Map, View } from \"ol\";\n  import { Tile as TileLayer, Vector as VectorLayer } from \"ol/layer\";\n  import { defaults, FullScreen } from \"ol/control\";\n  import { XYZ, Vector as VectorSource } from \"ol/source\";\n  import { getCenter } from \"ol/extent\";\n  import { Fill, Style, Text } from \"ol/style\";\n  import { MAPURL, ATTRIBUTIONS } from \"@/constants\";\n  import updateMapSize from \"@/hooks/updateMapSize\";\n  const style = new Style({\n    text: new Text({\n      font: 'bold 11px \"Open Sans\", \"Arial Unicode MS\", \"sans-serif\"',\n      placement: \"line\",\n      fill: new Fill({\n        color: \"white\",\n      }),\n    }),\n  });\n  const raster = new TileLayer({\n    source: new XYZ({\n      attributions: ATTRIBUTIONS,\n      url: MAPURL,\n      maxZoom: 20,\n    }),\n  });\n  const viewExtent = [1817379, 6139595, 1827851, 6143616];\n  const initMap = () => {\n    const map = new Map({\n      //初始化map\n      target: \"map\",\n      //地图容器中加载的图层\n      layers: [\n        //加载瓦片图层数据\n        raster,\n        new VectorLayer({\n          declutter: true,\n          source: new VectorSource({\n            format: new GeoJSON(),\n            url: \"data/geojson/vienna-streets.geojson\",\n          }),\n          style: function (feature) {\n            style.getText().setText(feature.get(\"name\"));\n            return style;\n          },\n        }),\n      ],\n      view: new View({\n        extent: viewExtent,\n        center: getCenter(viewExtent),\n        //地图初始显示级别\n        zoom: 17,\n        minZoom: 14,\n      }),\n      //加载控件到地图容器中\n      controls: defaults().extend([\n        new FullScreen(), //加载全屏显示控件（目前支持非IE内核浏览器）\n      ]),\n    });\n    // 侧边栏变化更新地图\n    updateMapSize(map);\n  };\n  onMounted(() => {\n    initMap();\n  });\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n  #map {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n  }\n</style>\n","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=400b7794&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/openlayers/openlayers/node_modules/.pnpm/vue-loader@16.8.3_@vue+compiler-sfc@3.4.6_vue@3.4.6_webpack@4.47.0/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-400b7794\"]])\n\nexport default __exports__"],"sourceRoot":""}