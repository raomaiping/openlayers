{"version":3,"sources":["webpack:///./src/hooks/updateMapSize.js","webpack:///./src/views/drawing/features-style/index.vue?4e44","webpack:///./src/views/drawing/features-style/components/tool-bar.vue?a4e3","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/geom/flat/interpolate.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/style/Text.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/geom/LineString.js","webpack:///./src/views/drawing/features-style/js/data.js","webpack:///./src/views/drawing/features-style/components/text-style.vue?c424","webpack:///./src/views/drawing/features-style/components/text-style.vue","webpack:///./src/views/drawing/features-style/components/point.vue?96e5","webpack:///./src/views/drawing/features-style/components/point.vue","webpack:///./src/views/drawing/features-style/components/line.vue?922b","webpack:///./src/views/drawing/features-style/components/line.vue","webpack:///./src/views/drawing/features-style/components/polygon.vue?b476","webpack:///./src/views/drawing/features-style/components/polygon.vue","webpack:///./src/views/drawing/features-style/components/tool-bar.vue","webpack:///./src/views/drawing/features-style/components/tool-bar.vue?18a3","webpack:///./src/views/drawing/features-style/js/createStyleFunction.js","webpack:///./src/views/drawing/features-style/index.vue","webpack:///./src/views/drawing/features-style/index.vue?6ab4"],"names":["map","targetNode","document","querySelector","observer","MutationObserver","mutationsList","mutation","type","attributeName","i","length","updateSize","observe","attributes","childList","subtree","onBeforeUnmount","disconnect","interpolatePoint","flatCoordinates","offset","end","stride","fraction","opt_dest","opt_dimension","o","t","n","x1","y1","length_1","cumulativeLengths","x2","y2","Math","sqrt","push","target","index","dimension","dest","Array","undefined","NaN","lineStringCoordinateAtM","m","extrapolate","coordinate","slice","lo","hi","mid","m0","lineStringsCoordinateAtM","ends","interpolate","ii","Text","opt_options","options","this","font_","font","rotation_","rotation","rotateWithView_","rotateWithView","scale_","scale","scaleArray_","text_","text","textAlign_","textAlign","justify_","justify","textBaseline_","textBaseline","fill_","fill","color","maxAngle_","maxAngle","PI","placement_","placement","POINT","overflow_","overflow","stroke_","stroke","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","prototype","clone","getScale","getFont","getPlacement","getMaxAngle","getOverflow","getRotation","getRotateWithView","isArray","getText","getTextAlign","getJustify","getTextBaseline","getFill","getStroke","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","getScaleArray","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRotateWithView","setFill","setRotation","setScale","setStroke","setText","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","extendStatics","__extends","d","b","Object","setPrototypeOf","__proto__","p","hasOwnProperty","call","TypeError","String","__","constructor","create","LineString","_super","coordinates","opt_layout","_this","flatMidpoint_","flatMidpointRevision_","maxDelta_","maxDeltaRevision_","setCoordinates","setFlatCoordinates","appendCoordinate","changed","lineString","layout","applyProperties","closestPointXY","x","y","closestPoint","minSquaredDistance","getExtent","getRevision","forEachSegment","callback","getCoordinateAtM","opt_extrapolate","XYM","XYZM","getCoordinates","getCoordinateAt","getLength","getFlatMidpoint","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","XY","getType","intersectsExtent","extent","setLayout","textAlignOptions","label","value","baselineOptions","rotationOptions","fontStyleOptions","fontWeightOptions","textStyleForm","reactive","align","baseline","fontStyle","fontWeight","fontSize","fillColor","outlineColor","outlineWidth","__expose","pointForm","radius","strokeColor","strokeWidth","ref","getForm","_textStyleForm$value","patterningForm","lineForm","polygonForm","emit","__emit","state","tabs","name","active","component","include","max","form","handleUpdate","handleMenu","lookup","point","line","polygon","markRaw","createTextStyle","feature","get","Fill","Stroke","width","pointFeature","Feature","geometry","Point","lineFeature","polygonFeature","Polygon","vectorPoints","VectorLayer","source","VectorSource","features","vectorLines","vectorPolygons","createStyleFunction","setStyle","createPointStyleFunction","Style","image","Circle","createLineStyleFunction","createPolygonStyleFunction","raster","TileLayer","XYZ","attributions","ATTRIBUTIONS","url","MAPURL","maxZoom","isMobile","localStorage","getItem","onMounted","initMap","Map","layers","view","View","center","projection","minZoom","zoom","updateMapSize"],"mappings":"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","file":"js/chunk-144875d8.b704aaaa.js","sourcesContent":["import { onBeforeUnmount } from \"vue\";\n\n/**\n * 监听侧边栏，侧边栏发生变化更新地图\n * @param {ol.Map} map 地图实例\n */\nexport default (...map) => {\n  // 选择需要观察变动的节点\n  const targetNode = document.querySelector(\n    \".el-aside .menu .el-scrollbar__view\"\n  );\n  // 观察器的配置（需要观察什么变动）\n  const config = { attributes: true, childList: true, subtree: true };\n  // 当观察到变动时执行的回调函数\n  const callback = function (mutationsList) {\n    // Use traditional 'for loops' for IE 11\n    for (let mutation of mutationsList) {\n      if (mutation.type === \"childList\") {\n        // console.log(\"已添加或删除子节点。\");\n      } else if (\n        mutation.type === \"attributes\" &&\n        mutation.attributeName === \"style\"\n      ) {\n        for (let i = 0; i < map.length; i++) {\n          map[i].updateSize();\n        }\n\n        // console.log(\"这个 \" + mutation.attributeName + \" 属性被修改。\");\n      }\n    }\n  };\n  // 创建一个观察器实例并传入回调函数\n  const observer = new MutationObserver(callback);\n\n  // 以上述配置开始观察目标节点\n  observer.observe(targetNode, config);\n\n  //卸载前\n  onBeforeUnmount(() => {\n    observer.disconnect();\n  });\n};\n","export * from \"-!../../../../node_modules/.pnpm/mini-css-extract-plugin@0.9.0_webpack@4.47.0/node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../../node_modules/.pnpm/css-loader@3.6.0_webpack@4.47.0/node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/.pnpm/vue-loader@16.8.3_@vue+compiler-sfc@3.4.6_vue@3.4.6_webpack@4.47.0/node_modules/vue-loader/dist/stylePostLoader.js!../../../../node_modules/.pnpm/postcss-loader@3.0.0/node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/.pnpm/cache-loader@4.1.0_webpack@4.47.0/node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/.pnpm/vue-loader@16.8.3_@vue+compiler-sfc@3.4.6_vue@3.4.6_webpack@4.47.0/node_modules/vue-loader/dist/index.js??ref--1-1!./index.vue?vue&type=style&index=0&id=10b12b3f&scoped=true&lang=css\"","export * from \"-!../../../../../node_modules/.pnpm/mini-css-extract-plugin@0.9.0_webpack@4.47.0/node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../../../node_modules/.pnpm/css-loader@3.6.0_webpack@4.47.0/node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../../node_modules/.pnpm/vue-loader@16.8.3_@vue+compiler-sfc@3.4.6_vue@3.4.6_webpack@4.47.0/node_modules/vue-loader/dist/stylePostLoader.js!../../../../../node_modules/.pnpm/postcss-loader@3.0.0/node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../../node_modules/.pnpm/cache-loader@4.1.0_webpack@4.47.0/node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../../node_modules/.pnpm/vue-loader@16.8.3_@vue+compiler-sfc@3.4.6_vue@3.4.6_webpack@4.47.0/node_modules/vue-loader/dist/index.js??ref--1-1!./tool-bar.vue?vue&type=style&index=0&id=e0d62eee&scoped=true&lang=css\"","/**\n * @module ol/geom/flat/interpolate\n */\nimport { binarySearch } from '../../array.js';\nimport { lerp } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [opt_dest] Destination.\n * @param {number} [opt_dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest, opt_dimension) {\n    var o, t;\n    var n = (end - offset) / stride;\n    if (n === 1) {\n        o = offset;\n    }\n    else if (n === 2) {\n        o = offset;\n        t = fraction;\n    }\n    else if (n !== 0) {\n        var x1 = flatCoordinates[offset];\n        var y1 = flatCoordinates[offset + 1];\n        var length_1 = 0;\n        var cumulativeLengths = [0];\n        for (var i = offset + stride; i < end; i += stride) {\n            var x2 = flatCoordinates[i];\n            var y2 = flatCoordinates[i + 1];\n            length_1 += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n            cumulativeLengths.push(length_1);\n            x1 = x2;\n            y1 = y2;\n        }\n        var target = fraction * length_1;\n        var index = binarySearch(cumulativeLengths, target);\n        if (index < 0) {\n            t =\n                (target - cumulativeLengths[-index - 2]) /\n                    (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n            o = offset + (-index - 2) * stride;\n        }\n        else {\n            o = offset + index * stride;\n        }\n    }\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var dest = opt_dest ? opt_dest : new Array(dimension);\n    for (var i = 0; i < dimension; ++i) {\n        dest[i] =\n            o === undefined\n                ? NaN\n                : t === undefined\n                    ? flatCoordinates[o + i]\n                    : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n    if (end == offset) {\n        return null;\n    }\n    var coordinate;\n    if (m < flatCoordinates[offset + stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(offset, offset + stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    else if (flatCoordinates[end - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(end - stride, end);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    // FIXME use O(1) search\n    if (m == flatCoordinates[offset + stride - 1]) {\n        return flatCoordinates.slice(offset, offset + stride);\n    }\n    var lo = offset / stride;\n    var hi = end / stride;\n    while (lo < hi) {\n        var mid = (lo + hi) >> 1;\n        if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n            hi = mid;\n        }\n        else {\n            lo = mid + 1;\n        }\n    }\n    var m0 = flatCoordinates[lo * stride - 1];\n    if (m == m0) {\n        return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n    }\n    var m1 = flatCoordinates[(lo + 1) * stride - 1];\n    var t = (m - m0) / (m1 - m0);\n    coordinate = [];\n    for (var i = 0; i < stride - 1; ++i) {\n        coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i], flatCoordinates[lo * stride + i], t));\n    }\n    coordinate.push(m);\n    return coordinate;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n    if (interpolate) {\n        return lineStringCoordinateAtM(flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n    }\n    var coordinate;\n    if (m < flatCoordinates[stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(0, stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    if (flatCoordinates[flatCoordinates.length - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        if (offset == end) {\n            continue;\n        }\n        if (m < flatCoordinates[offset + stride - 1]) {\n            return null;\n        }\n        else if (m <= flatCoordinates[end - 1]) {\n            return lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, false);\n        }\n        offset = end;\n    }\n    return null;\n}\n//# sourceMappingURL=interpolate.js.map","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\nimport { toSize } from '../size.js';\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nvar DEFAULT_FILL_COLOR = '#333';\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nvar Text = /** @class */ (function () {\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function Text(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.font_ = options.font;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size|undefined}\n         */\n        this.scale_ = options.scale;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n        /**\n         * @private\n         * @type {string|Array<string>|undefined}\n         */\n        this.text_ = options.text;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textAlign_ = options.textAlign;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.justify_ = options.justify;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textBaseline_ = options.textBaseline;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ =\n            options.fill !== undefined\n                ? options.fill\n                : new Fill({ color: DEFAULT_FILL_COLOR });\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxAngle_ =\n            options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n        /**\n         * @private\n         * @type {import(\"./TextPlacement.js\").default|string}\n         */\n        this.placement_ =\n            options.placement !== undefined ? options.placement : TextPlacement.POINT;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.overflow_ = !!options.overflow;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.backgroundFill_ = options.backgroundFill\n            ? options.backgroundFill\n            : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.backgroundStroke_ = options.backgroundStroke\n            ? options.backgroundStroke\n            : null;\n        /**\n         * @private\n         * @type {Array<number>|null}\n         */\n        this.padding_ = options.padding === undefined ? null : options.padding;\n    }\n    /**\n     * Clones the style.\n     * @return {Text} The cloned style.\n     * @api\n     */\n    Text.prototype.clone = function () {\n        var scale = this.getScale();\n        return new Text({\n            font: this.getFont(),\n            placement: this.getPlacement(),\n            maxAngle: this.getMaxAngle(),\n            overflow: this.getOverflow(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            text: this.getText(),\n            textAlign: this.getTextAlign(),\n            justify: this.getJustify(),\n            textBaseline: this.getTextBaseline(),\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            offsetX: this.getOffsetX(),\n            offsetY: this.getOffsetY(),\n            backgroundFill: this.getBackgroundFill()\n                ? this.getBackgroundFill().clone()\n                : undefined,\n            backgroundStroke: this.getBackgroundStroke()\n                ? this.getBackgroundStroke().clone()\n                : undefined,\n            padding: this.getPadding() || undefined,\n        });\n    };\n    /**\n     * Get the `overflow` configuration.\n     * @return {boolean} Let text overflow the length of the path they follow.\n     * @api\n     */\n    Text.prototype.getOverflow = function () {\n        return this.overflow_;\n    };\n    /**\n     * Get the font name.\n     * @return {string|undefined} Font.\n     * @api\n     */\n    Text.prototype.getFont = function () {\n        return this.font_;\n    };\n    /**\n     * Get the maximum angle between adjacent characters.\n     * @return {number} Angle in radians.\n     * @api\n     */\n    Text.prototype.getMaxAngle = function () {\n        return this.maxAngle_;\n    };\n    /**\n     * Get the label placement.\n     * @return {import(\"./TextPlacement.js\").default|string} Text placement.\n     * @api\n     */\n    Text.prototype.getPlacement = function () {\n        return this.placement_;\n    };\n    /**\n     * Get the x-offset for the text.\n     * @return {number} Horizontal text offset.\n     * @api\n     */\n    Text.prototype.getOffsetX = function () {\n        return this.offsetX_;\n    };\n    /**\n     * Get the y-offset for the text.\n     * @return {number} Vertical text offset.\n     * @api\n     */\n    Text.prototype.getOffsetY = function () {\n        return this.offsetY_;\n    };\n    /**\n     * Get the fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Determine whether the text rotates with the map.\n     * @return {boolean|undefined} Rotate with map.\n     * @api\n     */\n    Text.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the text rotation.\n     * @return {number|undefined} Rotation.\n     * @api\n     */\n    Text.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the text scale.\n     * @return {number|import(\"../size.js\").Size|undefined} Scale.\n     * @api\n     */\n    Text.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the symbolizer scale array.\n     * @return {import(\"../size.js\").Size} Scale array.\n     */\n    Text.prototype.getScaleArray = function () {\n        return this.scaleArray_;\n    };\n    /**\n     * Get the stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Get the text to be rendered.\n     * @return {string|Array<string>|undefined} Text.\n     * @api\n     */\n    Text.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Get the text alignment.\n     * @return {string|undefined} Text align.\n     * @api\n     */\n    Text.prototype.getTextAlign = function () {\n        return this.textAlign_;\n    };\n    /**\n     * Get the justification.\n     * @return {string|undefined} Justification.\n     * @api\n     */\n    Text.prototype.getJustify = function () {\n        return this.justify_;\n    };\n    /**\n     * Get the text baseline.\n     * @return {string|undefined} Text baseline.\n     * @api\n     */\n    Text.prototype.getTextBaseline = function () {\n        return this.textBaseline_;\n    };\n    /**\n     * Get the background fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getBackgroundFill = function () {\n        return this.backgroundFill_;\n    };\n    /**\n     * Get the background stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getBackgroundStroke = function () {\n        return this.backgroundStroke_;\n    };\n    /**\n     * Get the padding for the text.\n     * @return {Array<number>|null} Padding.\n     * @api\n     */\n    Text.prototype.getPadding = function () {\n        return this.padding_;\n    };\n    /**\n     * Set the `overflow` property.\n     *\n     * @param {boolean} overflow Let text overflow the path that it follows.\n     * @api\n     */\n    Text.prototype.setOverflow = function (overflow) {\n        this.overflow_ = overflow;\n    };\n    /**\n     * Set the font.\n     *\n     * @param {string|undefined} font Font.\n     * @api\n     */\n    Text.prototype.setFont = function (font) {\n        this.font_ = font;\n    };\n    /**\n     * Set the maximum angle between adjacent characters.\n     *\n     * @param {number} maxAngle Angle in radians.\n     * @api\n     */\n    Text.prototype.setMaxAngle = function (maxAngle) {\n        this.maxAngle_ = maxAngle;\n    };\n    /**\n     * Set the x offset.\n     *\n     * @param {number} offsetX Horizontal text offset.\n     * @api\n     */\n    Text.prototype.setOffsetX = function (offsetX) {\n        this.offsetX_ = offsetX;\n    };\n    /**\n     * Set the y offset.\n     *\n     * @param {number} offsetY Vertical text offset.\n     * @api\n     */\n    Text.prototype.setOffsetY = function (offsetY) {\n        this.offsetY_ = offsetY;\n    };\n    /**\n     * Set the text placement.\n     *\n     * @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n     * @api\n     */\n    Text.prototype.setPlacement = function (placement) {\n        this.placement_ = placement;\n    };\n    /**\n     * Set whether to rotate the text with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    Text.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number|undefined} rotation Rotation.\n     * @api\n     */\n    Text.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n     * @api\n     */\n    Text.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n        this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n    };\n    /**\n     * Set the stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Set the text.\n     *\n     * @param {string|Array<string>|undefined} text Text.\n     * @api\n     */\n    Text.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Set the text alignment.\n     *\n     * @param {string|undefined} textAlign Text align.\n     * @api\n     */\n    Text.prototype.setTextAlign = function (textAlign) {\n        this.textAlign_ = textAlign;\n    };\n    /**\n     * Set the justification.\n     *\n     * @param {string|undefined} justify Justification.\n     * @api\n     */\n    Text.prototype.setJustify = function (justify) {\n        this.justify_ = justify;\n    };\n    /**\n     * Set the text baseline.\n     *\n     * @param {string|undefined} textBaseline Text baseline.\n     * @api\n     */\n    Text.prototype.setTextBaseline = function (textBaseline) {\n        this.textBaseline_ = textBaseline;\n    };\n    /**\n     * Set the background fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setBackgroundFill = function (fill) {\n        this.backgroundFill_ = fill;\n    };\n    /**\n     * Set the background stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setBackgroundStroke = function (stroke) {\n        this.backgroundStroke_ = stroke;\n    };\n    /**\n     * Set the padding (`[top, right, bottom, left]`).\n     *\n     * @param {Array<number>|null} padding Padding.\n     * @api\n     */\n    Text.prototype.setPadding = function (padding) {\n        this.padding_ = padding;\n    };\n    return Text;\n}());\nexport default Text;\n//# sourceMappingURL=Text.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\nimport { extend } from '../array.js';\nimport { forEach as forEachSegment } from './flat/segments.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { interpolatePoint, lineStringCoordinateAtM } from './flat/interpolate.js';\nimport { intersectsLineString } from './flat/intersectsextent.js';\nimport { lineStringLength } from './flat/length.js';\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nvar LineString = /** @class */ (function (_super) {\n    __extends(LineString, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     */\n    function LineString(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatMidpoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatMidpointRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed coordinate to the coordinates of the linestring.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @api\n     */\n    LineString.prototype.appendCoordinate = function (coordinate) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = coordinate.slice();\n        }\n        else {\n            extend(this.flatCoordinates, coordinate);\n        }\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LineString} Clone.\n     * @api\n     */\n    LineString.prototype.clone = function () {\n        var lineString = new LineString(this.flatCoordinates.slice(), this.layout);\n        lineString.applyProperties(this);\n        return lineString;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    LineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Iterate over each segment, calling the provided callback.\n     * If the callback returns a truthy value the function returns that\n     * value immediately. Otherwise the function returns `false`.\n     *\n     * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n     *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n     * @return {T|boolean} Value.\n     * @template T,S\n     * @api\n     */\n    LineString.prototype.forEachSegment = function (callback) {\n        return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n    };\n    /**\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\n     * such coordinate exists.\n     *\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n     * M will return the first coordinate and Ms greater than the last M will\n     * return the last coordinate.\n     *\n     * @param {number} m M.\n     * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n     * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n     * @api\n     */\n    LineString.prototype.getCoordinateAtM = function (m, opt_extrapolate) {\n        if (this.layout != GeometryLayout.XYM &&\n            this.layout != GeometryLayout.XYZM) {\n            return null;\n        }\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n        return lineStringCoordinateAtM(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, m, extrapolate);\n    };\n    /**\n     * Return the coordinates of the linestring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @api\n     */\n    LineString.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinate at the provided fraction along the linestring.\n     * The `fraction` is a number between 0 and 1, where 0 is the start of the\n     * linestring and 1 is the end.\n     * @param {number} fraction Fraction.\n     * @param {import(\"../coordinate.js\").Coordinate} [opt_dest] Optional coordinate whose values will\n     *     be modified. If not provided, a new coordinate will be returned.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n     * @api\n     */\n    LineString.prototype.getCoordinateAt = function (fraction, opt_dest) {\n        return interpolatePoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, fraction, opt_dest, this.stride);\n    };\n    /**\n     * Return the length of the linestring on projected plane.\n     * @return {number} Length (on projected plane).\n     * @api\n     */\n    LineString.prototype.getLength = function () {\n        return lineStringLength(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat midpoint.\n     */\n    LineString.prototype.getFlatMidpoint = function () {\n        if (this.flatMidpointRevision_ != this.getRevision()) {\n            this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n            this.flatMidpointRevision_ = this.getRevision();\n        }\n        return this.flatMidpoint_;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {LineString} Simplified LineString.\n     * @protected\n     */\n    LineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./Geometry.js\").Type} Geometry type.\n     * @api\n     */\n    LineString.prototype.getType = function () {\n        return 'LineString';\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    LineString.prototype.intersectsExtent = function (extent) {\n        return intersectsLineString(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the linestring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     * @api\n     */\n    LineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LineString;\n}(SimpleGeometry));\nexport default LineString;\n//# sourceMappingURL=LineString.js.map","export const textAlignOptions = [\n  {\n    label: \"Center\",\n    value: \"center\",\n  },\n  {\n    label: \"End\",\n    value: \"end\",\n  },\n  {\n    label: \"Left\",\n    value: \"left\",\n  },\n  {\n    label: \"Right\",\n    value: \"right\",\n  },\n  {\n    label: \"Start\",\n    value: \"start\",\n  },\n];\n\nexport const baselineOptions = [\n  {\n    label: \"Alphabetic\",\n    value: \"alphabetic\",\n  },\n  {\n    label: \"Bottom\",\n    value: \"bottom\",\n  },\n  {\n    label: \"Hanging\",\n    value: \"hanging\",\n  },\n  {\n    label: \"Ideographic\",\n    value: \"ideographic\",\n  },\n  {\n    label: \"Middle\",\n    value: \"middle\",\n  },\n  {\n    label: \"Top\",\n    value: \"top\",\n  },\n];\n\nexport const rotationOptions = [\n  {\n    label: \"0°\",\n    value: 0,\n  },\n  {\n    label: \"45°\",\n    value: 0.785398164,\n  },\n  {\n    label: \"90°\",\n    value: 1.570796327,\n  },\n];\n\nexport const fontStyleOptions = [\n  {\n    label: \"Arial\",\n    value: \"Arial\",\n  },\n  {\n    label: \"Courier New\",\n    value: \"Courier New\",\n  },\n  {\n    label: \"Quattrocento\",\n    value: \"Quattrocento Sans\",\n  },\n  {\n    label: \"Verdana\",\n    value: \"Verdana\",\n  },\n];\n\nexport const fontWeightOptions = [\n  {\n    label: \"Bold\",\n    value: \"bold\",\n  },\n  {\n    label: \"Normal\",\n    value: \"normal\",\n  },\n];\n","import script from \"./text-style.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./text-style.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <el-form\n    class=\"line\"\n    label-position=\"left\"\n    label-width=\"150px\"\n    :model=\"textStyleForm\"\n    style=\"max-width: 460px\"\n    size=\"small\"\n  >\n    <el-form-item label=\"位置(align)\">\n      <el-select v-model=\"textStyleForm.align\">\n        <el-option\n          v-for=\"item in options.textAlignOptions\"\n          :key=\"item.value\"\n          :label=\"item.label\"\n          :value=\"item.value\"\n        />\n      </el-select>\n    </el-form-item>\n    <el-form-item label=\"基线(baseline)\">\n      <el-select v-model=\"textStyleForm.baseline\">\n        <el-option\n          v-for=\"item in options.baselineOptions\"\n          :key=\"item.value\"\n          :label=\"item.label\"\n          :value=\"item.value\"\n        />\n      </el-select>\n    </el-form-item>\n    <el-form-item label=\"旋转角度(rotation)\">\n      <el-select v-model=\"textStyleForm.rotation\">\n        <el-option\n          v-for=\"item in options.rotationOptions\"\n          :key=\"item.value\"\n          :label=\"item.label\"\n          :value=\"item.value\"\n        />\n      </el-select>\n    </el-form-item>\n    <el-form-item label=\"字体(font)\">\n      <el-select v-model=\"textStyleForm.fontStyle\">\n        <el-option\n          v-for=\"item in options.fontStyleOptions\"\n          :key=\"item.value\"\n          :label=\"item.label\"\n          :value=\"item.value\"\n        />\n      </el-select>\n    </el-form-item>\n    <el-form-item label=\"字体粗细(weight)\">\n      <el-select v-model=\"textStyleForm.fontWeight\">\n        <el-option\n          v-for=\"item in options.fontWeightOptions\"\n          :key=\"item.value\"\n          :label=\"item.label\"\n          :value=\"item.value\"\n        />\n      </el-select>\n    </el-form-item>\n    <el-form-item label=\"字体大小(size)\">\n      <el-input-number v-model=\"textStyleForm.fontSize\" :min=\"1\" :max=\"1000\" />\n    </el-form-item>\n    <el-form-item label=\"X偏移量(offset x)\">\n      <el-input-number v-model=\"textStyleForm.offsetX\" :min=\"0\" :max=\"1000\" />\n    </el-form-item>\n    <el-form-item label=\"Y偏移量(offset y)\">\n      <el-input-number v-model=\"textStyleForm.offsetY\" :min=\"0\" :max=\"1000\" />\n    </el-form-item>\n    <el-form-item label=\"字体颜色(color)\">\n      <el-color-picker v-model=\"textStyleForm.fillColor\" />\n    </el-form-item>\n    <el-form-item label=\"文字外框颜色(O.Color)\">\n      <el-color-picker v-model=\"textStyleForm.outlineColor\" show-alpha />\n    </el-form-item>\n    <el-form-item label=\"文字外框宽度(O.Width)\">\n      <el-input-number\n        v-model=\"textStyleForm.outlineWidth\"\n        :min=\"1\"\n        :max=\"1000\"\n      />\n    </el-form-item>\n  </el-form>\n</template>\n\n<script setup>\n  import { reactive, defineExpose } from \"vue\";\n  import {\n    textAlignOptions,\n    baselineOptions,\n    rotationOptions,\n    fontStyleOptions,\n    fontWeightOptions,\n  } from \"../js/data\";\n  const textStyleForm = reactive({\n    align: \"center\", // 位置\n    baseline: \"middle\", // 基线\n    rotation: 0, // 旋转角度\n    fontStyle: \"Arial\", // 字体\n    fontWeight: \"normal\", // 字体粗细\n    fontSize: 12, // 字体大小\n    offsetX: 0, // X偏移量\n    offsetY: 0, // Y偏移量\n    fillColor: \"#066AF5\", // 字体颜色\n    outlineColor: \"#fff\", // 文字外框颜色\n    outlineWidth: 3, // 文字外框宽度\n  });\n  const options = reactive({\n    textAlignOptions,\n    baselineOptions,\n    rotationOptions,\n    fontStyleOptions,\n    fontWeightOptions,\n  });\n  defineExpose({\n    textStyleForm: textStyleForm,\n  });\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped></style>\n","import script from \"./point.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./point.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"title\">图形样式</div>\n  <el-form\n    class=\"point\"\n    label-position=\"left\"\n    label-width=\"150px\"\n    :model=\"pointForm\"\n    style=\"max-width: 460px\"\n    size=\"small\"\n  >\n    <el-form-item label=\"点大小(radius)\">\n      <el-input-number v-model=\"pointForm.radius\" :min=\"1\" :max=\"1000\" />\n    </el-form-item>\n    <el-form-item label=\"填充颜色(color)\">\n      <el-color-picker v-model=\"pointForm.fillColor\" show-alpha />\n    </el-form-item>\n    <el-form-item label=\"边框样式(color)\">\n      <el-color-picker v-model=\"pointForm.strokeColor\" show-alpha />\n    </el-form-item>\n    <el-form-item label=\"边框样式(width)\">\n      <el-input-number v-model=\"pointForm.strokeWidth\" :min=\"1\" :max=\"1000\" />\n    </el-form-item>\n  </el-form>\n  <div class=\"title\">文字样式</div>\n  <textStyle ref=\"textStyleForm\" />\n</template>\n\n<script setup>\n  import { reactive, ref, defineExpose } from \"vue\";\n  import textStyle from \"./text-style.vue\";\n  const pointForm = reactive({\n    radius: 10,\n    fillColor: \"#aa3300\",\n    strokeColor: \"red\",\n    strokeWidth: 2,\n  });\n  const textStyleForm = ref(null);\n  defineExpose({\n    getForm: () => ({\n      patterningForm: pointForm,\n      textStyleForm: textStyleForm?.value?.textStyleForm || {},\n    }),\n  });\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped></style>\n","import script from \"./line.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./line.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"title\">图形样式</div>\n  <el-form\n    class=\"line\"\n    label-position=\"left\"\n    label-width=\"150px\"\n    :model=\"lineForm\"\n    style=\"max-width: 460px\"\n    size=\"small\"\n  >\n    <el-form-item label=\"线颜色(color)\">\n      <el-color-picker v-model=\"lineForm.strokeColor\" show-alpha />\n    </el-form-item>\n    <el-form-item label=\"线宽(width)\">\n      <el-input-number v-model=\"lineForm.strokeWidth\" :min=\"1\" :max=\"1000\" />\n    </el-form-item>\n  </el-form>\n  <div class=\"title\">文字样式</div>\n  <textStyle ref=\"textStyleForm\" />\n</template>\n\n<script setup>\n  import { reactive, ref, defineExpose } from \"vue\";\n  import textStyle from \"./text-style.vue\";\n  const lineForm = reactive({\n    strokeColor: \"green\",\n    strokeWidth: 2,\n  });\n  const textStyleForm = ref(null);\n  defineExpose({\n    getForm: () => ({\n      patterningForm: lineForm,\n      textStyleForm: textStyleForm?.value?.textStyleForm || {},\n    }),\n  });\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped></style>\n","import script from \"./polygon.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./polygon.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <div class=\"title\">图形样式</div>\n  <el-form\n    class=\"polygon\"\n    label-position=\"left\"\n    label-width=\"150px\"\n    :model=\"polygonForm\"\n    style=\"max-width: 460px\"\n    size=\"small\"\n  >\n    <el-form-item label=\"填充颜色(color)\">\n      <el-color-picker v-model=\"polygonForm.fillColor\" show-alpha />\n    </el-form-item>\n    <el-form-item label=\"边框颜色(color)\">\n      <el-color-picker v-model=\"polygonForm.strokeColor\" />\n    </el-form-item>\n    <el-form-item label=\"边框宽度(width)\">\n      <el-input-number v-model=\"polygonForm.strokeWidth\" :min=\"1\" :max=\"1000\" />\n    </el-form-item>\n  </el-form>\n  <div class=\"title\">文字样式</div>\n  <textStyle ref=\"textStyleForm\" />\n</template>\n\n<script setup>\n  import { reactive, ref, defineExpose } from \"vue\";\n  import textStyle from \"./text-style.vue\";\n  const polygonForm = reactive({\n    fillColor: \"rgba(255, 255, 255, 0.5)\",\n    strokeColor: \"#000000\",\n    strokeWidth: 2,\n  });\n  const textStyleForm = ref(null);\n  defineExpose({\n    getForm: () => ({\n      patterningForm: polygonForm,\n      textStyleForm: textStyleForm?.value?.textStyleForm || {},\n    }),\n  });\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped></style>\n","<template>\n  <div class=\"tool-bar\" v-dialogDrag=\"true\" style=\"left: 20px; top: 20px\">\n    <div class=\"tool-bar-header dialog-drag-header\">要素样式</div>\n    <div class=\"tool-bar-content\">\n      <div class=\"tabs\">\n        <div\n          :class=\"['tabs-item', { active: state.active === item.value }]\"\n          v-for=\"item in state.tabs\"\n          :key=\"item.name\"\n          @click=\"handleMenu(item.value)\"\n        >\n          {{ item.name }}\n        </div>\n      </div>\n      <div class=\"tab-content\">\n        <button @click=\"handleUpdate\">更新</button>\n        <keep-alive :max=\"state.max\">\n          <component :is=\"state.component\" ref=\"form\"></component>\n        </keep-alive>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { reactive, markRaw, ref, defineEmits } from 'vue'\n/* eslint-disable no-unused-vars */\nimport point from './point.vue'\nimport line from './line.vue'\nimport polygon from './polygon.vue'\nconst emit = defineEmits(['handleUpdate'])\n\nconst state = reactive({\n  tabs: [\n    {\n      name: '点要素样式',\n      value: 'point',\n    },\n    {\n      name: '线要素样式',\n      value: 'line',\n    },\n    {\n      name: '区要素样式',\n      value: 'polygon',\n    },\n  ],\n  active: 'point',\n  component: null,\n  include: ['point', 'line', 'polygon'],\n  max: 0,\n})\nconst form = ref(null)\nconst handleUpdate = () => {\n  emit('handleUpdate', state.active, { ...form.value.getForm() })\n}\nconst handleMenu = (active) => {\n  const lookup = {\n    point,\n    line,\n    polygon,\n  }\n  state.active = active\n  state.component = markRaw(lookup[active])\n}\nhandleMenu(state.active)\n// 设置最大缓存组件数为三个\nstate.max = 3\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.tool-bar {\n  position: absolute;\n  width: 400px;\n  height: 560px;\n  padding: 10px;\n  box-shadow: 0 0 10px #000;\n  background: linear-gradient(to bottom, #eff5ff 0, #e0ecff 20%);\n  border-radius: 10px;\n}\n.tool-bar-header {\n  height: 32px;\n  line-height: 32px;\n  font-weight: bold;\n  font-size: 16px;\n  color: #303133;\n}\n.tool-bar-content {\n  position: relative;\n  border: 1px solid #95b8e7;\n  height: calc(100% - 52px);\n  background: #fff;\n  display: flex;\n  padding: 10px;\n}\n.tabs {\n  position: absolute;\n  left: 10px;\n  top: 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  height: 100%;\n  padding: 10px 0;\n  box-sizing: border-box;\n}\n.tabs-item {\n  width: 20px;\n  padding: 10px;\n  border: 1px solid #95b8e7;\n  border-right: none;\n  background: linear-gradient(to bottom, #eff5ff 0, #e0ecff 20%);\n  border-radius: 5px 0 0 5px;\n  cursor: pointer;\n}\n.tabs-item.active {\n  font-weight: bold;\n}\n.tab-content {\n  width: calc(100% - 40px);\n  margin-left: 40px;\n  border: 1px solid #95b8e7;\n  padding: 10px;\n}\n:deep(.title) {\n  color: red;\n  font-weight: bold;\n}\n:deep(.el-form-item--small) {\n  margin-bottom: 4px;\n}\nbutton {\n  cursor: pointer;\n}\n</style>\n","import script from \"./tool-bar.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./tool-bar.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./tool-bar.vue?vue&type=style&index=0&id=e0d62eee&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/openlayers/openlayers/node_modules/.pnpm/vue-loader@16.8.3_@vue+compiler-sfc@3.4.6_vue@3.4.6_webpack@4.47.0/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-e0d62eee\"]])\n\nexport default __exports__","import { Text, Fill, Stroke, Style, Circle } from \"ol/style\";\nimport { Point, LineString, Polygon } from \"ol/geom\";\nimport { Feature } from \"ol\";\nimport { Vector as VectorSource } from \"ol/source\";\nimport { Vector as VectorLayer } from \"ol/layer\";\n\n/**\n * 创建文本样式函数\n * @param {ol.Feature} feature 要素\n * @param  textStyleForm 文字表单\n */\n\nconst createTextStyle = (feature, textStyleForm) => {\n  const {\n    align, // 位置\n    baseline, // 基线\n    rotation, // 旋转角度\n    fontStyle, // 字体\n    fontWeight, // 字体粗细\n    fontSize, // 字体大小\n    offsetX, // X偏移量\n    offsetY, // Y偏移量\n    fillColor, // 字体颜色\n    outlineColor, // 文字外框颜色\n    outlineWidth, // 文字外框宽度\n  } = textStyleForm;\n  //返回实例化的文本样式对象（ol.style.Text）\n  return new Text({\n    //位置\n    textAlign: align,\n    //基准线\n    textBaseline: baseline,\n    //文字样式（粗细、大小、字体）\n    font: `${fontWeight} ${fontSize}px ${fontStyle}`,\n    //文本内容\n    text: feature.get(\"name\"),\n    //文本填充样式（即文字颜色）\n    fill: new Fill({ color: fillColor }),\n    //文本外框样式（颜色与宽度）\n    stroke: new Stroke({ color: outlineColor, width: outlineWidth }),\n    //偏移量X\n    offsetX: offsetX,\n    //偏移量Y\n    offsetY: offsetY,\n    //角度\n    rotation: rotation,\n  });\n};\n\n/**\n * 创建点要素样式函数\n * @param {Number} radius 点大小(radius)\n * @param {String} fillColor 填充颜色(color)\n * @param {String} strokeColor 边框样式(color)\n * @param {Number} strokeWidth 边框样式(width)\n * @param {Object} textStyleForm 文字表单\n */\nconst createPointStyleFunction = ({\n  patterningForm: { radius, fillColor, strokeColor, strokeWidth },\n  textStyleForm,\n}) => {\n  return (feature) => {\n    const style = new Style({\n      image: new Circle({\n        radius: radius,\n        fill: new Fill({ color: fillColor }),\n        stroke: new Stroke({ color: strokeColor, width: strokeWidth }),\n      }),\n      text: createTextStyle(feature, textStyleForm),\n    });\n    return [style];\n  };\n};\n\n/**\n * 创建线要素样式函数\n * @param {String} strokeColor 边框样式(color)\n * @param {Number} strokeWidth 边框样式(width)\n * @param {Object} textStyleForm 文字表单\n */\nconst createLineStyleFunction = ({\n  patterningForm: { strokeColor, strokeWidth },\n  textStyleForm,\n}) => {\n  return (feature) => {\n    const style = new Style({\n      stroke: new Stroke({\n        color: strokeColor,\n        width: strokeWidth,\n      }),\n      text: createTextStyle(feature, textStyleForm),\n    });\n    return [style];\n  };\n};\n\n/**\n * 创建区要素样式函数\n * @param {String} fillColor 填充颜色(color)\n * @param {String} strokeColor 边框样式(color)\n * @param {Number} strokeWidth 边框样式(width)\n * @param {Object} textStyleForm 文字表单\n */\nconst createPolygonStyleFunction = ({\n  patterningForm: { fillColor, strokeColor, strokeWidth },\n  textStyleForm,\n}) => {\n  return (feature) => {\n    const style = new Style({\n      stroke: new Stroke({\n        color: strokeColor,\n        width: strokeWidth,\n      }),\n      fill: new Fill({\n        color: fillColor,\n      }),\n      text: createTextStyle(feature, textStyleForm),\n    });\n    return [style];\n  };\n};\n//绘制的几何图形要素\nconst pointFeature = new Feature({\n  geometry: new Point([114.1947, 30.5255]),\n  name: \"点\",\n});\n\nconst lineFeature = new Feature({\n  geometry: new LineString([\n    [114.2218, 30.5695],\n    [114.2829, 30.4912],\n  ]),\n  name: \"线\",\n});\n\nconst polygonFeature = new Feature({\n  geometry: new Polygon([\n    [\n      [114.2757, 30.5822],\n      [114.3526, 30.5879],\n      [114.3608, 30.5367],\n      [114.3234, 30.5187],\n      [114.2826, 30.553],\n    ],\n  ]),\n  name: \"面\",\n});\n\n//分别实例化点、线、区图层对象\nexport const vectorPoints = new VectorLayer({\n  source: new VectorSource({\n    features: [pointFeature],\n  }),\n});\n\nexport const vectorLines = new VectorLayer({\n  source: new VectorSource({\n    features: [lineFeature],\n  }),\n});\nexport const vectorPolygons = new VectorLayer({\n  source: new VectorSource({\n    features: [polygonFeature],\n  }),\n});\nconst createStyleFunction = {\n  point: (pointForm) =>\n    vectorPoints.setStyle(createPointStyleFunction(pointForm)),\n  line: (lineForm) => vectorLines.setStyle(createLineStyleFunction(lineForm)),\n  polygon: (polygonForm) =>\n    vectorPolygons.setStyle(createPolygonStyleFunction(polygonForm)),\n};\n\nexport default (type, value) => {\n  createStyleFunction[type](value);\n};\n","<template>\n  <el-empty description=\"请在pc端查看\" v-if=\"isMobile()\" />\n  <div id=\"map\" v-if=\"!isMobile()\"></div>\n  <toolBar @handleUpdate=\"handleUpdate\" v-if=\"!isMobile()\" />\n</template>\n\n<script setup>\n  import \"ol/ol.css\";\n  import { onMounted } from \"vue\";\n  import { Map, View } from \"ol\";\n  import { Tile as TileLayer } from \"ol/layer\";\n  import { XYZ } from \"ol/source\";\n  import { MAPURL, ATTRIBUTIONS } from \"@/constants\";\n  import updateMapSize from \"@/hooks/updateMapSize\";\n  import toolBar from \"./components/tool-bar.vue\";\n  import createStyleFunction, {\n    vectorPoints,\n    vectorLines,\n    vectorPolygons,\n  } from \"./js/createStyleFunction\";\n  const raster = new TileLayer({\n    source: new XYZ({\n      attributions: ATTRIBUTIONS,\n      url: MAPURL,\n      maxZoom: 20,\n    }),\n  });\n\n  const initMap = () => {\n    const map = new Map({\n      //初始化map\n      target: \"map\",\n      //地图容器中加载的图层\n      layers: [\n        //加载瓦片图层数据\n        raster,\n        vectorPoints,\n        vectorLines,\n        vectorPolygons,\n      ],\n      view: new View({\n        center: [114.2905, 30.5607],\n        projection: \"EPSG:4326\",\n        minZoom: 2,\n        zoom: 12,\n      }),\n    });\n    // 侧边栏变化更新地图\n    updateMapSize(map);\n  };\n  const handleUpdate = (type, value) => {\n    createStyleFunction(type, value);\n  };\n  const isMobile = () => localStorage.getItem(\"device\") === \"mobile\";\n  onMounted(() => {\n    initMap();\n  });\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n  #map {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n  }\n</style>\n","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=10b12b3f&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/openlayers/openlayers/node_modules/.pnpm/vue-loader@16.8.3_@vue+compiler-sfc@3.4.6_vue@3.4.6_webpack@4.47.0/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-10b12b3f\"]])\n\nexport default __exports__"],"sourceRoot":""}