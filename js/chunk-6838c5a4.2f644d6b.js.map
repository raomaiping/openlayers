{"version":3,"sources":["webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/layer/BaseImage.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/renderer/canvas/ImageLayer.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/layer/Image.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/reproj/Image.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/source/Image.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/source/ImageStatic.js"],"names":["extendStatics","__extends","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","this","constructor","create","BaseImage","_super","BaseImageLayer","opt_options","options","Layer","CanvasImageLayerRenderer","imageLayer","_this","image_","getImage","prepareFrame","frameState","layerState","layerStatesArray","layerIndex","pixelRatio","viewState","viewResolution","resolution","imageSource","getLayer","getSource","hints","viewHints","renderedExtent","extent","undefined","projection","ViewHint","ANIMATING","INTERACTING","sourceProjection","getProjection","image","loadImage","getState","ImageState","EMPTY","getData","pixel","layer","coordinate","pixelToCoordinateTransform","slice","layerExtent","getExtent","imageExtent","img","imageMapWidth","col","Math","floor","width","imageMapHeight","row","height","getImageData","renderFrame","target","imageResolution","getResolution","imagePixelRatio","getPixelRatio","viewCenter","center","scale","rotation","round","pixelTransform","size","inversePixelTransform","canvasTransform","useContainer","getBackground","context","canvas","containerReused","clearRect","clipped","render","clipUnrotated","transform","tempTransform","renderedResolution","dw","dh","getInterpolate","preRender","dx","dy","opacity","previousAlpha","globalAlpha","drawImage","postRender","restore","style","container","ImageLayer","createRenderer","ReprojImage","sourceProj","targetProj","targetExtent","targetResolution","getImageFunction","interpolate","maxSourceExtent","maxTargetExtent","limitedTargetExtent","targetCenter","sourceResolution","errorThresholdInPixels","triangulation","Triangulation","sourceImage","calculateSourceExtent","state","IDLE","sourcePixelRatio","targetProj_","maxSourceExtent_","triangulation_","targetResolution_","targetExtent_","sourceImage_","sourcePixelRatio_","interpolate_","canvas_","sourceListenerKey_","disposeInternal","LOADING","unlistenSource_","reproject_","sourceState","LOADED","changed","load","ERROR","EventType","CHANGE","e","ImageBase","ImageSourceEventType","ImageSourceEvent","type","Event","defaultImageLoadFunction","src","ImageSource","imageSmoothing","attributions","on","once","un","resolutions_","resolutions","reprojectedImage_","reprojectedRevision_","getResolutions","findNearestResolution","idx","getRevision","dispose","getImageInternal","bind","handleImageChange","event","loading","hasListener","dispatchEvent","Source","Static","crossOrigin","imageLoadFunction","url_","url","imageExtent_","imageSize_","imageSize","addEventListener","getImageExtent","getUrl","evt","imageWidth","imageHeight","extentWidth","extentHeight","xResolution","yResolution","targetWidth","targetHeight","setImage"],"mappings":"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","file":"js/chunk-6838c5a4.2f644d6b.js","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n/**\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {ImageSourceType} [source] Source for this layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<ImageSourceType, RendererType>}\n * @api\n */\nvar BaseImageLayer = /** @class */ (function (_super) {\n    __extends(BaseImageLayer, _super);\n    /**\n     * @param {Options<ImageSourceType>} [opt_options] Layer options.\n     */\n    function BaseImageLayer(opt_options) {\n        var options = opt_options ? opt_options : {};\n        return _super.call(this, options) || this;\n    }\n    return BaseImageLayer;\n}(Layer));\nexport default BaseImageLayer;\n//# sourceMappingURL=BaseImage.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageState from '../../ImageState.js';\nimport ViewHint from '../../ViewHint.js';\nimport { ENABLE_RASTER_REPROJECTION } from '../../reproj/common.js';\nimport { IMAGE_SMOOTHING_DISABLED, IMAGE_SMOOTHING_ENABLED } from './common.js';\nimport { apply as applyTransform, compose as composeTransform, makeInverse, toString as toTransformString, } from '../../transform.js';\nimport { assign } from '../../obj.js';\nimport { containsCoordinate, containsExtent, getHeight, getIntersection, getWidth, intersects as intersectsExtent, isEmpty, } from '../../extent.js';\nimport { fromUserExtent } from '../../proj.js';\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasImageLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasImageLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n     */\n    function CanvasImageLayerRenderer(imageLayer) {\n        var _this = _super.call(this, imageLayer) || this;\n        /**\n         * @protected\n         * @type {?import(\"../../ImageBase.js\").default}\n         */\n        _this.image_ = null;\n        return _this;\n    }\n    /**\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     */\n    CanvasImageLayerRenderer.prototype.getImage = function () {\n        return !this.image_ ? null : this.image_.getImage();\n    };\n    /**\n     * Determine whether render should be called.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    CanvasImageLayerRenderer.prototype.prepareFrame = function (frameState) {\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var viewResolution = viewState.resolution;\n        var imageSource = this.getLayer().getSource();\n        var hints = frameState.viewHints;\n        var renderedExtent = frameState.extent;\n        if (layerState.extent !== undefined) {\n            renderedExtent = getIntersection(renderedExtent, fromUserExtent(layerState.extent, viewState.projection));\n        }\n        if (!hints[ViewHint.ANIMATING] &&\n            !hints[ViewHint.INTERACTING] &&\n            !isEmpty(renderedExtent)) {\n            if (imageSource) {\n                var projection = viewState.projection;\n                if (!ENABLE_RASTER_REPROJECTION) {\n                    var sourceProjection = imageSource.getProjection();\n                    if (sourceProjection) {\n                        projection = sourceProjection;\n                    }\n                }\n                var image = imageSource.getImage(renderedExtent, viewResolution, pixelRatio, projection);\n                if (image) {\n                    if (this.loadImage(image)) {\n                        this.image_ = image;\n                    }\n                    else if (image.getState() === ImageState.EMPTY) {\n                        this.image_ = null;\n                    }\n                }\n            }\n            else {\n                this.image_ = null;\n            }\n        }\n        return !!this.image_;\n    };\n    /**\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @return {Uint8ClampedArray} Data at the pixel location.\n     */\n    CanvasImageLayerRenderer.prototype.getData = function (pixel) {\n        var frameState = this.frameState;\n        if (!frameState) {\n            return null;\n        }\n        var layer = this.getLayer();\n        var coordinate = applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n        var layerExtent = layer.getExtent();\n        if (layerExtent) {\n            if (!containsCoordinate(layerExtent, coordinate)) {\n                return null;\n            }\n        }\n        var imageExtent = this.image_.getExtent();\n        var img = this.image_.getImage();\n        var imageMapWidth = getWidth(imageExtent);\n        var col = Math.floor(img.width * ((coordinate[0] - imageExtent[0]) / imageMapWidth));\n        if (col < 0 || col >= img.width) {\n            return null;\n        }\n        var imageMapHeight = getHeight(imageExtent);\n        var row = Math.floor(img.height * ((imageExtent[3] - coordinate[1]) / imageMapHeight));\n        if (row < 0 || row >= img.height) {\n            return null;\n        }\n        return this.getImageData(img, col, row);\n    };\n    /**\n     * Render the layer.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    CanvasImageLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var image = this.image_;\n        var imageExtent = image.getExtent();\n        var imageResolution = image.getResolution();\n        var imagePixelRatio = image.getPixelRatio();\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var viewCenter = viewState.center;\n        var viewResolution = viewState.resolution;\n        var scale = (pixelRatio * imageResolution) / (viewResolution * imagePixelRatio);\n        var extent = frameState.extent;\n        var resolution = viewState.resolution;\n        var rotation = viewState.rotation;\n        // desired dimensions of the canvas in pixels\n        var width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n        var height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n        // set forward and inverse pixel transforms\n        composeTransform(this.pixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / pixelRatio, 1 / pixelRatio, rotation, -width / 2, -height / 2);\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        var canvasTransform = toTransformString(this.pixelTransform);\n        this.useContainer(target, canvasTransform, this.getBackground(frameState));\n        var context = this.context;\n        var canvas = context.canvas;\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        // clipped rendering if layer extent is set\n        var clipped = false;\n        var render = true;\n        if (layerState.extent) {\n            var layerExtent = fromUserExtent(layerState.extent, viewState.projection);\n            render = intersectsExtent(layerExtent, frameState.extent);\n            clipped = render && !containsExtent(layerExtent, frameState.extent);\n            if (clipped) {\n                this.clipUnrotated(context, frameState, layerExtent);\n            }\n        }\n        var img = image.getImage();\n        var transform = composeTransform(this.tempTransform, width / 2, height / 2, scale, scale, 0, (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolution, (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolution);\n        this.renderedResolution = (imageResolution * pixelRatio) / imagePixelRatio;\n        var dw = img.width * transform[0];\n        var dh = img.height * transform[3];\n        if (!this.getLayer().getSource().getInterpolate()) {\n            assign(context, IMAGE_SMOOTHING_DISABLED);\n        }\n        this.preRender(context, frameState);\n        if (render && dw >= 0.5 && dh >= 0.5) {\n            var dx = transform[4];\n            var dy = transform[5];\n            var opacity = layerState.opacity;\n            var previousAlpha = void 0;\n            if (opacity !== 1) {\n                previousAlpha = context.globalAlpha;\n                context.globalAlpha = opacity;\n            }\n            context.drawImage(img, 0, 0, +img.width, +img.height, dx, dy, dw, dh);\n            if (opacity !== 1) {\n                context.globalAlpha = previousAlpha;\n            }\n        }\n        this.postRender(context, frameState);\n        if (clipped) {\n            context.restore();\n        }\n        assign(context, IMAGE_SMOOTHING_ENABLED);\n        if (canvasTransform !== canvas.style.transform) {\n            canvas.style.transform = canvasTransform;\n        }\n        return this.container;\n    };\n    return CanvasImageLayerRenderer;\n}(CanvasLayerRenderer));\nexport default CanvasImageLayerRenderer;\n//# sourceMappingURL=ImageLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @extends {BaseImageLayer<ImageSourceType, CanvasImageLayerRenderer>}\n * @api\n */\nvar ImageLayer = /** @class */ (function (_super) {\n    __extends(ImageLayer, _super);\n    /**\n     * @param {import(\"./BaseImage.js\").Options<ImageSourceType>} [opt_options] Layer options.\n     */\n    function ImageLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    ImageLayer.prototype.createRenderer = function () {\n        return new CanvasImageLayerRenderer(this);\n    };\n    /**\n     * Get data for a pixel location.  A four element RGBA array will be returned.  For requests outside the\n     * layer extent, `null` will be returned.  Data for an image can only be retrieved if the\n     * source's `crossOrigin` property is set.\n     *\n     * ```js\n     * // display layer data on every pointer move\n     * map.on('pointermove', (event) => {\n     *   console.log(layer.getData(event.pixel));\n     * });\n     * ```\n     * @param {import(\"../pixel\").Pixel} pixel Pixel.\n     * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n     * @api\n     */\n    ImageLayer.prototype.getData = function (pixel) {\n        return _super.prototype.getData.call(this, pixel);\n    };\n    return ImageLayer;\n}(BaseImageLayer));\nexport default ImageLayer;\n//# sourceMappingURL=Image.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/reproj/Image\n */\nimport { ERROR_THRESHOLD } from './common.js';\nimport EventType from '../events/EventType.js';\nimport ImageBase from '../ImageBase.js';\nimport ImageState from '../ImageState.js';\nimport Triangulation from './Triangulation.js';\nimport { calculateSourceResolution, render as renderReprojected, } from '../reproj.js';\nimport { getCenter, getHeight, getIntersection, getWidth } from '../extent.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../ImageBase.js\").default} FunctionType\n */\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nvar ReprojImage = /** @class */ (function (_super) {\n    __extends(ReprojImage, _super);\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n     * @param {number} targetResolution Target resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {FunctionType} getImageFunction\n     *     Function returning source images (extent, resolution, pixelRatio).\n     * @param {boolean} interpolate Use linear interpolation when resampling.\n     */\n    function ReprojImage(sourceProj, targetProj, targetExtent, targetResolution, pixelRatio, getImageFunction, interpolate) {\n        var _this = this;\n        var maxSourceExtent = sourceProj.getExtent();\n        var maxTargetExtent = targetProj.getExtent();\n        var limitedTargetExtent = maxTargetExtent\n            ? getIntersection(targetExtent, maxTargetExtent)\n            : targetExtent;\n        var targetCenter = getCenter(limitedTargetExtent);\n        var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n        var errorThresholdInPixels = ERROR_THRESHOLD;\n        var triangulation = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels, targetResolution);\n        var sourceExtent = triangulation.calculateSourceExtent();\n        var sourceImage = getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n        var state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n        var sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n        _this = _super.call(this, targetExtent, targetResolution, sourcePixelRatio, state) || this;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.targetProj_ = targetProj;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.maxSourceExtent_ = maxSourceExtent;\n        /**\n         * @private\n         * @type {!import(\"./Triangulation.js\").default}\n         */\n        _this.triangulation_ = triangulation;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.targetResolution_ = targetResolution;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.targetExtent_ = targetExtent;\n        /**\n         * @private\n         * @type {import(\"../ImageBase.js\").default}\n         */\n        _this.sourceImage_ = sourceImage;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.sourcePixelRatio_ = sourcePixelRatio;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.interpolate_ = interpolate;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.sourceListenerKey_ = null;\n        return _this;\n    }\n    /**\n     * Clean up.\n     */\n    ReprojImage.prototype.disposeInternal = function () {\n        if (this.state == ImageState.LOADING) {\n            this.unlistenSource_();\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @return {HTMLCanvasElement} Image.\n     */\n    ReprojImage.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    /**\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    ReprojImage.prototype.getProjection = function () {\n        return this.targetProj_;\n    };\n    /**\n     * @private\n     */\n    ReprojImage.prototype.reproject_ = function () {\n        var sourceState = this.sourceImage_.getState();\n        if (sourceState == ImageState.LOADED) {\n            var width = getWidth(this.targetExtent_) / this.targetResolution_;\n            var height = getHeight(this.targetExtent_) / this.targetResolution_;\n            this.canvas_ = renderReprojected(width, height, this.sourcePixelRatio_, this.sourceImage_.getResolution(), this.maxSourceExtent_, this.targetResolution_, this.targetExtent_, this.triangulation_, [\n                {\n                    extent: this.sourceImage_.getExtent(),\n                    image: this.sourceImage_.getImage(),\n                },\n            ], 0, undefined, this.interpolate_);\n        }\n        this.state = sourceState;\n        this.changed();\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    ReprojImage.prototype.load = function () {\n        if (this.state == ImageState.IDLE) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            var sourceState = this.sourceImage_.getState();\n            if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n                this.reproject_();\n            }\n            else {\n                this.sourceListenerKey_ = listen(this.sourceImage_, EventType.CHANGE, function (e) {\n                    var sourceState = this.sourceImage_.getState();\n                    if (sourceState == ImageState.LOADED ||\n                        sourceState == ImageState.ERROR) {\n                        this.unlistenSource_();\n                        this.reproject_();\n                    }\n                }, this);\n                this.sourceImage_.load();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    ReprojImage.prototype.unlistenSource_ = function () {\n        unlistenByKey(\n        /** @type {!import(\"../events.js\").EventsKey} */ (this.sourceListenerKey_));\n        this.sourceListenerKey_ = null;\n    };\n    return ReprojImage;\n}(ImageBase));\nexport default ReprojImage;\n//# sourceMappingURL=Image.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Image\n */\nimport Event from '../events/Event.js';\nimport ImageState from '../ImageState.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport { abstract } from '../util.js';\nimport { equals } from '../extent.js';\nimport { equivalent } from '../proj.js';\nimport { linearFindNearest } from '../array.js';\n/**\n * @enum {string}\n */\nexport var ImageSourceEventType = {\n    /**\n     * Triggered when an image starts loading.\n     * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n     * @api\n     */\n    IMAGELOADSTART: 'imageloadstart',\n    /**\n     * Triggered when an image finishes loading.\n     * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n     * @api\n     */\n    IMAGELOADEND: 'imageloadend',\n    /**\n     * Triggered if image loading results in an error.\n     * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n     * @api\n     */\n    IMAGELOADERROR: 'imageloaderror',\n};\n/**\n * @typedef {'imageloadend'|'imageloaderror'|'imageloadstart'} ImageSourceEventTypes\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nvar ImageSourceEvent = /** @class */ (function (_super) {\n    __extends(ImageSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Image.js\").default} image The image.\n     */\n    function ImageSourceEvent(type, image) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The image related to the event.\n         * @type {import(\"../Image.js\").default}\n         * @api\n         */\n        _this.image = image;\n        return _this;\n    }\n    return ImageSourceEvent;\n}(Event));\nexport { ImageSourceEvent };\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<ImageSourceEventTypes, ImageSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |ImageSourceEventTypes, Return>} ImageSourceOnSignature\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {Array<number>} [resolutions] Resolutions.\n * @property {import(\"./Source.js\").State} [state] State.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n * @abstract\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nvar ImageSource = /** @class */ (function (_super) {\n    __extends(ImageSource, _super);\n    /**\n     * @param {Options} options Single image source options.\n     */\n    function ImageSource(options) {\n        var _this = this;\n        var interpolate = options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n        if (options.interpolate !== undefined) {\n            interpolate = options.interpolate;\n        }\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: options.projection,\n            state: options.state,\n            interpolate: interpolate,\n        }) || this;\n        /***\n         * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {ImageSourceOnSignature<void>}\n         */\n        _this.un;\n        /**\n         * @private\n         * @type {Array<number>|null}\n         */\n        _this.resolutions_ =\n            options.resolutions !== undefined ? options.resolutions : null;\n        /**\n         * @private\n         * @type {import(\"../reproj/Image.js\").default}\n         */\n        _this.reprojectedImage_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.reprojectedRevision_ = 0;\n        return _this;\n    }\n    /**\n     * @return {Array<number>|null} Resolutions.\n     */\n    ImageSource.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * @protected\n     * @param {number} resolution Resolution.\n     * @return {number} Resolution.\n     */\n    ImageSource.prototype.findNearestResolution = function (resolution) {\n        if (this.resolutions_) {\n            var idx = linearFindNearest(this.resolutions_, resolution, 0);\n            resolution = this.resolutions_[idx];\n        }\n        return resolution;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../ImageBase.js\").default} Single image.\n     */\n    ImageSource.prototype.getImage = function (extent, resolution, pixelRatio, projection) {\n        var sourceProjection = this.getProjection();\n        if (!ENABLE_RASTER_REPROJECTION ||\n            !sourceProjection ||\n            !projection ||\n            equivalent(sourceProjection, projection)) {\n            if (sourceProjection) {\n                projection = sourceProjection;\n            }\n            return this.getImageInternal(extent, resolution, pixelRatio, projection);\n        }\n        else {\n            if (this.reprojectedImage_) {\n                if (this.reprojectedRevision_ == this.getRevision() &&\n                    equivalent(this.reprojectedImage_.getProjection(), projection) &&\n                    this.reprojectedImage_.getResolution() == resolution &&\n                    equals(this.reprojectedImage_.getExtent(), extent)) {\n                    return this.reprojectedImage_;\n                }\n                this.reprojectedImage_.dispose();\n                this.reprojectedImage_ = null;\n            }\n            this.reprojectedImage_ = new ReprojImage(sourceProjection, projection, extent, resolution, pixelRatio, function (extent, resolution, pixelRatio) {\n                return this.getImageInternal(extent, resolution, pixelRatio, sourceProjection);\n            }.bind(this), this.getInterpolate());\n            this.reprojectedRevision_ = this.getRevision();\n            return this.reprojectedImage_;\n        }\n    };\n    /**\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../ImageBase.js\").default} Single image.\n     * @protected\n     */\n    ImageSource.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n        return abstract();\n    };\n    /**\n     * Handle image change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n    ImageSource.prototype.handleImageChange = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        var type;\n        switch (image.getState()) {\n            case ImageState.LOADING:\n                this.loading = true;\n                type = ImageSourceEventType.IMAGELOADSTART;\n                break;\n            case ImageState.LOADED:\n                this.loading = false;\n                type = ImageSourceEventType.IMAGELOADEND;\n                break;\n            case ImageState.ERROR:\n                this.loading = false;\n                type = ImageSourceEventType.IMAGELOADERROR;\n                break;\n            default:\n                return;\n        }\n        if (this.hasListener(type)) {\n            this.dispatchEvent(new ImageSourceEvent(type, image));\n        }\n    };\n    return ImageSource;\n}(Source));\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\nexport default ImageSource;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/source/ImageStatic\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport EventType from '../events/EventType.js';\nimport ImageSource, { defaultImageLoadFunction } from './Image.js';\nimport ImageState from '../ImageState.js';\nimport ImageWrapper from '../Image.js';\nimport { IMAGE_SMOOTHING_DISABLED } from '../renderer/canvas/common.js';\nimport { assign } from '../obj.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { getHeight, getWidth, intersects } from '../extent.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../extent.js\").Extent} [imageExtent] Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"../size.js\").Size} [imageSize] Size of the image in pixels. Usually the image size is auto-detected, so this\n * only needs to be set if auto-detection fails for some reason.\n * @property {string} url Image URL.\n */\n/**\n * @classdesc\n * A layer source for displaying a single, static image.\n * @api\n */\nvar Static = /** @class */ (function (_super) {\n    __extends(Static, _super);\n    /**\n     * @param {Options} options ImageStatic options.\n     */\n    function Static(options) {\n        var _this = this;\n        var crossOrigin = options.crossOrigin !== undefined ? options.crossOrigin : null;\n        var /** @type {import(\"../Image.js\").LoadFunction} */ imageLoadFunction = options.imageLoadFunction !== undefined\n            ? options.imageLoadFunction\n            : defaultImageLoadFunction;\n        var interpolate = options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n        if (options.interpolate !== undefined) {\n            interpolate = options.interpolate;\n        }\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            interpolate: interpolate,\n            projection: getProjection(options.projection),\n        }) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.url_ = options.url;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.imageExtent_ = options.imageExtent;\n        /**\n         * @private\n         * @type {import(\"../Image.js\").default}\n         */\n        _this.image_ = new ImageWrapper(_this.imageExtent_, undefined, 1, _this.url_, crossOrigin, imageLoadFunction);\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size|null}\n         */\n        _this.imageSize_ = options.imageSize ? options.imageSize : null;\n        _this.image_.addEventListener(EventType.CHANGE, _this.handleImageChange.bind(_this));\n        return _this;\n    }\n    /**\n     * Returns the image extent\n     * @return {import(\"../extent.js\").Extent} image extent.\n     * @api\n     */\n    Static.prototype.getImageExtent = function () {\n        return this.imageExtent_;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../Image.js\").default} Single image.\n     */\n    Static.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n        if (intersects(extent, this.image_.getExtent())) {\n            return this.image_;\n        }\n        return null;\n    };\n    /**\n     * Return the URL used for this image source.\n     * @return {string} URL.\n     * @api\n     */\n    Static.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * @param {import(\"../events/Event.js\").default} evt Event.\n     */\n    Static.prototype.handleImageChange = function (evt) {\n        if (this.image_.getState() == ImageState.LOADED) {\n            var imageExtent = this.image_.getExtent();\n            var image = this.image_.getImage();\n            var imageWidth = void 0, imageHeight = void 0;\n            if (this.imageSize_) {\n                imageWidth = this.imageSize_[0];\n                imageHeight = this.imageSize_[1];\n            }\n            else {\n                imageWidth = image.width;\n                imageHeight = image.height;\n            }\n            var extentWidth = getWidth(imageExtent);\n            var extentHeight = getHeight(imageExtent);\n            var xResolution = extentWidth / imageWidth;\n            var yResolution = extentHeight / imageHeight;\n            var targetWidth = imageWidth;\n            var targetHeight = imageHeight;\n            if (xResolution > yResolution) {\n                targetWidth = Math.round(extentWidth / yResolution);\n            }\n            else {\n                targetHeight = Math.round(extentHeight / xResolution);\n            }\n            if (targetWidth !== imageWidth || targetHeight !== imageHeight) {\n                var context = createCanvasContext2D(targetWidth, targetHeight);\n                if (!this.getInterpolate()) {\n                    assign(context, IMAGE_SMOOTHING_DISABLED);\n                }\n                var canvas = context.canvas;\n                context.drawImage(image, 0, 0, imageWidth, imageHeight, 0, 0, canvas.width, canvas.height);\n                this.image_.setImage(canvas);\n            }\n        }\n        _super.prototype.handleImageChange.call(this, evt);\n    };\n    return Static;\n}(ImageSource));\nexport default Static;\n//# sourceMappingURL=ImageStatic.js.map"],"sourceRoot":""}