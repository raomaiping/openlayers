{"version":3,"sources":["webpack:///./src/hooks/updateMapSize.js","webpack:///./src/assets/chips.png","webpack:///./src/assets/ice_cream.png","webpack:///./src/views/map-marker/drag-to-add-mulch/index.vue?209f","webpack:///./src/views/map-marker/drag-to-add-mulch/tools.js","webpack:///./src/views/map-marker/drag-to-add-mulch/Drag.js","webpack:///./src/views/map-marker/drag-to-add-mulch/index.vue","webpack:///./src/views/map-marker/drag-to-add-mulch/index.vue?cf4b","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/control/FullScreen.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/Overlay.js"],"names":["map","targetNode","document","querySelector","observer","MutationObserver","mutationsList","mutation","type","attributeName","i","length","updateSize","observe","attributes","childList","subtree","onBeforeUnmount","disconnect","module","exports","addVectorLabel","coordinate","vectorSource","imageUrl","name","newFeature","Feature","geometry","Point","setStyle","Style","image","Icon","crossOrigin","src","scale","createLabelStyle","addFeature","Drag","PointerInteraction","constructor","super","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","this","coordinate_","cursor_","feature_","previousCursor_","undefined","evt","feature","forEachFeatureAtPixel","pixel","deltaX","deltaY","getGeometry","translate","element","getTargetElement","style","cursor","menu_overlay","menu","ref","selectIcon","imageList","require","raster","TileLayer","source","XYZ","attributions","ATTRIBUTIONS","url","MAPURL","maxZoom","VectorSource","vectorLayer","VectorLayer","handleDragStart","event","target","dataTransfer","setData","handleDragover","preventDefault","handleDrop","getData","offsetX","offsetY","getCoordinateFromPixel","stopPropagation","oncontextmenu","handleDelete","getSource","removeFeature","value","setPosition","onMounted","Map","interactions","defaultInteractions","extend","layers","view","View","projection","center","zoom","controls","defaults","FullScreen","updateMapSize","Overlay","positioning","addOverlay","getViewport","getEventPixel","getEventCoordinate","contextmenu","on","__exports__","extendStatics","__extends","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","create","events","FullScreenEventType","_super","opt_options","_this","options","createElement","once","un","keys_","keys","source_","isInFullscreen_","boundHandleMapTargetChange_","handleMapTargetChange_","bind","cssClassName_","className","documentListeners_","activeClassName_","activeClassName","split","inactiveClassName_","inactiveClassName","label","labelNode_","createTextNode","labelActive","labelActiveNode_","tipLabel","button_","title","setAttribute","appendChild","addEventListener","CLICK","handleClick_","setClassName_","concat","handleFullScreen_","getMap","doc","getOwnerDocument","isFullScreenSupported","isFullScreen","exitFullscreen","exitFullScreen","getElementById","requestFullScreen","requestFullScreenWithKeys","handleFullScreenChange_","wasInFullscreen","dispatchEvent","fullscreen","_a","_b","_c","_d","classList","remove","apply","add","setMap","oldMap","removeChangeListener","TARGET","addChangeListener","listeners","ii","push","body","requestFullscreen","fullscreenEnabled","fullscreenElement","Property","id","insertFirst","stopEvent","position","pointerEvents","autoPan","animation","autoPanAnimation","margin","autoPanMargin","rendered","transform_","visible","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","offset","setPositioning","getElement","get","getId","getOffset","getPosition","getPositioning","POSTRENDER","render","updatePixelPosition","container","getOverlayContainerStopEvent","getOverlayContainer","insertBefore","childNodes","performAutoPan","set","panIntoView","opt_panIntoViewOptions","mapRect","getRect","getSize","overlayRect","panIntoViewOptions","myMargin","offsetLeft","offsetRight","offsetTop","offsetBottom","delta","Math","abs","getView","getCenterInternal","centerPx","getPixelFromCoordinateInternal","newCenterPx","panOptions","animateInternal","getCoordinateFromPixelInternal","duration","easing","size","box","getBoundingClientRect","left","window","pageXOffset","top","pageYOffset","setVisible","display","isRendered","getPixelFromCoordinate","mapSize","updateRenderedPosition","x","round","y","posX","posY","transform","msTransform","getOptions"],"mappings":"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","file":"js/chunk-5731e298.c2f7e8f3.js","sourcesContent":["import { onBeforeUnmount } from \"vue\";\n\n/**\n * 监听侧边栏，侧边栏发生变化更新地图\n * @param {ol.Map} map 地图实例\n */\nexport default (...map) => {\n  // 选择需要观察变动的节点\n  const targetNode = document.querySelector(\n    \".el-aside .menu .el-scrollbar__view\"\n  );\n  // 观察器的配置（需要观察什么变动）\n  const config = { attributes: true, childList: true, subtree: true };\n  // 当观察到变动时执行的回调函数\n  const callback = function (mutationsList) {\n    // Use traditional 'for loops' for IE 11\n    for (let mutation of mutationsList) {\n      if (mutation.type === \"childList\") {\n        // console.log(\"已添加或删除子节点。\");\n      } else if (\n        mutation.type === \"attributes\" &&\n        mutation.attributeName === \"style\"\n      ) {\n        for (let i = 0; i < map.length; i++) {\n          map[i].updateSize();\n        }\n\n        // console.log(\"这个 \" + mutation.attributeName + \" 属性被修改。\");\n      }\n    }\n  };\n  // 创建一个观察器实例并传入回调函数\n  const observer = new MutationObserver(callback);\n\n  // 以上述配置开始观察目标节点\n  observer.observe(targetNode, config);\n\n  //卸载前\n  onBeforeUnmount(() => {\n    observer.disconnect();\n  });\n};\n","module.exports = __webpack_public_path__ + \"img/chips.856c05f4.png\";","module.exports = __webpack_public_path__ + \"img/ice_cream.ece690c8.png\";","export * from \"-!../../../../node_modules/.pnpm/mini-css-extract-plugin@0.9.0_webpack@4.47.0/node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../../node_modules/.pnpm/css-loader@3.6.0_webpack@4.47.0/node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/.pnpm/vue-loader@16.8.3_@vue+compiler-sfc@3.4.6_vue@3.4.6_webpack@4.47.0/node_modules/vue-loader/dist/stylePostLoader.js!../../../../node_modules/.pnpm/postcss-loader@3.0.0/node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/.pnpm/cache-loader@4.1.0_webpack@4.47.0/node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/.pnpm/vue-loader@16.8.3_@vue+compiler-sfc@3.4.6_vue@3.4.6_webpack@4.47.0/node_modules/vue-loader/dist/index.js??ref--1-1!./index.vue?vue&type=style&index=0&id=770ea1d1&scoped=true&lang=css\"","import { Style, Icon } from \"ol/style\";\nimport { Feature } from \"ol\";\nimport { Point } from \"ol/geom\";\n\n/**\n * 创建矢量标注样式函数,设置image为图标ol.style.Icon\n * @param {ol.Feature} feature 要素\n */\nexport const createLabelStyle = (imageUrl) =>\n  new Style({\n    image: new Icon({\n      crossOrigin: \"anonymous\",\n      //图标的url\n      src: imageUrl,\n      scale: 0.1,\n    }),\n  });\n\n/**\n * 添加一个新的标注（矢量要素）\n * @param {ol.Coordinate} coordinate 坐标点\n * @param {ol.source.Vector} vectorSource 矢量标注的数据源\n * @param {String} name 标注名\n */\nexport const addVectorLabel = ({\n  coordinate,\n  vectorSource,\n  imageUrl,\n  name = \"标注点\",\n}) => {\n  //新建一个要素 ol.Feature\n  const newFeature = new Feature({\n    //几何信息\n    geometry: new Point(coordinate),\n    //名称属性\n    name,\n  });\n  //设置要素的样式\n  newFeature.setStyle(createLabelStyle(imageUrl));\n  //将新要素添加到数据源中\n  vectorSource.addFeature(newFeature);\n};\n","import { Pointer as PointerInteraction } from \"ol/interaction\";\nexport default class Drag extends PointerInteraction {\n  constructor() {\n    super({\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleMoveEvent: handleMoveEvent,\n      handleUpEvent: handleUpEvent,\n    });\n\n    /**\n     * @type {import(\"../src/ol/coordinate.js\").Coordinate}\n     * @private\n     */\n    this.coordinate_ = null;\n\n    /**\n     * @type {string|undefined}\n     * @private\n     */\n    this.cursor_ = \"pointer\";\n\n    /**\n     * @type {Feature}\n     * @private\n     */\n    this.feature_ = null;\n\n    /**\n     * @type {string|undefined}\n     * @private\n     */\n    this.previousCursor_ = undefined;\n  }\n}\n\n/**\n * @param {import(\"../src/ol/MapBrowserEvent.js\").default} evt Map browser event.\n * @return {boolean} `true` to start the drag sequence.\n */\nfunction handleDownEvent(evt) {\n  const map = evt.map;\n\n  const feature = map.forEachFeatureAtPixel(evt.pixel, function (feature) {\n    return feature;\n  });\n\n  if (feature) {\n    this.coordinate_ = evt.coordinate;\n    this.feature_ = feature;\n  }\n\n  return !!feature;\n}\n\n/**\n * @param {import(\"../src/ol/MapBrowserEvent.js\").default} evt Map browser event.\n */\nfunction handleDragEvent(evt) {\n  const deltaX = evt.coordinate[0] - this.coordinate_[0];\n  const deltaY = evt.coordinate[1] - this.coordinate_[1];\n\n  const geometry = this.feature_.getGeometry();\n  geometry.translate(deltaX, deltaY);\n\n  this.coordinate_[0] = evt.coordinate[0];\n  this.coordinate_[1] = evt.coordinate[1];\n}\n\n/**\n * @param {import(\"../src/ol/MapBrowserEvent.js\").default} evt Event.\n */\nfunction handleMoveEvent(evt) {\n  if (this.cursor_) {\n    const map = evt.map;\n    const feature = map.forEachFeatureAtPixel(evt.pixel, function (feature) {\n      return feature;\n    });\n    const element = evt.map.getTargetElement();\n    if (feature) {\n      if (element.style.cursor != this.cursor_) {\n        this.previousCursor_ = element.style.cursor;\n        element.style.cursor = this.cursor_;\n      }\n    } else if (this.previousCursor_ !== undefined) {\n      element.style.cursor = this.previousCursor_;\n      this.previousCursor_ = undefined;\n    }\n  }\n}\n\n/**\n * @return {boolean} `false` to stop the drag sequence.\n */\nfunction handleUpEvent() {\n  this.coordinate_ = null;\n  this.feature_ = null;\n  return false;\n}\n","<template>\n  <div class=\"top\">\n    <img\n      v-for=\"(item, index) in imageList\"\n      :key=\"index\"\n      :src=\"item\"\n      draggable=\"true\"\n      @dragstart=\"handleDragStart\"\n    />\n  </div>\n\n  <div id=\"map\" @drop=\"handleDrop\" @dragover=\"handleDragover\">\n    <div class=\"menu\" ref=\"menu\">\n      <div class=\"menu-item\" @click=\"handleDelete\">删除</div>\n    </div>\n  </div>\n</template>\n\n<script setup>\n  import \"ol/ol.css\";\n  import { onMounted, ref } from \"vue\";\n  import { Map, View, Overlay } from \"ol\";\n  import { Tile as TileLayer, Vector as VectorLayer } from \"ol/layer\";\n  import { defaults, FullScreen } from \"ol/control\";\n  import { XYZ, Vector as VectorSource } from \"ol/source\";\n  import { MAPURL, ATTRIBUTIONS } from \"@/constants\";\n  import { defaults as defaultInteractions } from \"ol/interaction\";\n  import updateMapSize from \"@/hooks/updateMapSize\";\n  import { addVectorLabel } from \"./tools\";\n  import Drag from \"./Drag\";\n  let map, menu_overlay;\n  const menu = ref(null);\n  const selectIcon = ref(null);\n  const imageList = [\n    require(\"@/assets/chips.png\"),\n    require(\"@/assets/ice_cream.png\"),\n  ];\n  const raster = new TileLayer({\n    source: new XYZ({\n      attributions: ATTRIBUTIONS,\n      url: MAPURL,\n      maxZoom: 20,\n    }),\n  });\n  //矢量标注的数据源\n  const vectorSource = new VectorSource();\n  //矢量标注图层\n  const vectorLayer = new VectorLayer({\n    source: vectorSource,\n  });\n  const initMap = () => {\n    map = new Map({\n      //初始化map\n      target: \"map\",\n      //地图容器中加载的图层\n      interactions: defaultInteractions().extend([new Drag()]),\n      layers: [\n        //加载瓦片图层数据\n        raster,\n        vectorLayer,\n      ],\n      view: new View({\n        projection: \"EPSG:4326\", // 坐标系，有EPSG:4326和EPSG:3 857\n        center: [0, 0], // 深圳坐标\n        //地图初始显示级别\n        zoom: 5,\n      }),\n      //加载控件到地图容器中\n      controls: defaults().extend([\n        new FullScreen(), //加载全屏显示控件（目前支持非IE内核浏览器）\n      ]),\n    });\n    // 侧边栏变化更新地图\n    updateMapSize(map);\n\n    menu_overlay = new Overlay({\n      element: menu.value,\n      positioning: \"center-center\",\n    });\n    map.addOverlay(menu_overlay);\n  };\n  const handleDragStart = (event) => {\n    const src = event.target.src;\n    event.dataTransfer.setData(\"src\", src);\n  };\n  const handleDragover = (event) => {\n    event.preventDefault();\n  };\n  const handleDrop = (event) => {\n    const imageUrl = event.dataTransfer.getData(\"src\");\n    const { offsetX, offsetY } = event;\n    const coordinate = map.getCoordinateFromPixel([offsetX, offsetY]);\n    addVectorLabel({\n      coordinate,\n      vectorSource,\n      imageUrl,\n    });\n    event.stopPropagation();\n    console.log(imageUrl, event, coordinate);\n  };\n  //首先禁用document自带的右键功能\n  document.oncontextmenu = function () {\n    return false;\n  };\n\n  //右键函数\n  /*params: map（创建的map对象）*/\n  const contextmenu = (map) => {\n    map.getViewport().oncontextmenu = function (event) {\n      event.preventDefault();\n      const pixel = map.getEventPixel(event);\n      const feature = map.forEachFeatureAtPixel(pixel, (feature) => feature);\n      if (feature) {\n        const coordinate = map.getEventCoordinate(event);\n        selectIcon.value = feature;\n        menu_overlay.setPosition(coordinate);\n      }\n    };\n  };\n  const handleDelete = () => {\n    vectorLayer.getSource().removeFeature(selectIcon.value);\n    selectIcon.value = null;\n    menu_overlay.setPosition(null);\n  };\n\n  onMounted(() => {\n    initMap();\n    contextmenu(map);\n    map.on(\"singleclick\", () => {\n      menu_overlay.setPosition(null);\n    });\n  });\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n  #map {\n    position: relative;\n    height: calc(100% - 50px);\n  }\n  .top {\n    height: 50px;\n    text-align: center;\n    line-height: 50px;\n  }\n  img {\n    width: 20px;\n    cursor: pointer;\n    margin: 0 20px;\n  }\n  .menu {\n    position: absolute;\n    left: 10px;\n    top: 10px;\n    width: 60px;\n    background-color: #f9f9f9;\n    min-width: 160px;\n    box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\n    z-index: 99;\n    border: 1px solid #ccc;\n    border-bottom: none;\n  }\n  .menu-item {\n    text-align: center;\n    height: 30px;\n    line-height: 30px;\n    border-bottom: 1px solid #ccc;\n    cursor: pointer;\n  }\n</style>\n","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=770ea1d1&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/openlayers/openlayers/node_modules/.pnpm/vue-loader@16.8.3_@vue+compiler-sfc@3.4.6_vue@3.4.6_webpack@4.47.0/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-770ea1d1\"]])\n\nexport default __exports__","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/FullScreen\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport MapProperty from '../MapProperty.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED } from '../css.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { replaceNode } from '../dom.js';\nvar events = [\n    'fullscreenchange',\n    'webkitfullscreenchange',\n    'MSFullscreenChange',\n];\n/**\n * @enum {string}\n */\nvar FullScreenEventType = {\n    /**\n     * Triggered after the map entered fullscreen.\n     * @event FullScreenEventType#enterfullscreen\n     * @api\n     */\n    ENTERFULLSCREEN: 'enterfullscreen',\n    /**\n     * Triggered after the map leave fullscreen.\n     * @event FullScreenEventType#leavefullscreen\n     * @api\n     */\n    LEAVEFULLSCREEN: 'leavefullscreen',\n};\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen', import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen'|import(\"../ObjectEventType\").Types, Return>} FullScreenOnSignature\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text|HTMLElement} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text|HTMLElement} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [activeClassName=className + '-true'] CSS class name for the button\n * when full-screen is active.\n * @property {string} [inactiveClassName=className + '-false'] CSS class name for the button\n * when full-screen is inactive.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](https://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @fires FullScreenEventType#enterfullscreen\n * @fires FullScreenEventType#leavefullscreen\n * @api\n */\nvar FullScreen = /** @class */ (function (_super) {\n    __extends(FullScreen, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function FullScreen(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target,\n        }) || this;\n        /***\n         * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {FullScreenOnSignature<void>}\n         */\n        _this.un;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.keys_ = options.keys !== undefined ? options.keys : false;\n        /**\n         * @private\n         * @type {HTMLElement|string|undefined}\n         */\n        _this.source_ = options.source;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.isInFullscreen_ = false;\n        /**\n         * @private\n         */\n        _this.boundHandleMapTargetChange_ = _this.handleMapTargetChange_.bind(_this);\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.cssClassName_ =\n            options.className !== undefined ? options.className : 'ol-full-screen';\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.documentListeners_ = [];\n        /**\n         * @private\n         * @type {Array<string>}\n         */\n        _this.activeClassName_ =\n            options.activeClassName !== undefined\n                ? options.activeClassName.split(' ')\n                : [_this.cssClassName_ + '-true'];\n        /**\n         * @private\n         * @type {Array<string>}\n         */\n        _this.inactiveClassName_ =\n            options.inactiveClassName !== undefined\n                ? options.inactiveClassName.split(' ')\n                : [_this.cssClassName_ + '-false'];\n        var label = options.label !== undefined ? options.label : '\\u2922';\n        /**\n         * @private\n         * @type {Text|HTMLElement}\n         */\n        _this.labelNode_ =\n            typeof label === 'string' ? document.createTextNode(label) : label;\n        var labelActive = options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n        /**\n         * @private\n         * @type {Text|HTMLElement}\n         */\n        _this.labelActiveNode_ =\n            typeof labelActive === 'string'\n                ? document.createTextNode(labelActive)\n                : labelActive;\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.button_ = document.createElement('button');\n        _this.button_.title = tipLabel;\n        _this.button_.setAttribute('type', 'button');\n        _this.button_.appendChild(_this.labelNode_);\n        _this.button_.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        _this.setClassName_(_this.button_, _this.isInFullscreen_);\n        _this.element.className = \"\".concat(_this.cssClassName_, \" \").concat(CLASS_UNSELECTABLE, \" \").concat(CLASS_CONTROL);\n        _this.element.appendChild(_this.button_);\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    FullScreen.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleFullScreen_();\n    };\n    /**\n     * @private\n     */\n    FullScreen.prototype.handleFullScreen_ = function () {\n        var map = this.getMap();\n        if (!map) {\n            return;\n        }\n        var doc = map.getOwnerDocument();\n        if (!isFullScreenSupported(doc)) {\n            return;\n        }\n        if (isFullScreen(doc)) {\n            exitFullScreen(doc);\n        }\n        else {\n            var element = void 0;\n            if (this.source_) {\n                element =\n                    typeof this.source_ === 'string'\n                        ? doc.getElementById(this.source_)\n                        : this.source_;\n            }\n            else {\n                element = map.getTargetElement();\n            }\n            if (this.keys_) {\n                requestFullScreenWithKeys(element);\n            }\n            else {\n                requestFullScreen(element);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    FullScreen.prototype.handleFullScreenChange_ = function () {\n        var map = this.getMap();\n        if (!map) {\n            return;\n        }\n        var wasInFullscreen = this.isInFullscreen_;\n        this.isInFullscreen_ = isFullScreen(map.getOwnerDocument());\n        if (wasInFullscreen !== this.isInFullscreen_) {\n            this.setClassName_(this.button_, this.isInFullscreen_);\n            if (this.isInFullscreen_) {\n                replaceNode(this.labelActiveNode_, this.labelNode_);\n                this.dispatchEvent(FullScreenEventType.ENTERFULLSCREEN);\n            }\n            else {\n                replaceNode(this.labelNode_, this.labelActiveNode_);\n                this.dispatchEvent(FullScreenEventType.LEAVEFULLSCREEN);\n            }\n            map.updateSize();\n        }\n    };\n    /**\n     * @param {HTMLElement} element Target element\n     * @param {boolean} fullscreen True if fullscreen class name should be active\n     * @private\n     */\n    FullScreen.prototype.setClassName_ = function (element, fullscreen) {\n        var _a, _b, _c, _d;\n        if (fullscreen) {\n            (_a = element.classList).remove.apply(_a, this.inactiveClassName_);\n            (_b = element.classList).add.apply(_b, this.activeClassName_);\n        }\n        else {\n            (_c = element.classList).remove.apply(_c, this.activeClassName_);\n            (_d = element.classList).add.apply(_d, this.inactiveClassName_);\n        }\n    };\n    /**\n     * Remove the control from its current map and attach it to the new map.\n     * Pass `null` to just remove the control from the current map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default|null} map Map.\n     * @api\n     */\n    FullScreen.prototype.setMap = function (map) {\n        var oldMap = this.getMap();\n        if (oldMap) {\n            oldMap.removeChangeListener(MapProperty.TARGET, this.boundHandleMapTargetChange_);\n        }\n        _super.prototype.setMap.call(this, map);\n        this.handleMapTargetChange_();\n        if (map) {\n            map.addChangeListener(MapProperty.TARGET, this.boundHandleMapTargetChange_);\n        }\n    };\n    /**\n     * @private\n     */\n    FullScreen.prototype.handleMapTargetChange_ = function () {\n        var listeners = this.documentListeners_;\n        for (var i = 0, ii = listeners.length; i < ii; ++i) {\n            unlistenByKey(listeners[i]);\n        }\n        listeners.length = 0;\n        var map = this.getMap();\n        if (map) {\n            var doc = map.getOwnerDocument();\n            if (isFullScreenSupported(doc)) {\n                this.element.classList.remove(CLASS_UNSUPPORTED);\n            }\n            else {\n                this.element.classList.add(CLASS_UNSUPPORTED);\n            }\n            for (var i = 0, ii = events.length; i < ii; ++i) {\n                listeners.push(listen(doc, events[i], this.handleFullScreenChange_, this));\n            }\n            this.handleFullScreenChange_();\n        }\n    };\n    return FullScreen;\n}(Control));\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported(doc) {\n    var body = doc.body;\n    return !!(body['webkitRequestFullscreen'] ||\n        (body['msRequestFullscreen'] && doc['msFullscreenEnabled']) ||\n        (body.requestFullscreen && doc.fullscreenEnabled));\n}\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen(doc) {\n    return !!(doc['webkitIsFullScreen'] ||\n        doc['msFullscreenElement'] ||\n        doc.fullscreenElement);\n}\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n    if (element.requestFullscreen) {\n        element.requestFullscreen();\n    }\n    else if (element['msRequestFullscreen']) {\n        element['msRequestFullscreen']();\n    }\n    else if (element['webkitRequestFullscreen']) {\n        element['webkitRequestFullscreen']();\n    }\n}\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n    if (element['webkitRequestFullscreen']) {\n        element['webkitRequestFullscreen']();\n    }\n    else {\n        requestFullScreen(element);\n    }\n}\n/**\n * Exit fullscreen.\n * @param {Document} doc The document to exit fullscren from\n */\nfunction exitFullScreen(doc) {\n    if (doc.exitFullscreen) {\n        doc.exitFullscreen();\n    }\n    else if (doc['msExitFullscreen']) {\n        doc['msExitFullscreen']();\n    }\n    else if (doc['webkitExitFullscreen']) {\n        doc['webkitExitFullscreen']();\n    }\n}\nexport default FullScreen;\n//# sourceMappingURL=FullScreen.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport { CLASS_SELECTABLE } from './css.js';\nimport { containsExtent } from './extent.js';\nimport { listen, unlistenByKey } from './events.js';\nimport { outerHeight, outerWidth, removeChildren, removeNode } from './dom.js';\n/**\n * @typedef {'bottom-left' | 'bottom-center' | 'bottom-right' | 'center-left' | 'center-center' | 'center-right' | 'top-left' | 'top-center' | 'top-right'} Positioning\n * The overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, or `'top-right'`.\n */\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {Positioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport?\n * If `true` (deprecated), then `autoPanAnimation` and `autoPanMargin` will be\n * used to determine the panning parameters; if an object is supplied then other\n * parameters are ignored.\n * @property {PanOptions} [autoPanAnimation] The animation options used to pan\n * the overlay into view. This animation is only used when `autoPan` is enabled.\n * A `duration` and `easing` may be provided to customize the animation.\n * Deprecated and ignored if `autoPan` is supplied as an object.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning. Deprecated and ignored\n * if `autoPan` is supplied as an object.\n * @property {PanIntoViewOptions} [autoPanOptions] The options to use for the\n * autoPan. This is only used when `autoPan` is enabled and has preference over\n * the individual `autoPanMargin` and `autoPanOptions`.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n/**\n * @enum {string}\n * @protected\n */\nvar Property = {\n    ELEMENT: 'element',\n    MAP: 'map',\n    OFFSET: 'offset',\n    POSITION: 'position',\n    POSITIONING: 'positioning',\n};\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nvar Overlay = /** @class */ (function (_super) {\n    __extends(Overlay, _super);\n    /**\n     * @param {Options} options Overlay options.\n     */\n    function Overlay(options) {\n        var _this = _super.call(this) || this;\n        /***\n         * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {OverlayOnSignature<void>}\n         */\n        _this.un;\n        /**\n         * @protected\n         * @type {Options}\n         */\n        _this.options = options;\n        /**\n         * @protected\n         * @type {number|string|undefined}\n         */\n        _this.id = options.id;\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        _this.insertFirst =\n            options.insertFirst !== undefined ? options.insertFirst : true;\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        _this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.element = document.createElement('div');\n        _this.element.className =\n            options.className !== undefined\n                ? options.className\n                : 'ol-overlay-container ' + CLASS_SELECTABLE;\n        _this.element.style.position = 'absolute';\n        _this.element.style.pointerEvents = 'auto';\n        var autoPan = options.autoPan;\n        if (autoPan && 'object' !== typeof autoPan) {\n            autoPan = {\n                animation: options.autoPanAnimation,\n                margin: options.autoPanMargin,\n            };\n        }\n        /**\n         * @protected\n         * @type {PanIntoViewOptions|false}\n         */\n        _this.autoPan = /** @type {PanIntoViewOptions} */ (autoPan) || false;\n        /**\n         * @protected\n         * @type {{transform_: string,\n         *         visible: boolean}}\n         */\n        _this.rendered = {\n            transform_: '',\n            visible: true,\n        };\n        /**\n         * @protected\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.mapPostrenderListenerKey = null;\n        _this.addChangeListener(Property.ELEMENT, _this.handleElementChanged);\n        _this.addChangeListener(Property.MAP, _this.handleMapChanged);\n        _this.addChangeListener(Property.OFFSET, _this.handleOffsetChanged);\n        _this.addChangeListener(Property.POSITION, _this.handlePositionChanged);\n        _this.addChangeListener(Property.POSITIONING, _this.handlePositioningChanged);\n        if (options.element !== undefined) {\n            _this.setElement(options.element);\n        }\n        _this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n        _this.setPositioning(options.positioning || 'top-left');\n        if (options.position !== undefined) {\n            _this.setPosition(options.position);\n        }\n        return _this;\n    }\n    /**\n     * Get the DOM element of this overlay.\n     * @return {HTMLElement|undefined} The Element containing the overlay.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getElement = function () {\n        return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n    };\n    /**\n     * Get the overlay identifier which is set on constructor.\n     * @return {number|string|undefined} Id.\n     * @api\n     */\n    Overlay.prototype.getId = function () {\n        return this.id;\n    };\n    /**\n     * Get the map associated with this overlay.\n     * @return {import(\"./PluggableMap.js\").default|null} The map that the\n     * overlay is part of.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getMap = function () {\n        return /** @type {import(\"./PluggableMap.js\").default|null} */ (this.get(Property.MAP) || null);\n    };\n    /**\n     * Get the offset of this overlay.\n     * @return {Array<number>} The offset.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getOffset = function () {\n        return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n    };\n    /**\n     * Get the current position of this overlay.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n     *     anchored at.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getPosition = function () {\n        return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(Property.POSITION));\n    };\n    /**\n     * Get the current positioning of this overlay.\n     * @return {Positioning} How the overlay is positioned\n     *     relative to its point on the map.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getPositioning = function () {\n        return /** @type {Positioning} */ (this.get(Property.POSITIONING));\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handleElementChanged = function () {\n        removeChildren(this.element);\n        var element = this.getElement();\n        if (element) {\n            this.element.appendChild(element);\n        }\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handleMapChanged = function () {\n        if (this.mapPostrenderListenerKey) {\n            removeNode(this.element);\n            unlistenByKey(this.mapPostrenderListenerKey);\n            this.mapPostrenderListenerKey = null;\n        }\n        var map = this.getMap();\n        if (map) {\n            this.mapPostrenderListenerKey = listen(map, MapEventType.POSTRENDER, this.render, this);\n            this.updatePixelPosition();\n            var container = this.stopEvent\n                ? map.getOverlayContainerStopEvent()\n                : map.getOverlayContainer();\n            if (this.insertFirst) {\n                container.insertBefore(this.element, container.childNodes[0] || null);\n            }\n            else {\n                container.appendChild(this.element);\n            }\n            this.performAutoPan();\n        }\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.render = function () {\n        this.updatePixelPosition();\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handleOffsetChanged = function () {\n        this.updatePixelPosition();\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handlePositionChanged = function () {\n        this.updatePixelPosition();\n        this.performAutoPan();\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handlePositioningChanged = function () {\n        this.updatePixelPosition();\n    };\n    /**\n     * Set the DOM element to be associated with this overlay.\n     * @param {HTMLElement|undefined} element The Element containing the overlay.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setElement = function (element) {\n        this.set(Property.ELEMENT, element);\n    };\n    /**\n     * Set the map to be associated with this overlay.\n     * @param {import(\"./PluggableMap.js\").default|null} map The map that the\n     * overlay is part of. Pass `null` to just remove the overlay from the current map.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setMap = function (map) {\n        this.set(Property.MAP, map);\n    };\n    /**\n     * Set the offset for this overlay.\n     * @param {Array<number>} offset Offset.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setOffset = function (offset) {\n        this.set(Property.OFFSET, offset);\n    };\n    /**\n     * Set the position for this overlay. If the position is `undefined` the\n     * overlay is hidden.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n     *     is anchored at.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setPosition = function (position) {\n        this.set(Property.POSITION, position);\n    };\n    /**\n     * Pan the map so that the overlay is entirely visible in the current viewport\n     * (if necessary) using the configured autoPan parameters\n     * @protected\n     */\n    Overlay.prototype.performAutoPan = function () {\n        if (this.autoPan) {\n            this.panIntoView(this.autoPan);\n        }\n    };\n    /**\n     * Pan the map so that the overlay is entirely visible in the current viewport\n     * (if necessary).\n     * @param {PanIntoViewOptions} [opt_panIntoViewOptions] Options for the pan action\n     * @api\n     */\n    Overlay.prototype.panIntoView = function (opt_panIntoViewOptions) {\n        var map = this.getMap();\n        if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n            return;\n        }\n        var mapRect = this.getRect(map.getTargetElement(), map.getSize());\n        var element = this.getElement();\n        var overlayRect = this.getRect(element, [\n            outerWidth(element),\n            outerHeight(element),\n        ]);\n        var panIntoViewOptions = opt_panIntoViewOptions || {};\n        var myMargin = panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n        if (!containsExtent(mapRect, overlayRect)) {\n            // the overlay is not completely inside the viewport, so pan the map\n            var offsetLeft = overlayRect[0] - mapRect[0];\n            var offsetRight = mapRect[2] - overlayRect[2];\n            var offsetTop = overlayRect[1] - mapRect[1];\n            var offsetBottom = mapRect[3] - overlayRect[3];\n            var delta = [0, 0];\n            if (offsetLeft < 0) {\n                // move map to the left\n                delta[0] = offsetLeft - myMargin;\n            }\n            else if (offsetRight < 0) {\n                // move map to the right\n                delta[0] = Math.abs(offsetRight) + myMargin;\n            }\n            if (offsetTop < 0) {\n                // move map up\n                delta[1] = offsetTop - myMargin;\n            }\n            else if (offsetBottom < 0) {\n                // move map down\n                delta[1] = Math.abs(offsetBottom) + myMargin;\n            }\n            if (delta[0] !== 0 || delta[1] !== 0) {\n                var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (map.getView().getCenterInternal());\n                var centerPx = map.getPixelFromCoordinateInternal(center);\n                if (!centerPx) {\n                    return;\n                }\n                var newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n                var panOptions = panIntoViewOptions.animation || {};\n                map.getView().animateInternal({\n                    center: map.getCoordinateFromPixelInternal(newCenterPx),\n                    duration: panOptions.duration,\n                    easing: panOptions.easing,\n                });\n            }\n        }\n    };\n    /**\n     * Get the extent of an element relative to the document\n     * @param {HTMLElement} element The element.\n     * @param {import(\"./size.js\").Size} size The size of the element.\n     * @return {import(\"./extent.js\").Extent} The extent.\n     * @protected\n     */\n    Overlay.prototype.getRect = function (element, size) {\n        var box = element.getBoundingClientRect();\n        var offsetX = box.left + window.pageXOffset;\n        var offsetY = box.top + window.pageYOffset;\n        return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n    };\n    /**\n     * Set the positioning for this overlay.\n     * @param {Positioning} positioning how the overlay is\n     *     positioned relative to its point on the map.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setPositioning = function (positioning) {\n        this.set(Property.POSITIONING, positioning);\n    };\n    /**\n     * Modify the visibility of the element.\n     * @param {boolean} visible Element visibility.\n     * @protected\n     */\n    Overlay.prototype.setVisible = function (visible) {\n        if (this.rendered.visible !== visible) {\n            this.element.style.display = visible ? '' : 'none';\n            this.rendered.visible = visible;\n        }\n    };\n    /**\n     * Update pixel position.\n     * @protected\n     */\n    Overlay.prototype.updatePixelPosition = function () {\n        var map = this.getMap();\n        var position = this.getPosition();\n        if (!map || !map.isRendered() || !position) {\n            this.setVisible(false);\n            return;\n        }\n        var pixel = map.getPixelFromCoordinate(position);\n        var mapSize = map.getSize();\n        this.updateRenderedPosition(pixel, mapSize);\n    };\n    /**\n     * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n     * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n     * @protected\n     */\n    Overlay.prototype.updateRenderedPosition = function (pixel, mapSize) {\n        var style = this.element.style;\n        var offset = this.getOffset();\n        var positioning = this.getPositioning();\n        this.setVisible(true);\n        var x = Math.round(pixel[0] + offset[0]) + 'px';\n        var y = Math.round(pixel[1] + offset[1]) + 'px';\n        var posX = '0%';\n        var posY = '0%';\n        if (positioning == 'bottom-right' ||\n            positioning == 'center-right' ||\n            positioning == 'top-right') {\n            posX = '-100%';\n        }\n        else if (positioning == 'bottom-center' ||\n            positioning == 'center-center' ||\n            positioning == 'top-center') {\n            posX = '-50%';\n        }\n        if (positioning == 'bottom-left' ||\n            positioning == 'bottom-center' ||\n            positioning == 'bottom-right') {\n            posY = '-100%';\n        }\n        else if (positioning == 'center-left' ||\n            positioning == 'center-center' ||\n            positioning == 'center-right') {\n            posY = '-50%';\n        }\n        var transform = \"translate(\".concat(posX, \", \").concat(posY, \") translate(\").concat(x, \", \").concat(y, \")\");\n        if (this.rendered.transform_ != transform) {\n            this.rendered.transform_ = transform;\n            style.transform = transform;\n            // @ts-ignore IE9\n            style.msTransform = transform;\n        }\n    };\n    /**\n     * returns the options this Overlay has been created with\n     * @return {Options} overlay options\n     */\n    Overlay.prototype.getOptions = function () {\n        return this.options;\n    };\n    return Overlay;\n}(BaseObject));\nexport default Overlay;\n//# sourceMappingURL=Overlay.js.map"],"sourceRoot":""}