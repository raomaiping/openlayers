{"version":3,"sources":["webpack:///./src/hooks/updateMapSize.js","webpack:///./src/views/map-controls/full-screen/index.vue?855b","webpack:///./src/views/map-controls/full-screen/index.vue","webpack:///./src/views/map-controls/full-screen/index.vue?ac37","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/source/XYZ.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/control/FullScreen.js"],"names":["map","targetNode","document","querySelector","observer","MutationObserver","mutationsList","mutation","type","attributeName","i","length","updateSize","observe","attributes","childList","subtree","onBeforeUnmount","disconnect","raster","TileLayer","source","XYZ","attributions","ATTRIBUTIONS","url","MAPURL","maxZoom","onMounted","initMap","Map","target","layers","view","View","projection","center","zoom","controls","defaults","extend","FullScreen","updateMapSize","__exports__","extendStatics","__extends","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","this","constructor","create","_super","opt_options","_this","options","interpolate","undefined","imageSmoothing","tileGrid","extent","maxResolution","minZoom","tileSize","cacheSize","crossOrigin","opaque","reprojectionErrorThreshold","tileLoadFunction","tilePixelRatio","tileUrlFunction","urls","wrapX","transition","attributionsCollapsible","zDirection","gutter_","gutter","getGutter","events","FullScreenEventType","element","createElement","on","once","un","keys_","keys","source_","isInFullscreen_","boundHandleMapTargetChange_","handleMapTargetChange_","bind","cssClassName_","className","documentListeners_","activeClassName_","activeClassName","split","inactiveClassName_","inactiveClassName","label","labelNode_","createTextNode","labelActive","labelActiveNode_","tipLabel","button_","title","setAttribute","appendChild","addEventListener","CLICK","handleClick_","setClassName_","concat","event","preventDefault","handleFullScreen_","getMap","doc","getOwnerDocument","isFullScreenSupported","isFullScreen","exitFullscreen","exitFullScreen","getElementById","getTargetElement","requestFullScreen","requestFullScreenWithKeys","handleFullScreenChange_","wasInFullscreen","dispatchEvent","fullscreen","_a","_b","_c","_d","classList","remove","apply","add","setMap","oldMap","removeChangeListener","TARGET","addChangeListener","listeners","ii","push","body","requestFullscreen","fullscreenEnabled","fullscreenElement"],"mappings":"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","file":"js/chunk-1f0d27c5.b03c1135.js","sourcesContent":["import { onBeforeUnmount } from \"vue\";\n\n/**\n * 监听侧边栏，侧边栏发生变化更新地图\n * @param {ol.Map} map 地图实例\n */\nexport default (...map) => {\n  // 选择需要观察变动的节点\n  const targetNode = document.querySelector(\n    \".el-aside .menu .el-scrollbar__view\"\n  );\n  // 观察器的配置（需要观察什么变动）\n  const config = { attributes: true, childList: true, subtree: true };\n  // 当观察到变动时执行的回调函数\n  const callback = function (mutationsList) {\n    // Use traditional 'for loops' for IE 11\n    for (let mutation of mutationsList) {\n      if (mutation.type === \"childList\") {\n        // console.log(\"已添加或删除子节点。\");\n      } else if (\n        mutation.type === \"attributes\" &&\n        mutation.attributeName === \"style\"\n      ) {\n        for (let i = 0; i < map.length; i++) {\n          map[i].updateSize();\n        }\n\n        // console.log(\"这个 \" + mutation.attributeName + \" 属性被修改。\");\n      }\n    }\n  };\n  // 创建一个观察器实例并传入回调函数\n  const observer = new MutationObserver(callback);\n\n  // 以上述配置开始观察目标节点\n  observer.observe(targetNode, config);\n\n  //卸载前\n  onBeforeUnmount(() => {\n    observer.disconnect();\n  });\n};\n","export * from \"-!../../../../node_modules/.pnpm/mini-css-extract-plugin@0.9.0_webpack@4.47.0/node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../../node_modules/.pnpm/css-loader@3.6.0_webpack@4.47.0/node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/.pnpm/vue-loader@16.8.3_@vue+compiler-sfc@3.4.6_vue@3.4.6_webpack@4.47.0/node_modules/vue-loader/dist/stylePostLoader.js!../../../../node_modules/.pnpm/postcss-loader@3.0.0/node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/.pnpm/cache-loader@4.1.0_webpack@4.47.0/node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/.pnpm/vue-loader@16.8.3_@vue+compiler-sfc@3.4.6_vue@3.4.6_webpack@4.47.0/node_modules/vue-loader/dist/index.js??ref--1-1!./index.vue?vue&type=style&index=0&id=64ec8286&scoped=true&lang=css\"","<template>\n  <div id=\"map\"></div>\n</template>\n\n<script setup>\n  import \"ol/ol.css\";\n  import { onMounted } from \"vue\";\n  import { Map, View } from \"ol\";\n  import { Tile as TileLayer } from \"ol/layer\";\n  import { defaults, FullScreen } from \"ol/control\";\n  import { XYZ } from \"ol/source\";\n  import { MAPURL, ATTRIBUTIONS } from \"@/constants\";\n  import updateMapSize from \"@/hooks/updateMapSize\";\n\n  const raster = new TileLayer({\n    source: new XYZ({\n      attributions: ATTRIBUTIONS,\n      url: MAPURL,\n      maxZoom: 20,\n    }),\n  });\n  const initMap = () => {\n    const map = new Map({\n      //初始化map\n      target: \"map\",\n      //地图容器中加载的图层\n      layers: [\n        //加载瓦片图层数据\n        raster,\n      ],\n      view: new View({\n        projection: \"EPSG:4326\", // 坐标系，有EPSG:4326和EPSG:3 857\n        center: [0, 0], // 深圳坐标\n        //地图初始显示级别\n        zoom: 5,\n      }),\n      //加载控件到地图容器中\n      controls: defaults().extend([\n        new FullScreen(), //加载全屏显示控件（目前支持非IE内核浏览器）\n      ]),\n    });\n    // 侧边栏变化更新地图\n    updateMapSize(map);\n  };\n  onMounted(() => {\n    initMap();\n  });\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n  #map {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n  }\n</style>\n","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=64ec8286&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/openlayers/openlayers/node_modules/.pnpm/vue-loader@16.8.3_@vue+compiler-sfc@3.4.6_vue@3.4.6_webpack@4.47.0/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-64ec8286\"]])\n\nexport default __exports__","/**\n * @module ol/source/XYZ\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileImage from './TileImage.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nvar XYZ = /** @class */ (function (_super) {\n    __extends(XYZ, _super);\n    /**\n     * @param {Options} [opt_options] XYZ options.\n     */\n    function XYZ(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var interpolate = options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n        if (options.interpolate !== undefined) {\n            interpolate = options.interpolate;\n        }\n        var projection = options.projection !== undefined ? options.projection : 'EPSG:3857';\n        var tileGrid = options.tileGrid !== undefined\n            ? options.tileGrid\n            : createXYZ({\n                extent: extentFromProjection(projection),\n                maxResolution: options.maxResolution,\n                maxZoom: options.maxZoom,\n                minZoom: options.minZoom,\n                tileSize: options.tileSize,\n            });\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            interpolate: interpolate,\n            opaque: options.opaque,\n            projection: projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n        return _this;\n    }\n    /**\n     * @return {number} Gutter.\n     */\n    XYZ.prototype.getGutter = function () {\n        return this.gutter_;\n    };\n    return XYZ;\n}(TileImage));\nexport default XYZ;\n//# sourceMappingURL=XYZ.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/FullScreen\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport MapProperty from '../MapProperty.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED } from '../css.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { replaceNode } from '../dom.js';\nvar events = [\n    'fullscreenchange',\n    'webkitfullscreenchange',\n    'MSFullscreenChange',\n];\n/**\n * @enum {string}\n */\nvar FullScreenEventType = {\n    /**\n     * Triggered after the map entered fullscreen.\n     * @event FullScreenEventType#enterfullscreen\n     * @api\n     */\n    ENTERFULLSCREEN: 'enterfullscreen',\n    /**\n     * Triggered after the map leave fullscreen.\n     * @event FullScreenEventType#leavefullscreen\n     * @api\n     */\n    LEAVEFULLSCREEN: 'leavefullscreen',\n};\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen', import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen'|import(\"../ObjectEventType\").Types, Return>} FullScreenOnSignature\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text|HTMLElement} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text|HTMLElement} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [activeClassName=className + '-true'] CSS class name for the button\n * when full-screen is active.\n * @property {string} [inactiveClassName=className + '-false'] CSS class name for the button\n * when full-screen is inactive.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](https://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @fires FullScreenEventType#enterfullscreen\n * @fires FullScreenEventType#leavefullscreen\n * @api\n */\nvar FullScreen = /** @class */ (function (_super) {\n    __extends(FullScreen, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function FullScreen(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target,\n        }) || this;\n        /***\n         * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {FullScreenOnSignature<void>}\n         */\n        _this.un;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.keys_ = options.keys !== undefined ? options.keys : false;\n        /**\n         * @private\n         * @type {HTMLElement|string|undefined}\n         */\n        _this.source_ = options.source;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.isInFullscreen_ = false;\n        /**\n         * @private\n         */\n        _this.boundHandleMapTargetChange_ = _this.handleMapTargetChange_.bind(_this);\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.cssClassName_ =\n            options.className !== undefined ? options.className : 'ol-full-screen';\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.documentListeners_ = [];\n        /**\n         * @private\n         * @type {Array<string>}\n         */\n        _this.activeClassName_ =\n            options.activeClassName !== undefined\n                ? options.activeClassName.split(' ')\n                : [_this.cssClassName_ + '-true'];\n        /**\n         * @private\n         * @type {Array<string>}\n         */\n        _this.inactiveClassName_ =\n            options.inactiveClassName !== undefined\n                ? options.inactiveClassName.split(' ')\n                : [_this.cssClassName_ + '-false'];\n        var label = options.label !== undefined ? options.label : '\\u2922';\n        /**\n         * @private\n         * @type {Text|HTMLElement}\n         */\n        _this.labelNode_ =\n            typeof label === 'string' ? document.createTextNode(label) : label;\n        var labelActive = options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n        /**\n         * @private\n         * @type {Text|HTMLElement}\n         */\n        _this.labelActiveNode_ =\n            typeof labelActive === 'string'\n                ? document.createTextNode(labelActive)\n                : labelActive;\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.button_ = document.createElement('button');\n        _this.button_.title = tipLabel;\n        _this.button_.setAttribute('type', 'button');\n        _this.button_.appendChild(_this.labelNode_);\n        _this.button_.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        _this.setClassName_(_this.button_, _this.isInFullscreen_);\n        _this.element.className = \"\".concat(_this.cssClassName_, \" \").concat(CLASS_UNSELECTABLE, \" \").concat(CLASS_CONTROL);\n        _this.element.appendChild(_this.button_);\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    FullScreen.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleFullScreen_();\n    };\n    /**\n     * @private\n     */\n    FullScreen.prototype.handleFullScreen_ = function () {\n        var map = this.getMap();\n        if (!map) {\n            return;\n        }\n        var doc = map.getOwnerDocument();\n        if (!isFullScreenSupported(doc)) {\n            return;\n        }\n        if (isFullScreen(doc)) {\n            exitFullScreen(doc);\n        }\n        else {\n            var element = void 0;\n            if (this.source_) {\n                element =\n                    typeof this.source_ === 'string'\n                        ? doc.getElementById(this.source_)\n                        : this.source_;\n            }\n            else {\n                element = map.getTargetElement();\n            }\n            if (this.keys_) {\n                requestFullScreenWithKeys(element);\n            }\n            else {\n                requestFullScreen(element);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    FullScreen.prototype.handleFullScreenChange_ = function () {\n        var map = this.getMap();\n        if (!map) {\n            return;\n        }\n        var wasInFullscreen = this.isInFullscreen_;\n        this.isInFullscreen_ = isFullScreen(map.getOwnerDocument());\n        if (wasInFullscreen !== this.isInFullscreen_) {\n            this.setClassName_(this.button_, this.isInFullscreen_);\n            if (this.isInFullscreen_) {\n                replaceNode(this.labelActiveNode_, this.labelNode_);\n                this.dispatchEvent(FullScreenEventType.ENTERFULLSCREEN);\n            }\n            else {\n                replaceNode(this.labelNode_, this.labelActiveNode_);\n                this.dispatchEvent(FullScreenEventType.LEAVEFULLSCREEN);\n            }\n            map.updateSize();\n        }\n    };\n    /**\n     * @param {HTMLElement} element Target element\n     * @param {boolean} fullscreen True if fullscreen class name should be active\n     * @private\n     */\n    FullScreen.prototype.setClassName_ = function (element, fullscreen) {\n        var _a, _b, _c, _d;\n        if (fullscreen) {\n            (_a = element.classList).remove.apply(_a, this.inactiveClassName_);\n            (_b = element.classList).add.apply(_b, this.activeClassName_);\n        }\n        else {\n            (_c = element.classList).remove.apply(_c, this.activeClassName_);\n            (_d = element.classList).add.apply(_d, this.inactiveClassName_);\n        }\n    };\n    /**\n     * Remove the control from its current map and attach it to the new map.\n     * Pass `null` to just remove the control from the current map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default|null} map Map.\n     * @api\n     */\n    FullScreen.prototype.setMap = function (map) {\n        var oldMap = this.getMap();\n        if (oldMap) {\n            oldMap.removeChangeListener(MapProperty.TARGET, this.boundHandleMapTargetChange_);\n        }\n        _super.prototype.setMap.call(this, map);\n        this.handleMapTargetChange_();\n        if (map) {\n            map.addChangeListener(MapProperty.TARGET, this.boundHandleMapTargetChange_);\n        }\n    };\n    /**\n     * @private\n     */\n    FullScreen.prototype.handleMapTargetChange_ = function () {\n        var listeners = this.documentListeners_;\n        for (var i = 0, ii = listeners.length; i < ii; ++i) {\n            unlistenByKey(listeners[i]);\n        }\n        listeners.length = 0;\n        var map = this.getMap();\n        if (map) {\n            var doc = map.getOwnerDocument();\n            if (isFullScreenSupported(doc)) {\n                this.element.classList.remove(CLASS_UNSUPPORTED);\n            }\n            else {\n                this.element.classList.add(CLASS_UNSUPPORTED);\n            }\n            for (var i = 0, ii = events.length; i < ii; ++i) {\n                listeners.push(listen(doc, events[i], this.handleFullScreenChange_, this));\n            }\n            this.handleFullScreenChange_();\n        }\n    };\n    return FullScreen;\n}(Control));\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported(doc) {\n    var body = doc.body;\n    return !!(body['webkitRequestFullscreen'] ||\n        (body['msRequestFullscreen'] && doc['msFullscreenEnabled']) ||\n        (body.requestFullscreen && doc.fullscreenEnabled));\n}\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen(doc) {\n    return !!(doc['webkitIsFullScreen'] ||\n        doc['msFullscreenElement'] ||\n        doc.fullscreenElement);\n}\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n    if (element.requestFullscreen) {\n        element.requestFullscreen();\n    }\n    else if (element['msRequestFullscreen']) {\n        element['msRequestFullscreen']();\n    }\n    else if (element['webkitRequestFullscreen']) {\n        element['webkitRequestFullscreen']();\n    }\n}\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n    if (element['webkitRequestFullscreen']) {\n        element['webkitRequestFullscreen']();\n    }\n    else {\n        requestFullScreen(element);\n    }\n}\n/**\n * Exit fullscreen.\n * @param {Document} doc The document to exit fullscren from\n */\nfunction exitFullScreen(doc) {\n    if (doc.exitFullscreen) {\n        doc.exitFullscreen();\n    }\n    else if (doc['msExitFullscreen']) {\n        doc['msExitFullscreen']();\n    }\n    else if (doc['webkitExitFullscreen']) {\n        doc['webkitExitFullscreen']();\n    }\n}\nexport default FullScreen;\n//# sourceMappingURL=FullScreen.js.map"],"sourceRoot":""}