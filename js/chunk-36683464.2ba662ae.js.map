{"version":3,"sources":["webpack:///./src/hooks/updateMapSize.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/render.js","webpack:///./src/views/others/trajectory-tracking/index.vue?d0c9","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/geom/flat/interpolate.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/style/Text.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/format/Feature.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/format/TextFeature.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/geom/flat/flip.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/format/Polyline.js","webpack:///./src/views/others/trajectory-tracking/index.vue","webpack:///./src/views/others/trajectory-tracking/index.vue?d586","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/control/FullScreen.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/geom/LineString.js"],"names":["map","targetNode","document","querySelector","observer","MutationObserver","mutationsList","mutation","type","attributeName","i","length","updateSize","observe","attributes","childList","subtree","onBeforeUnmount","disconnect","getVectorContext","event","context","CanvasRenderingContext2D","Error","userTransform","canvasPixelRatio","inversePixelTransform","frameState","transform","slice","coordinateToPixelTransform","squaredTolerance","viewState","resolution","userProjection","projection","extent","rotation","interpolatePoint","flatCoordinates","offset","end","stride","fraction","opt_dest","opt_dimension","o","t","n","x1","y1","length_1","cumulativeLengths","x2","y2","Math","sqrt","push","target","index","dimension","dest","Array","undefined","NaN","lineStringCoordinateAtM","m","extrapolate","coordinate","lo","hi","mid","m0","lineStringsCoordinateAtM","ends","interpolate","ii","Text","opt_options","options","this","font_","font","rotation_","rotateWithView_","rotateWithView","scale_","scale","scaleArray_","text_","text","textAlign_","textAlign","justify_","justify","textBaseline_","textBaseline","fill_","fill","color","maxAngle_","maxAngle","PI","placement_","placement","POINT","overflow_","overflow","stroke_","stroke","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","prototype","clone","getScale","getFont","getPlacement","getMaxAngle","getOverflow","getRotation","getRotateWithView","isArray","getText","getTextAlign","getJustify","getTextBaseline","getFill","getStroke","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","getScaleArray","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRotateWithView","setFill","setRotation","setScale","setStroke","setText","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","FeatureFormat","dataProjection","defaultFeatureProjection","supportedMediaTypes","getReadOptions","source","readProjection","getUnits","TILE_PIXELS","setWorldExtent","featureProjection","adaptOptions","getType","readFeature","readFeatures","readGeometry","writeFeature","feature","writeFeatures","features","writeGeometry","geometry","transformGeometryWithOptions","write","transformed","decimals","power_1","pow","applyTransform","coordinates","round","extendStatics","__extends","d","b","Object","setPrototypeOf","__proto__","p","hasOwnProperty","call","TypeError","String","__","constructor","create","_super","TextFeature","readFeatureFromText","readFeaturesFromText","readGeometryFromText","readProjectionFromText","writeFeatureText","writeFeaturesText","writeGeometryText","flipXY","opt_destOffset","destOffset","j","x","k","encodeUnsignedInteger","num","value","encoded","fromCharCode","Polyline","_this","factor_","factor","geometryLayout_","geometryLayout","GeometryLayout","XY","Feature","opt_factor","lastNumbers","numbers","current","shift","charCodeAt","decodeUnsignedIntegers","decodeSignedIntegers","decodeFloats","decodeDeltas","inflate","lineString","LineString","getGeometry","getFlatCoordinates","getStride","delta","encodeUnsignedIntegers","encodeSignedIntegers","encodeFloats","encodeDeltas","state","reactive","speed","isPlay","lastTime","route","position","vectorLayer","distance","oldP","handleStatus","setGeometry","un","moveFeature","setStyle","Style","Fill","render","Date","now","on","Number","time","currentCoordinate","getCoordinateAt","setCoordinates","vectorContext","atan2","drawGeometry","onMounted","Map","layers","TileLayer","name","XYZ","attributions","ATTRIBUTIONS","url","MAPURL","maxZoom","view","View","center","zoom","minZoom","controls","defaults","extend","FullScreen","updateMapSize","fetch","then","response","json","result","polyline","routes","routeFeature","startMarker","Point","getFirstCoordinate","endMarker","getLastCoordinate","geoMarker","test","styles","Stroke","width","icon","image","Icon","anchor","src","VectorLayer","VectorSource","style","get","addLayer","__exports__","events","FullScreenEventType","element","createElement","once","keys_","keys","source_","isInFullscreen_","boundHandleMapTargetChange_","handleMapTargetChange_","bind","cssClassName_","className","documentListeners_","activeClassName_","activeClassName","split","inactiveClassName_","inactiveClassName","label","labelNode_","createTextNode","labelActive","labelActiveNode_","tipLabel","button_","title","setAttribute","appendChild","addEventListener","CLICK","handleClick_","setClassName_","concat","preventDefault","handleFullScreen_","getMap","doc","getOwnerDocument","isFullScreenSupported","isFullScreen","exitFullscreen","exitFullScreen","getElementById","getTargetElement","requestFullScreen","requestFullScreenWithKeys","handleFullScreenChange_","wasInFullscreen","dispatchEvent","fullscreen","_a","_b","_c","_d","classList","remove","apply","add","setMap","oldMap","removeChangeListener","TARGET","addChangeListener","listeners","body","requestFullscreen","fullscreenEnabled","fullscreenElement","opt_layout","flatMidpoint_","flatMidpointRevision_","maxDelta_","maxDeltaRevision_","setFlatCoordinates","appendCoordinate","changed","layout","applyProperties","closestPointXY","y","closestPoint","minSquaredDistance","getExtent","getRevision","forEachSegment","callback","getCoordinateAtM","opt_extrapolate","XYM","XYZM","getCoordinates","getLength","getFlatMidpoint","getSimplifiedGeometryInternal","simplifiedFlatCoordinates","intersectsExtent","setLayout"],"mappings":"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","file":"js/chunk-36683464.2ba662ae.js","sourcesContent":["import { onBeforeUnmount } from \"vue\";\n\n/**\n * 监听侧边栏，侧边栏发生变化更新地图\n * @param {ol.Map} map 地图实例\n */\nexport default (...map) => {\n  // 选择需要观察变动的节点\n  const targetNode = document.querySelector(\n    \".el-aside .menu .el-scrollbar__view\"\n  );\n  // 观察器的配置（需要观察什么变动）\n  const config = { attributes: true, childList: true, subtree: true };\n  // 当观察到变动时执行的回调函数\n  const callback = function (mutationsList) {\n    // Use traditional 'for loops' for IE 11\n    for (let mutation of mutationsList) {\n      if (mutation.type === \"childList\") {\n        // console.log(\"已添加或删除子节点。\");\n      } else if (\n        mutation.type === \"attributes\" &&\n        mutation.attributeName === \"style\"\n      ) {\n        for (let i = 0; i < map.length; i++) {\n          map[i].updateSize();\n        }\n\n        // console.log(\"这个 \" + mutation.attributeName + \" 属性被修改。\");\n      }\n    }\n  };\n  // 创建一个观察器实例并传入回调函数\n  const observer = new MutationObserver(callback);\n\n  // 以上述配置开始观察目标节点\n  observer.observe(targetNode, config);\n\n  //卸载前\n  onBeforeUnmount(() => {\n    observer.disconnect();\n  });\n};\n","/**\n * @module ol/render\n */\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\nimport { DEVICE_PIXEL_RATIO } from './has.js';\nimport { apply as applyTransform, create as createTransform, multiply as multiplyTransform, scale as scaleTransform, } from './transform.js';\nimport { getSquaredTolerance } from './renderer/vector.js';\nimport { getTransformFromProjections, getUserProjection } from './proj.js';\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {import(\"./Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature~Feature} or\n * {@link module:ol/render/Feature~RenderFeature} and returns a `{number}`.\n *\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\n */\n/**\n * @typedef {Object} ToContextOptions\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render';\n * import Fill from 'ol/style/Fill';\n * import Polygon from 'ol/geom/Polygon';\n *\n * var canvas = document.createElement('canvas');\n * var render = toContext(canvas.getContext('2d'),\n *     { size: [100, 100] });\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]]));\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {ToContextOptions} [opt_options] Options.\n * @return {CanvasImmediateRenderer} Canvas Immediate.\n * @api\n */\nexport function toContext(context, opt_options) {\n    var canvas = context.canvas;\n    var options = opt_options ? opt_options : {};\n    var pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n    var size = options.size;\n    if (size) {\n        canvas.width = size[0] * pixelRatio;\n        canvas.height = size[1] * pixelRatio;\n        canvas.style.width = size[0] + 'px';\n        canvas.style.height = size[1] + 'px';\n    }\n    var extent = [0, 0, canvas.width, canvas.height];\n    var transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n    return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n/**\n * Gets a vector context for drawing to the event's canvas.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @return {CanvasImmediateRenderer} Vector context.\n * @api\n */\nexport function getVectorContext(event) {\n    if (!(event.context instanceof CanvasRenderingContext2D)) {\n        throw new Error('Only works for render events from Canvas 2D layers');\n    }\n    // canvas may be at a different pixel ratio than frameState.pixelRatio\n    var canvasPixelRatio = event.inversePixelTransform[0];\n    var frameState = event.frameState;\n    var transform = multiplyTransform(event.inversePixelTransform.slice(), frameState.coordinateToPixelTransform);\n    var squaredTolerance = getSquaredTolerance(frameState.viewState.resolution, canvasPixelRatio);\n    var userTransform;\n    var userProjection = getUserProjection();\n    if (userProjection) {\n        userTransform = getTransformFromProjections(userProjection, frameState.viewState.projection);\n    }\n    return new CanvasImmediateRenderer(event.context, canvasPixelRatio, frameState.extent, transform, frameState.viewState.rotation, squaredTolerance, userTransform);\n}\n/**\n * Gets the pixel of the event's canvas context from the map viewport's CSS pixel.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @param {import(\"./pixel.js\").Pixel} pixel CSS pixel relative to the top-left\n * corner of the map viewport.\n * @return {import(\"./pixel.js\").Pixel} Pixel on the event's canvas context.\n * @api\n */\nexport function getRenderPixel(event, pixel) {\n    return applyTransform(event.inversePixelTransform, pixel.slice(0));\n}\n//# sourceMappingURL=render.js.map","export * from \"-!../../../../node_modules/.pnpm/mini-css-extract-plugin@0.9.0_webpack@4.47.0/node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../../node_modules/.pnpm/css-loader@3.6.0_webpack@4.47.0/node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/.pnpm/vue-loader@16.8.3_@vue+compiler-sfc@3.4.6_vue@3.4.6_webpack@4.47.0/node_modules/vue-loader/dist/stylePostLoader.js!../../../../node_modules/.pnpm/postcss-loader@3.0.0/node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/.pnpm/cache-loader@4.1.0_webpack@4.47.0/node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/.pnpm/vue-loader@16.8.3_@vue+compiler-sfc@3.4.6_vue@3.4.6_webpack@4.47.0/node_modules/vue-loader/dist/index.js??ref--1-1!./index.vue?vue&type=style&index=0&id=3d1b4512&scoped=true&lang=css\"","/**\n * @module ol/geom/flat/interpolate\n */\nimport { binarySearch } from '../../array.js';\nimport { lerp } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [opt_dest] Destination.\n * @param {number} [opt_dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest, opt_dimension) {\n    var o, t;\n    var n = (end - offset) / stride;\n    if (n === 1) {\n        o = offset;\n    }\n    else if (n === 2) {\n        o = offset;\n        t = fraction;\n    }\n    else if (n !== 0) {\n        var x1 = flatCoordinates[offset];\n        var y1 = flatCoordinates[offset + 1];\n        var length_1 = 0;\n        var cumulativeLengths = [0];\n        for (var i = offset + stride; i < end; i += stride) {\n            var x2 = flatCoordinates[i];\n            var y2 = flatCoordinates[i + 1];\n            length_1 += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n            cumulativeLengths.push(length_1);\n            x1 = x2;\n            y1 = y2;\n        }\n        var target = fraction * length_1;\n        var index = binarySearch(cumulativeLengths, target);\n        if (index < 0) {\n            t =\n                (target - cumulativeLengths[-index - 2]) /\n                    (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n            o = offset + (-index - 2) * stride;\n        }\n        else {\n            o = offset + index * stride;\n        }\n    }\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var dest = opt_dest ? opt_dest : new Array(dimension);\n    for (var i = 0; i < dimension; ++i) {\n        dest[i] =\n            o === undefined\n                ? NaN\n                : t === undefined\n                    ? flatCoordinates[o + i]\n                    : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n    if (end == offset) {\n        return null;\n    }\n    var coordinate;\n    if (m < flatCoordinates[offset + stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(offset, offset + stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    else if (flatCoordinates[end - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(end - stride, end);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    // FIXME use O(1) search\n    if (m == flatCoordinates[offset + stride - 1]) {\n        return flatCoordinates.slice(offset, offset + stride);\n    }\n    var lo = offset / stride;\n    var hi = end / stride;\n    while (lo < hi) {\n        var mid = (lo + hi) >> 1;\n        if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n            hi = mid;\n        }\n        else {\n            lo = mid + 1;\n        }\n    }\n    var m0 = flatCoordinates[lo * stride - 1];\n    if (m == m0) {\n        return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n    }\n    var m1 = flatCoordinates[(lo + 1) * stride - 1];\n    var t = (m - m0) / (m1 - m0);\n    coordinate = [];\n    for (var i = 0; i < stride - 1; ++i) {\n        coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i], flatCoordinates[lo * stride + i], t));\n    }\n    coordinate.push(m);\n    return coordinate;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n    if (interpolate) {\n        return lineStringCoordinateAtM(flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n    }\n    var coordinate;\n    if (m < flatCoordinates[stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(0, stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    if (flatCoordinates[flatCoordinates.length - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        if (offset == end) {\n            continue;\n        }\n        if (m < flatCoordinates[offset + stride - 1]) {\n            return null;\n        }\n        else if (m <= flatCoordinates[end - 1]) {\n            return lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, false);\n        }\n        offset = end;\n    }\n    return null;\n}\n//# sourceMappingURL=interpolate.js.map","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\nimport { toSize } from '../size.js';\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nvar DEFAULT_FILL_COLOR = '#333';\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nvar Text = /** @class */ (function () {\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function Text(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.font_ = options.font;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size|undefined}\n         */\n        this.scale_ = options.scale;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n        /**\n         * @private\n         * @type {string|Array<string>|undefined}\n         */\n        this.text_ = options.text;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textAlign_ = options.textAlign;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.justify_ = options.justify;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textBaseline_ = options.textBaseline;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ =\n            options.fill !== undefined\n                ? options.fill\n                : new Fill({ color: DEFAULT_FILL_COLOR });\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxAngle_ =\n            options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n        /**\n         * @private\n         * @type {import(\"./TextPlacement.js\").default|string}\n         */\n        this.placement_ =\n            options.placement !== undefined ? options.placement : TextPlacement.POINT;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.overflow_ = !!options.overflow;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.backgroundFill_ = options.backgroundFill\n            ? options.backgroundFill\n            : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.backgroundStroke_ = options.backgroundStroke\n            ? options.backgroundStroke\n            : null;\n        /**\n         * @private\n         * @type {Array<number>|null}\n         */\n        this.padding_ = options.padding === undefined ? null : options.padding;\n    }\n    /**\n     * Clones the style.\n     * @return {Text} The cloned style.\n     * @api\n     */\n    Text.prototype.clone = function () {\n        var scale = this.getScale();\n        return new Text({\n            font: this.getFont(),\n            placement: this.getPlacement(),\n            maxAngle: this.getMaxAngle(),\n            overflow: this.getOverflow(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            text: this.getText(),\n            textAlign: this.getTextAlign(),\n            justify: this.getJustify(),\n            textBaseline: this.getTextBaseline(),\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            offsetX: this.getOffsetX(),\n            offsetY: this.getOffsetY(),\n            backgroundFill: this.getBackgroundFill()\n                ? this.getBackgroundFill().clone()\n                : undefined,\n            backgroundStroke: this.getBackgroundStroke()\n                ? this.getBackgroundStroke().clone()\n                : undefined,\n            padding: this.getPadding() || undefined,\n        });\n    };\n    /**\n     * Get the `overflow` configuration.\n     * @return {boolean} Let text overflow the length of the path they follow.\n     * @api\n     */\n    Text.prototype.getOverflow = function () {\n        return this.overflow_;\n    };\n    /**\n     * Get the font name.\n     * @return {string|undefined} Font.\n     * @api\n     */\n    Text.prototype.getFont = function () {\n        return this.font_;\n    };\n    /**\n     * Get the maximum angle between adjacent characters.\n     * @return {number} Angle in radians.\n     * @api\n     */\n    Text.prototype.getMaxAngle = function () {\n        return this.maxAngle_;\n    };\n    /**\n     * Get the label placement.\n     * @return {import(\"./TextPlacement.js\").default|string} Text placement.\n     * @api\n     */\n    Text.prototype.getPlacement = function () {\n        return this.placement_;\n    };\n    /**\n     * Get the x-offset for the text.\n     * @return {number} Horizontal text offset.\n     * @api\n     */\n    Text.prototype.getOffsetX = function () {\n        return this.offsetX_;\n    };\n    /**\n     * Get the y-offset for the text.\n     * @return {number} Vertical text offset.\n     * @api\n     */\n    Text.prototype.getOffsetY = function () {\n        return this.offsetY_;\n    };\n    /**\n     * Get the fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Determine whether the text rotates with the map.\n     * @return {boolean|undefined} Rotate with map.\n     * @api\n     */\n    Text.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the text rotation.\n     * @return {number|undefined} Rotation.\n     * @api\n     */\n    Text.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the text scale.\n     * @return {number|import(\"../size.js\").Size|undefined} Scale.\n     * @api\n     */\n    Text.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the symbolizer scale array.\n     * @return {import(\"../size.js\").Size} Scale array.\n     */\n    Text.prototype.getScaleArray = function () {\n        return this.scaleArray_;\n    };\n    /**\n     * Get the stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Get the text to be rendered.\n     * @return {string|Array<string>|undefined} Text.\n     * @api\n     */\n    Text.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Get the text alignment.\n     * @return {string|undefined} Text align.\n     * @api\n     */\n    Text.prototype.getTextAlign = function () {\n        return this.textAlign_;\n    };\n    /**\n     * Get the justification.\n     * @return {string|undefined} Justification.\n     * @api\n     */\n    Text.prototype.getJustify = function () {\n        return this.justify_;\n    };\n    /**\n     * Get the text baseline.\n     * @return {string|undefined} Text baseline.\n     * @api\n     */\n    Text.prototype.getTextBaseline = function () {\n        return this.textBaseline_;\n    };\n    /**\n     * Get the background fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getBackgroundFill = function () {\n        return this.backgroundFill_;\n    };\n    /**\n     * Get the background stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getBackgroundStroke = function () {\n        return this.backgroundStroke_;\n    };\n    /**\n     * Get the padding for the text.\n     * @return {Array<number>|null} Padding.\n     * @api\n     */\n    Text.prototype.getPadding = function () {\n        return this.padding_;\n    };\n    /**\n     * Set the `overflow` property.\n     *\n     * @param {boolean} overflow Let text overflow the path that it follows.\n     * @api\n     */\n    Text.prototype.setOverflow = function (overflow) {\n        this.overflow_ = overflow;\n    };\n    /**\n     * Set the font.\n     *\n     * @param {string|undefined} font Font.\n     * @api\n     */\n    Text.prototype.setFont = function (font) {\n        this.font_ = font;\n    };\n    /**\n     * Set the maximum angle between adjacent characters.\n     *\n     * @param {number} maxAngle Angle in radians.\n     * @api\n     */\n    Text.prototype.setMaxAngle = function (maxAngle) {\n        this.maxAngle_ = maxAngle;\n    };\n    /**\n     * Set the x offset.\n     *\n     * @param {number} offsetX Horizontal text offset.\n     * @api\n     */\n    Text.prototype.setOffsetX = function (offsetX) {\n        this.offsetX_ = offsetX;\n    };\n    /**\n     * Set the y offset.\n     *\n     * @param {number} offsetY Vertical text offset.\n     * @api\n     */\n    Text.prototype.setOffsetY = function (offsetY) {\n        this.offsetY_ = offsetY;\n    };\n    /**\n     * Set the text placement.\n     *\n     * @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n     * @api\n     */\n    Text.prototype.setPlacement = function (placement) {\n        this.placement_ = placement;\n    };\n    /**\n     * Set whether to rotate the text with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    Text.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number|undefined} rotation Rotation.\n     * @api\n     */\n    Text.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n     * @api\n     */\n    Text.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n        this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n    };\n    /**\n     * Set the stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Set the text.\n     *\n     * @param {string|Array<string>|undefined} text Text.\n     * @api\n     */\n    Text.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Set the text alignment.\n     *\n     * @param {string|undefined} textAlign Text align.\n     * @api\n     */\n    Text.prototype.setTextAlign = function (textAlign) {\n        this.textAlign_ = textAlign;\n    };\n    /**\n     * Set the justification.\n     *\n     * @param {string|undefined} justify Justification.\n     * @api\n     */\n    Text.prototype.setJustify = function (justify) {\n        this.justify_ = justify;\n    };\n    /**\n     * Set the text baseline.\n     *\n     * @param {string|undefined} textBaseline Text baseline.\n     * @api\n     */\n    Text.prototype.setTextBaseline = function (textBaseline) {\n        this.textBaseline_ = textBaseline;\n    };\n    /**\n     * Set the background fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setBackgroundFill = function (fill) {\n        this.backgroundFill_ = fill;\n    };\n    /**\n     * Set the background stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setBackgroundStroke = function (stroke) {\n        this.backgroundStroke_ = stroke;\n    };\n    /**\n     * Set the padding (`[top, right, bottom, left]`).\n     *\n     * @param {Array<number>|null} padding Padding.\n     * @api\n     */\n    Text.prototype.setPadding = function (padding) {\n        this.padding_ = padding;\n    };\n    return Text;\n}());\nexport default Text;\n//# sourceMappingURL=Text.js.map","/**\n * @module ol/format/Feature\n */\nimport Units from '../proj/Units.js';\nimport { abstract } from '../util.js';\nimport { assign } from '../obj.js';\nimport { equivalent as equivalentProjection, get as getProjection, transformExtent, } from '../proj.js';\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nvar FeatureFormat = /** @class */ (function () {\n    function FeatureFormat() {\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default|undefined}\n         */\n        this.dataProjection = undefined;\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default|undefined}\n         */\n        this.defaultFeatureProjection = undefined;\n        /**\n         * A list media types supported by the format in descending order of preference.\n         * @type {Array<string>}\n         */\n        this.supportedMediaTypes = null;\n    }\n    /**\n     * Adds the data projection to the read options.\n     * @param {Document|Element|Object|string} source Source.\n     * @param {ReadOptions} [opt_options] Options.\n     * @return {ReadOptions|undefined} Options.\n     * @protected\n     */\n    FeatureFormat.prototype.getReadOptions = function (source, opt_options) {\n        var options;\n        if (opt_options) {\n            var dataProjection = opt_options.dataProjection\n                ? getProjection(opt_options.dataProjection)\n                : this.readProjection(source);\n            if (opt_options.extent &&\n                dataProjection &&\n                dataProjection.getUnits() === Units.TILE_PIXELS) {\n                dataProjection = getProjection(dataProjection);\n                dataProjection.setWorldExtent(opt_options.extent);\n            }\n            options = {\n                dataProjection: dataProjection,\n                featureProjection: opt_options.featureProjection,\n            };\n        }\n        return this.adaptOptions(options);\n    };\n    /**\n     * Sets the `dataProjection` on the options, if no `dataProjection`\n     * is set.\n     * @param {WriteOptions|ReadOptions|undefined} options\n     *     Options.\n     * @protected\n     * @return {WriteOptions|ReadOptions|undefined}\n     *     Updated options.\n     */\n    FeatureFormat.prototype.adaptOptions = function (options) {\n        return assign({\n            dataProjection: this.dataProjection,\n            featureProjection: this.defaultFeatureProjection,\n        }, options);\n    };\n    /**\n     * @abstract\n     * @return {Type} The format type.\n     */\n    FeatureFormat.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Read a single feature from a source.\n     *\n     * @abstract\n     * @param {Document|Element|Object|string} source Source.\n     * @param {ReadOptions} [opt_options] Read options.\n     * @return {import(\"../Feature.js\").FeatureLike} Feature.\n     */\n    FeatureFormat.prototype.readFeature = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read all features from a source.\n     *\n     * @abstract\n     * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n     * @param {ReadOptions} [opt_options] Read options.\n     * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n     */\n    FeatureFormat.prototype.readFeatures = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read a single geometry from a source.\n     *\n     * @abstract\n     * @param {Document|Element|Object|string} source Source.\n     * @param {ReadOptions} [opt_options] Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    FeatureFormat.prototype.readGeometry = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the projection from a source.\n     *\n     * @abstract\n     * @param {Document|Element|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n     */\n    FeatureFormat.prototype.readProjection = function (source) {\n        return abstract();\n    };\n    /**\n     * Encode a feature in this format.\n     *\n     * @abstract\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {WriteOptions} [opt_options] Write options.\n     * @return {string|ArrayBuffer} Result.\n     */\n    FeatureFormat.prototype.writeFeature = function (feature, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode an array of features in this format.\n     *\n     * @abstract\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {WriteOptions} [opt_options] Write options.\n     * @return {string|ArrayBuffer} Result.\n     */\n    FeatureFormat.prototype.writeFeatures = function (features, opt_options) {\n        return abstract();\n    };\n    /**\n     * Write a single geometry in this format.\n     *\n     * @abstract\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {WriteOptions} [opt_options] Write options.\n     * @return {string|ArrayBuffer} Result.\n     */\n    FeatureFormat.prototype.writeGeometry = function (geometry, opt_options) {\n        return abstract();\n    };\n    return FeatureFormat;\n}());\nexport default FeatureFormat;\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [opt_options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n    var featureProjection = opt_options\n        ? getProjection(opt_options.featureProjection)\n        : null;\n    var dataProjection = opt_options\n        ? getProjection(opt_options.dataProjection)\n        : null;\n    var transformed;\n    if (featureProjection &&\n        dataProjection &&\n        !equivalentProjection(featureProjection, dataProjection)) {\n        transformed = (write ? geometry.clone() : geometry).transform(write ? featureProjection : dataProjection, write ? dataProjection : featureProjection);\n    }\n    else {\n        transformed = geometry;\n    }\n    if (write &&\n        opt_options &&\n        /** @type {WriteOptions} */ (opt_options).decimals !== undefined) {\n        var power_1 = Math.pow(10, \n        /** @type {WriteOptions} */ (opt_options).decimals);\n        // if decimals option on write, round each coordinate appropriately\n        /**\n         * @param {Array<number>} coordinates Coordinates.\n         * @return {Array<number>} Transformed coordinates.\n         */\n        var transform = function (coordinates) {\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = Math.round(coordinates[i] * power_1) / power_1;\n            }\n            return coordinates;\n        };\n        if (transformed === geometry) {\n            transformed = geometry.clone();\n        }\n        transformed.applyTransform(transform);\n    }\n    return transformed;\n}\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [opt_options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n    var featureProjection = opt_options\n        ? getProjection(opt_options.featureProjection)\n        : null;\n    var dataProjection = opt_options\n        ? getProjection(opt_options.dataProjection)\n        : null;\n    if (featureProjection &&\n        dataProjection &&\n        !equivalentProjection(featureProjection, dataProjection)) {\n        return transformExtent(extent, dataProjection, featureProjection);\n    }\n    else {\n        return extent;\n    }\n}\n//# sourceMappingURL=Feature.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/TextFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport { abstract } from '../util.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for text feature formats.\n *\n * @abstract\n */\nvar TextFeature = /** @class */ (function (_super) {\n    __extends(TextFeature, _super);\n    function TextFeature() {\n        return _super.call(this) || this;\n    }\n    /**\n     * @return {import(\"./Feature.js\").Type} Format.\n     */\n    TextFeature.prototype.getType = function () {\n        return 'text';\n    };\n    /**\n     * Read the feature from the source.\n     *\n     * @param {Document|Element|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     * @api\n     */\n    TextFeature.prototype.readFeature = function (source, opt_options) {\n        return this.readFeatureFromText(getText(source), this.adaptOptions(opt_options));\n    };\n    /**\n     * @abstract\n     * @param {string} text Text.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n     * @protected\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    TextFeature.prototype.readFeatureFromText = function (text, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the features from the source.\n     *\n     * @param {Document|Element|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    TextFeature.prototype.readFeatures = function (source, opt_options) {\n        return this.readFeaturesFromText(getText(source), this.adaptOptions(opt_options));\n    };\n    /**\n     * @abstract\n     * @param {string} text Text.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n     * @protected\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    TextFeature.prototype.readFeaturesFromText = function (text, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the geometry from the source.\n     *\n     * @param {Document|Element|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     * @api\n     */\n    TextFeature.prototype.readGeometry = function (source, opt_options) {\n        return this.readGeometryFromText(getText(source), this.adaptOptions(opt_options));\n    };\n    /**\n     * @abstract\n     * @param {string} text Text.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    TextFeature.prototype.readGeometryFromText = function (text, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the projection from the source.\n     *\n     * @param {Document|Element|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n     * @api\n     */\n    TextFeature.prototype.readProjection = function (source) {\n        return this.readProjectionFromText(getText(source));\n    };\n    /**\n     * @param {string} text Text.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n     */\n    TextFeature.prototype.readProjectionFromText = function (text) {\n        return this.dataProjection;\n    };\n    /**\n     * Encode a feature as a string.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n     * @return {string} Encoded feature.\n     * @api\n     */\n    TextFeature.prototype.writeFeature = function (feature, opt_options) {\n        return this.writeFeatureText(feature, this.adaptOptions(opt_options));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../Feature.js\").default} feature Features.\n     * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n     * @protected\n     * @return {string} Text.\n     */\n    TextFeature.prototype.writeFeatureText = function (feature, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode an array of features as string.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n     * @return {string} Encoded features.\n     * @api\n     */\n    TextFeature.prototype.writeFeatures = function (features, opt_options) {\n        return this.writeFeaturesText(features, this.adaptOptions(opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n     * @protected\n     * @return {string} Text.\n     */\n    TextFeature.prototype.writeFeaturesText = function (features, opt_options) {\n        return abstract();\n    };\n    /**\n     * Write a single geometry.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n     * @return {string} Geometry.\n     * @api\n     */\n    TextFeature.prototype.writeGeometry = function (geometry, opt_options) {\n        return this.writeGeometryText(geometry, this.adaptOptions(opt_options));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n     * @protected\n     * @return {string} Text.\n     */\n    TextFeature.prototype.writeGeometryText = function (geometry, opt_options) {\n        return abstract();\n    };\n    return TextFeature;\n}(FeatureFormat));\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {string} Text.\n */\nfunction getText(source) {\n    if (typeof source === 'string') {\n        return source;\n    }\n    else {\n        return '';\n    }\n}\nexport default TextFeature;\n//# sourceMappingURL=TextFeature.js.map","/**\n * @module ol/geom/flat/flip\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_dest] Destination.\n * @param {number} [opt_destOffset] Destination offset.\n * @return {Array<number>} Flat coordinates.\n */\nexport function flipXY(flatCoordinates, offset, end, stride, opt_dest, opt_destOffset) {\n    var dest, destOffset;\n    if (opt_dest !== undefined) {\n        dest = opt_dest;\n        destOffset = opt_destOffset !== undefined ? opt_destOffset : 0;\n    }\n    else {\n        dest = [];\n        destOffset = 0;\n    }\n    var j = offset;\n    while (j < end) {\n        var x = flatCoordinates[j++];\n        dest[destOffset++] = flatCoordinates[j++];\n        dest[destOffset++] = x;\n        for (var k = 2; k < stride; ++k) {\n            dest[destOffset++] = flatCoordinates[j++];\n        }\n    }\n    dest.length = destOffset;\n    return dest;\n}\n//# sourceMappingURL=flip.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/Polyline\n */\nimport Feature from '../Feature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport TextFeature from './TextFeature.js';\nimport { assert } from '../asserts.js';\nimport { flipXY } from '../geom/flat/flip.js';\nimport { get as getProjection } from '../proj.js';\nimport { getStrideForLayout } from '../geom/SimpleGeometry.js';\nimport { inflateCoordinates } from '../geom/flat/inflate.js';\nimport { transformGeometryWithOptions } from './Feature.js';\n/**\n * @typedef {Object} Options\n * @property {number} [factor=1e5] The factor by which the coordinates values will be scaled.\n * @property {GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the format reader.\n */\n/**\n * @classdesc\n * Feature format for reading and writing data in the Encoded\n * Polyline Algorithm Format.\n *\n * When reading features, the coordinates are assumed to be in two dimensions\n * and in [latitude, longitude] order.\n *\n * As Polyline sources contain a single feature,\n * {@link module:ol/format/Polyline~Polyline#readFeatures} will return the\n * feature in an array.\n *\n * @api\n */\nvar Polyline = /** @class */ (function (_super) {\n    __extends(Polyline, _super);\n    /**\n     * @param {Options} [opt_options] Optional configuration object.\n     */\n    function Polyline(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.dataProjection = getProjection('EPSG:4326');\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.factor_ = options.factor ? options.factor : 1e5;\n        /**\n         * @private\n         * @type {import(\"../geom/GeometryLayout\").default}\n         */\n        _this.geometryLayout_ = options.geometryLayout\n            ? options.geometryLayout\n            : GeometryLayout.XY;\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {string} text Text.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    Polyline.prototype.readFeatureFromText = function (text, opt_options) {\n        var geometry = this.readGeometryFromText(text, opt_options);\n        return new Feature(geometry);\n    };\n    /**\n     * @param {string} text Text.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n     * @protected\n     * @return {Array<Feature>} Features.\n     */\n    Polyline.prototype.readFeaturesFromText = function (text, opt_options) {\n        var feature = this.readFeatureFromText(text, opt_options);\n        return [feature];\n    };\n    /**\n     * @param {string} text Text.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    Polyline.prototype.readGeometryFromText = function (text, opt_options) {\n        var stride = getStrideForLayout(this.geometryLayout_);\n        var flatCoordinates = decodeDeltas(text, stride, this.factor_);\n        flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n        var coordinates = inflateCoordinates(flatCoordinates, 0, flatCoordinates.length, stride);\n        var lineString = new LineString(coordinates, this.geometryLayout_);\n        return transformGeometryWithOptions(lineString, false, this.adaptOptions(opt_options));\n    };\n    /**\n     * @param {import(\"../Feature.js\").default<LineString>} feature Features.\n     * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n     * @protected\n     * @return {string} Text.\n     */\n    Polyline.prototype.writeFeatureText = function (feature, opt_options) {\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            return this.writeGeometryText(geometry, opt_options);\n        }\n        else {\n            assert(false, 40); // Expected `feature` to have a geometry\n            return '';\n        }\n    };\n    /**\n     * @param {Array<import(\"../Feature.js\").default<LineString>>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n     * @protected\n     * @return {string} Text.\n     */\n    Polyline.prototype.writeFeaturesText = function (features, opt_options) {\n        return this.writeFeatureText(features[0], opt_options);\n    };\n    /**\n     * @param {LineString} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n     * @protected\n     * @return {string} Text.\n     */\n    Polyline.prototype.writeGeometryText = function (geometry, opt_options) {\n        geometry =\n            /** @type {LineString} */\n            (transformGeometryWithOptions(geometry, true, this.adaptOptions(opt_options)));\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n        return encodeDeltas(flatCoordinates, stride, this.factor_);\n    };\n    return Polyline;\n}(TextFeature));\n/**\n * Encode a list of n-dimensional points and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of n-dimensional points.\n * @param {number} stride The number of dimension of the points in the list.\n * @param {number} [opt_factor] The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeDeltas(numbers, stride, opt_factor) {\n    var factor = opt_factor ? opt_factor : 1e5;\n    var d;\n    var lastNumbers = new Array(stride);\n    for (d = 0; d < stride; ++d) {\n        lastNumbers[d] = 0;\n    }\n    for (var i = 0, ii = numbers.length; i < ii;) {\n        for (d = 0; d < stride; ++d, ++i) {\n            var num = numbers[i];\n            var delta = num - lastNumbers[d];\n            lastNumbers[d] = num;\n            numbers[i] = delta;\n        }\n    }\n    return encodeFloats(numbers, factor);\n}\n/**\n * Decode a list of n-dimensional points from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} stride The number of dimension of the points in the\n *     encoded string.\n * @param {number} [opt_factor] The factor by which the resulting numbers will\n *     be divided. Default is `1e5`.\n * @return {Array<number>} A list of n-dimensional points.\n * @api\n */\nexport function decodeDeltas(encoded, stride, opt_factor) {\n    var factor = opt_factor ? opt_factor : 1e5;\n    var d;\n    /** @type {Array<number>} */\n    var lastNumbers = new Array(stride);\n    for (d = 0; d < stride; ++d) {\n        lastNumbers[d] = 0;\n    }\n    var numbers = decodeFloats(encoded, factor);\n    for (var i = 0, ii = numbers.length; i < ii;) {\n        for (d = 0; d < stride; ++d, ++i) {\n            lastNumbers[d] += numbers[i];\n            numbers[i] = lastNumbers[d];\n        }\n    }\n    return numbers;\n}\n/**\n * Encode a list of floating point numbers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of floating point numbers.\n * @param {number} [opt_factor] The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeFloats(numbers, opt_factor) {\n    var factor = opt_factor ? opt_factor : 1e5;\n    for (var i = 0, ii = numbers.length; i < ii; ++i) {\n        numbers[i] = Math.round(numbers[i] * factor);\n    }\n    return encodeSignedIntegers(numbers);\n}\n/**\n * Decode a list of floating point numbers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} [opt_factor] The factor by which the result will be divided.\n *     Default is `1e5`.\n * @return {Array<number>} A list of floating point numbers.\n * @api\n */\nexport function decodeFloats(encoded, opt_factor) {\n    var factor = opt_factor ? opt_factor : 1e5;\n    var numbers = decodeSignedIntegers(encoded);\n    for (var i = 0, ii = numbers.length; i < ii; ++i) {\n        numbers[i] /= factor;\n    }\n    return numbers;\n}\n/**\n * Encode a list of signed integers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of signed integers.\n * @return {string} The encoded string.\n */\nexport function encodeSignedIntegers(numbers) {\n    for (var i = 0, ii = numbers.length; i < ii; ++i) {\n        var num = numbers[i];\n        numbers[i] = num < 0 ? ~(num << 1) : num << 1;\n    }\n    return encodeUnsignedIntegers(numbers);\n}\n/**\n * Decode a list of signed integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of signed integers.\n */\nexport function decodeSignedIntegers(encoded) {\n    var numbers = decodeUnsignedIntegers(encoded);\n    for (var i = 0, ii = numbers.length; i < ii; ++i) {\n        var num = numbers[i];\n        numbers[i] = num & 1 ? ~(num >> 1) : num >> 1;\n    }\n    return numbers;\n}\n/**\n * Encode a list of unsigned integers and return an encoded string\n *\n * @param {Array<number>} numbers A list of unsigned integers.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedIntegers(numbers) {\n    var encoded = '';\n    for (var i = 0, ii = numbers.length; i < ii; ++i) {\n        encoded += encodeUnsignedInteger(numbers[i]);\n    }\n    return encoded;\n}\n/**\n * Decode a list of unsigned integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of unsigned integers.\n */\nexport function decodeUnsignedIntegers(encoded) {\n    var numbers = [];\n    var current = 0;\n    var shift = 0;\n    for (var i = 0, ii = encoded.length; i < ii; ++i) {\n        var b = encoded.charCodeAt(i) - 63;\n        current |= (b & 0x1f) << shift;\n        if (b < 0x20) {\n            numbers.push(current);\n            current = 0;\n            shift = 0;\n        }\n        else {\n            shift += 5;\n        }\n    }\n    return numbers;\n}\n/**\n * Encode one single unsigned integer and return an encoded string\n *\n * @param {number} num Unsigned integer that should be encoded.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedInteger(num) {\n    var value, encoded = '';\n    while (num >= 0x20) {\n        value = (0x20 | (num & 0x1f)) + 63;\n        encoded += String.fromCharCode(value);\n        num >>= 5;\n    }\n    value = num + 63;\n    encoded += String.fromCharCode(value);\n    return encoded;\n}\nexport default Polyline;\n//# sourceMappingURL=Polyline.js.map","<template>\n  <div id=\"map\">\n    <div class=\"setting\">\n      滑动控制速度:\n      <el-slider v-model=\"state.speed\" class=\"slider\" :min=\"10\" :max=\"999\" />\n      <el-button\n        type=\"primary\"\n        :icon=\"!state.isPlay ? VideoPlay : VideoPause\"\n        @click=\"handleStatus\"\n        >{{ !state.isPlay ? \"开启\" : \"关闭\" }}</el-button\n      >\n    </div>\n  </div>\n</template>\n\n<script setup>\n  import \"ol/ol.css\";\n  import { onMounted, reactive } from \"vue\";\n  import { Map, View, Feature } from \"ol\";\n  import { Tile as TileLayer, Vector as VectorLayer } from \"ol/layer\";\n  import { defaults, FullScreen } from \"ol/control\";\n  import { XYZ, Vector as VectorSource } from \"ol/source\";\n  import { Polyline } from \"ol/format\";\n  import { Point } from \"ol/geom\";\n  import { getVectorContext } from \"ol/render\";\n  import { Style, Stroke, Icon, Text, Fill } from \"ol/style\";\n  import { VideoPlay, VideoPause } from \"@element-plus/icons-vue\";\n  import { ATTRIBUTIONS, MAPURL } from \"@/constants\";\n  import updateMapSize from \"@/hooks/updateMapSize\";\n  const state = reactive({\n    speed: 100,\n    isPlay: false,\n  });\n  let map, lastTime, route, position, vectorLayer, text;\n  let distance = 0;\n  let oldP = [];\n  let rotation = 0;\n  const initMap = () => {\n    map = new Map({\n      //初始化map\n      target: \"map\",\n      //地图容器中加载的图层\n      layers: [\n        //加载瓦片图层数据\n        new TileLayer({\n          name: \"OSM\",\n          source: new XYZ({\n            attributions: ATTRIBUTIONS,\n            url: MAPURL,\n            maxZoom: 20,\n          }),\n        }),\n      ],\n      view: new View({\n        projection: \"EPSG:3857\", // 坐标系，有EPSG:4326和EPSG:3 857\n        center: [-5639523.95, -3501274.52],\n        //地图初始显示级别\n        zoom: 10,\n        minZoom: 2,\n        maxZoom: 19,\n      }),\n      //加载控件到地图容器中\n      controls: defaults().extend([\n        new FullScreen(), //加载全屏显示控件（目前支持非IE内核浏览器）\n      ]),\n    });\n    // 侧边栏变化更新地图\n    updateMapSize(map);\n  };\n  const handleStatus = () => {\n    if (state.isPlay) {\n      stopAnimation();\n    } else {\n      startAnimation();\n    }\n  };\n  function moveFeature(event) {\n    const speed = Number(state.speed);\n    const time = event.frameState.time;\n    const elapsedTime = time - lastTime;\n    distance = (distance + (speed * elapsedTime) / 1e6) % 2;\n    lastTime = time;\n    const currentCoordinate = route.getCoordinateAt(\n      distance > 1 ? 2 - distance : distance\n    );\n\n    position.setCoordinates(currentCoordinate);\n    const vectorContext = new getVectorContext(event);\n\n    /**\n     * 使用反正切函数实现计算夹角弧度来实现图标的转向。\n     * 在开始计算前图标的默认指向角度也要提前了解\n     * 如这个 “<-” 默认为180度，正余弦为sin=0 cos=-1夹角弧度为Math.atan2(0, -1)。知道图标的默认弧度后就可实时的计算转向的弧度了\n     * 公式为Math.atan2(y2 - y1, x2 - x1) - Math.atan2(0, -1)\n     **/\n\n    if (oldP.length) {\n      rotation =\n        Math.atan2(0, 1) -\n        Math.atan2(\n          currentCoordinate[1] - oldP[1],\n          currentCoordinate[0] - oldP[0]\n        );\n    }\n\n    vectorContext.setStyle(\n      new Style({\n        text: new Text({\n          text: \"->\",\n          // rotateWithView: true,\n          rotation: rotation,\n          font: \"normal 20px 微软雅黑\",\n          fill: new Fill({\n            color: \"red\",\n          }),\n        }),\n      })\n    );\n    vectorContext.drawGeometry(position);\n\n    oldP = currentCoordinate;\n\n    map.render();\n  }\n  function startAnimation() {\n    state.isPlay = true;\n    lastTime = Date.now();\n    vectorLayer.on(\"postrender\", moveFeature);\n    text.setGeometry(null);\n  }\n\n  function stopAnimation() {\n    state.isPlay = false;\n    text.setGeometry(position);\n    vectorLayer.un(\"postrender\", moveFeature);\n    text.setStyle(\n      new Style({\n        text: new Text({\n          text: \"->\",\n          // rotateWithView: true,\n          rotation: rotation,\n          font: \"normal 20px 微软雅黑\",\n          fill: new Fill({\n            color: \"red\",\n          }),\n        }),\n      })\n    );\n    map.render();\n  }\n  onMounted(() => {\n    initMap();\n\n    fetch(\n      \"https://openlayers.org/en/latest/examples/data/polyline/route.json\"\n    ).then((response) => {\n      response.json().then((result) => {\n        const polyline = result.routes[0].geometry;\n\n        route = new Polyline({\n          factor: 1e6,\n        }).readGeometry(polyline, {\n          dataProjection: \"EPSG:4326\",\n          featureProjection: \"EPSG:3857\",\n        });\n\n        const routeFeature = new Feature({\n          type: \"route\",\n          geometry: route,\n        });\n        const startMarker = new Feature({\n          type: \"icon\",\n          geometry: new Point(route.getFirstCoordinate()),\n        });\n        const endMarker = new Feature({\n          type: \"icon\",\n          geometry: new Point(route.getLastCoordinate()),\n        });\n        position = startMarker.getGeometry().clone();\n\n        const geoMarker = new Feature({\n          type: \"geoMarker\",\n          geometry: position,\n        });\n        // console.log(route.getFirstCoordinate())\n        text = new Feature({\n          // geometry: new ol.geom.Point([-5655881.474053027, -3511517.0817902135]),\n          geometry: position,\n          type: \"text\",\n        });\n        let test = position.getFirstCoordinate();\n\n        // 初始样式设置\n        const styles = {\n          route: new Style({\n            stroke: new Stroke({\n              width: 6,\n              color: [237, 212, 0, 0.8],\n            }),\n          }),\n          icon: new Style({\n            image: new Icon({\n              anchor: [0.5, 1],\n              src: \"https://openlayers.org/en/latest/examples/data/icon.png\",\n            }),\n          }),\n          text: new Style({\n            text: new Text({\n              text: \"->\",\n              // rotateWithView: true,\n              rotation: Math.atan2(test[0] - test[1], test[1] - test[0]),\n              font: \"normal 20px 微软雅黑\",\n              fill: new Fill({\n                color: \"red\",\n              }),\n            }),\n          }),\n        };\n\n        vectorLayer = new VectorLayer({\n          source: new VectorSource({\n            features: [routeFeature, geoMarker, startMarker, endMarker, text],\n          }),\n          style: function (feature) {\n            return styles[feature.get(\"type\")];\n          },\n        });\n\n        map.addLayer(vectorLayer);\n      });\n    });\n  });\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n  #map {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n  }\n  .setting {\n    position: absolute;\n    top: 20px;\n    left: 50%;\n    transform: translateX(-50%);\n    z-index: 1;\n    display: flex;\n    align-items: center;\n    color: #ccc;\n    font-weight: bold;\n  }\n  .slider {\n    width: 180px;\n    margin: 20px;\n  }\n</style>\n","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=3d1b4512&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/openlayers/openlayers/node_modules/.pnpm/vue-loader@16.8.3_@vue+compiler-sfc@3.4.6_vue@3.4.6_webpack@4.47.0/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3d1b4512\"]])\n\nexport default __exports__","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/FullScreen\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport MapProperty from '../MapProperty.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED } from '../css.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { replaceNode } from '../dom.js';\nvar events = [\n    'fullscreenchange',\n    'webkitfullscreenchange',\n    'MSFullscreenChange',\n];\n/**\n * @enum {string}\n */\nvar FullScreenEventType = {\n    /**\n     * Triggered after the map entered fullscreen.\n     * @event FullScreenEventType#enterfullscreen\n     * @api\n     */\n    ENTERFULLSCREEN: 'enterfullscreen',\n    /**\n     * Triggered after the map leave fullscreen.\n     * @event FullScreenEventType#leavefullscreen\n     * @api\n     */\n    LEAVEFULLSCREEN: 'leavefullscreen',\n};\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen', import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen'|import(\"../ObjectEventType\").Types, Return>} FullScreenOnSignature\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text|HTMLElement} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text|HTMLElement} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [activeClassName=className + '-true'] CSS class name for the button\n * when full-screen is active.\n * @property {string} [inactiveClassName=className + '-false'] CSS class name for the button\n * when full-screen is inactive.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](https://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @fires FullScreenEventType#enterfullscreen\n * @fires FullScreenEventType#leavefullscreen\n * @api\n */\nvar FullScreen = /** @class */ (function (_super) {\n    __extends(FullScreen, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function FullScreen(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target,\n        }) || this;\n        /***\n         * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {FullScreenOnSignature<void>}\n         */\n        _this.un;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.keys_ = options.keys !== undefined ? options.keys : false;\n        /**\n         * @private\n         * @type {HTMLElement|string|undefined}\n         */\n        _this.source_ = options.source;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.isInFullscreen_ = false;\n        /**\n         * @private\n         */\n        _this.boundHandleMapTargetChange_ = _this.handleMapTargetChange_.bind(_this);\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.cssClassName_ =\n            options.className !== undefined ? options.className : 'ol-full-screen';\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.documentListeners_ = [];\n        /**\n         * @private\n         * @type {Array<string>}\n         */\n        _this.activeClassName_ =\n            options.activeClassName !== undefined\n                ? options.activeClassName.split(' ')\n                : [_this.cssClassName_ + '-true'];\n        /**\n         * @private\n         * @type {Array<string>}\n         */\n        _this.inactiveClassName_ =\n            options.inactiveClassName !== undefined\n                ? options.inactiveClassName.split(' ')\n                : [_this.cssClassName_ + '-false'];\n        var label = options.label !== undefined ? options.label : '\\u2922';\n        /**\n         * @private\n         * @type {Text|HTMLElement}\n         */\n        _this.labelNode_ =\n            typeof label === 'string' ? document.createTextNode(label) : label;\n        var labelActive = options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n        /**\n         * @private\n         * @type {Text|HTMLElement}\n         */\n        _this.labelActiveNode_ =\n            typeof labelActive === 'string'\n                ? document.createTextNode(labelActive)\n                : labelActive;\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.button_ = document.createElement('button');\n        _this.button_.title = tipLabel;\n        _this.button_.setAttribute('type', 'button');\n        _this.button_.appendChild(_this.labelNode_);\n        _this.button_.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        _this.setClassName_(_this.button_, _this.isInFullscreen_);\n        _this.element.className = \"\".concat(_this.cssClassName_, \" \").concat(CLASS_UNSELECTABLE, \" \").concat(CLASS_CONTROL);\n        _this.element.appendChild(_this.button_);\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    FullScreen.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleFullScreen_();\n    };\n    /**\n     * @private\n     */\n    FullScreen.prototype.handleFullScreen_ = function () {\n        var map = this.getMap();\n        if (!map) {\n            return;\n        }\n        var doc = map.getOwnerDocument();\n        if (!isFullScreenSupported(doc)) {\n            return;\n        }\n        if (isFullScreen(doc)) {\n            exitFullScreen(doc);\n        }\n        else {\n            var element = void 0;\n            if (this.source_) {\n                element =\n                    typeof this.source_ === 'string'\n                        ? doc.getElementById(this.source_)\n                        : this.source_;\n            }\n            else {\n                element = map.getTargetElement();\n            }\n            if (this.keys_) {\n                requestFullScreenWithKeys(element);\n            }\n            else {\n                requestFullScreen(element);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    FullScreen.prototype.handleFullScreenChange_ = function () {\n        var map = this.getMap();\n        if (!map) {\n            return;\n        }\n        var wasInFullscreen = this.isInFullscreen_;\n        this.isInFullscreen_ = isFullScreen(map.getOwnerDocument());\n        if (wasInFullscreen !== this.isInFullscreen_) {\n            this.setClassName_(this.button_, this.isInFullscreen_);\n            if (this.isInFullscreen_) {\n                replaceNode(this.labelActiveNode_, this.labelNode_);\n                this.dispatchEvent(FullScreenEventType.ENTERFULLSCREEN);\n            }\n            else {\n                replaceNode(this.labelNode_, this.labelActiveNode_);\n                this.dispatchEvent(FullScreenEventType.LEAVEFULLSCREEN);\n            }\n            map.updateSize();\n        }\n    };\n    /**\n     * @param {HTMLElement} element Target element\n     * @param {boolean} fullscreen True if fullscreen class name should be active\n     * @private\n     */\n    FullScreen.prototype.setClassName_ = function (element, fullscreen) {\n        var _a, _b, _c, _d;\n        if (fullscreen) {\n            (_a = element.classList).remove.apply(_a, this.inactiveClassName_);\n            (_b = element.classList).add.apply(_b, this.activeClassName_);\n        }\n        else {\n            (_c = element.classList).remove.apply(_c, this.activeClassName_);\n            (_d = element.classList).add.apply(_d, this.inactiveClassName_);\n        }\n    };\n    /**\n     * Remove the control from its current map and attach it to the new map.\n     * Pass `null` to just remove the control from the current map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default|null} map Map.\n     * @api\n     */\n    FullScreen.prototype.setMap = function (map) {\n        var oldMap = this.getMap();\n        if (oldMap) {\n            oldMap.removeChangeListener(MapProperty.TARGET, this.boundHandleMapTargetChange_);\n        }\n        _super.prototype.setMap.call(this, map);\n        this.handleMapTargetChange_();\n        if (map) {\n            map.addChangeListener(MapProperty.TARGET, this.boundHandleMapTargetChange_);\n        }\n    };\n    /**\n     * @private\n     */\n    FullScreen.prototype.handleMapTargetChange_ = function () {\n        var listeners = this.documentListeners_;\n        for (var i = 0, ii = listeners.length; i < ii; ++i) {\n            unlistenByKey(listeners[i]);\n        }\n        listeners.length = 0;\n        var map = this.getMap();\n        if (map) {\n            var doc = map.getOwnerDocument();\n            if (isFullScreenSupported(doc)) {\n                this.element.classList.remove(CLASS_UNSUPPORTED);\n            }\n            else {\n                this.element.classList.add(CLASS_UNSUPPORTED);\n            }\n            for (var i = 0, ii = events.length; i < ii; ++i) {\n                listeners.push(listen(doc, events[i], this.handleFullScreenChange_, this));\n            }\n            this.handleFullScreenChange_();\n        }\n    };\n    return FullScreen;\n}(Control));\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported(doc) {\n    var body = doc.body;\n    return !!(body['webkitRequestFullscreen'] ||\n        (body['msRequestFullscreen'] && doc['msFullscreenEnabled']) ||\n        (body.requestFullscreen && doc.fullscreenEnabled));\n}\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen(doc) {\n    return !!(doc['webkitIsFullScreen'] ||\n        doc['msFullscreenElement'] ||\n        doc.fullscreenElement);\n}\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n    if (element.requestFullscreen) {\n        element.requestFullscreen();\n    }\n    else if (element['msRequestFullscreen']) {\n        element['msRequestFullscreen']();\n    }\n    else if (element['webkitRequestFullscreen']) {\n        element['webkitRequestFullscreen']();\n    }\n}\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n    if (element['webkitRequestFullscreen']) {\n        element['webkitRequestFullscreen']();\n    }\n    else {\n        requestFullScreen(element);\n    }\n}\n/**\n * Exit fullscreen.\n * @param {Document} doc The document to exit fullscren from\n */\nfunction exitFullScreen(doc) {\n    if (doc.exitFullscreen) {\n        doc.exitFullscreen();\n    }\n    else if (doc['msExitFullscreen']) {\n        doc['msExitFullscreen']();\n    }\n    else if (doc['webkitExitFullscreen']) {\n        doc['webkitExitFullscreen']();\n    }\n}\nexport default FullScreen;\n//# sourceMappingURL=FullScreen.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\nimport { extend } from '../array.js';\nimport { forEach as forEachSegment } from './flat/segments.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { interpolatePoint, lineStringCoordinateAtM } from './flat/interpolate.js';\nimport { intersectsLineString } from './flat/intersectsextent.js';\nimport { lineStringLength } from './flat/length.js';\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nvar LineString = /** @class */ (function (_super) {\n    __extends(LineString, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     */\n    function LineString(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatMidpoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatMidpointRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed coordinate to the coordinates of the linestring.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @api\n     */\n    LineString.prototype.appendCoordinate = function (coordinate) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = coordinate.slice();\n        }\n        else {\n            extend(this.flatCoordinates, coordinate);\n        }\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LineString} Clone.\n     * @api\n     */\n    LineString.prototype.clone = function () {\n        var lineString = new LineString(this.flatCoordinates.slice(), this.layout);\n        lineString.applyProperties(this);\n        return lineString;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    LineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Iterate over each segment, calling the provided callback.\n     * If the callback returns a truthy value the function returns that\n     * value immediately. Otherwise the function returns `false`.\n     *\n     * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n     *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n     * @return {T|boolean} Value.\n     * @template T,S\n     * @api\n     */\n    LineString.prototype.forEachSegment = function (callback) {\n        return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n    };\n    /**\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\n     * such coordinate exists.\n     *\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n     * M will return the first coordinate and Ms greater than the last M will\n     * return the last coordinate.\n     *\n     * @param {number} m M.\n     * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n     * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n     * @api\n     */\n    LineString.prototype.getCoordinateAtM = function (m, opt_extrapolate) {\n        if (this.layout != GeometryLayout.XYM &&\n            this.layout != GeometryLayout.XYZM) {\n            return null;\n        }\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n        return lineStringCoordinateAtM(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, m, extrapolate);\n    };\n    /**\n     * Return the coordinates of the linestring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @api\n     */\n    LineString.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinate at the provided fraction along the linestring.\n     * The `fraction` is a number between 0 and 1, where 0 is the start of the\n     * linestring and 1 is the end.\n     * @param {number} fraction Fraction.\n     * @param {import(\"../coordinate.js\").Coordinate} [opt_dest] Optional coordinate whose values will\n     *     be modified. If not provided, a new coordinate will be returned.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n     * @api\n     */\n    LineString.prototype.getCoordinateAt = function (fraction, opt_dest) {\n        return interpolatePoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, fraction, opt_dest, this.stride);\n    };\n    /**\n     * Return the length of the linestring on projected plane.\n     * @return {number} Length (on projected plane).\n     * @api\n     */\n    LineString.prototype.getLength = function () {\n        return lineStringLength(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat midpoint.\n     */\n    LineString.prototype.getFlatMidpoint = function () {\n        if (this.flatMidpointRevision_ != this.getRevision()) {\n            this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n            this.flatMidpointRevision_ = this.getRevision();\n        }\n        return this.flatMidpoint_;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {LineString} Simplified LineString.\n     * @protected\n     */\n    LineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./Geometry.js\").Type} Geometry type.\n     * @api\n     */\n    LineString.prototype.getType = function () {\n        return 'LineString';\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    LineString.prototype.intersectsExtent = function (extent) {\n        return intersectsLineString(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the linestring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     * @api\n     */\n    LineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LineString;\n}(SimpleGeometry));\nexport default LineString;\n//# sourceMappingURL=LineString.js.map"],"sourceRoot":""}