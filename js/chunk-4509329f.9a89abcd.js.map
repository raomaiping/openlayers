{"version":3,"sources":["webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/render/canvas/Immediate.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/renderer/vector.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/render/canvas/Builder.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/render/canvas/Instruction.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/render/canvas/ImageBuilder.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/render/canvas/LineStringBuilder.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/render/canvas/PolygonBuilder.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/geom/flat/straightchunk.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/render/canvas/TextBuilder.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/render/canvas/BuilderGroup.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/geom/flat/textpath.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/render/canvas/Executor.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/render/canvas/ExecutorGroup.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/render/canvas/hitdetect.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/renderer/canvas/VectorLayer.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/layer/Vector.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/render/VectorContext.js"],"names":["extendStatics","__extends","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","this","constructor","create","CanvasImmediateRenderer","_super","context","pixelRatio","extent","transform","viewRotation","opt_squaredTolerance","opt_userTransform","_this","context_","pixelRatio_","extent_","transform_","viewRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","image_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","flatCoordinates","offset","end","stride","pixelCoordinates","localTransform","alpha","globalAlpha","rotation","i","ii","length","x","y","centerX","centerY","setTransform","apply","translate","scale","drawImage","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","lineTo","closePath","drawRings_","ends","drawCircle","geometry","getExtent","dx","dy","radius","Math","sqrt","beginPath","arc","PI","fill","stroke","getCenter","setStyle","style","setFillStrokeStyle","getFill","getStroke","setImageStyle","getImage","setTextStyle","getText","drawGeometry","getType","drawPoint","drawLineString","drawPolygon","drawMultiPoint","drawMultiLineString","drawMultiPolygon","drawGeometryCollection","drawFeature","feature","getGeometryFunction","geometries","getGeometriesArray","simplifyTransformed","getFlatCoordinates","getStride","flatMidpoint","getFlatMidpoint","geometryExtent","getEnds","flatMidpoints","getFlatMidpoints","getOrientedFlatCoordinates","flatInteriorPoint","getFlatInteriorPoint","endss","getEndss","flatInteriorPoints","getFlatInteriorPoints","fillState","contextFillState","fillStyle","strokeState","contextStrokeState","lineCap","setLineDash","lineDash","lineDashOffset","lineJoin","lineWidth","miterLimit","strokeStyle","textState","contextTextState","textAlign","font","textBaseline","fillStyleColor","getColor","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","strokeStyleLineDashOffset","getLineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","getWidth","strokeStyleMiterLimit","getMiterLimit","undefined","map","n","imageStyle","imageSize","getSize","imageAnchor","getAnchor","imageOrigin","getOrigin","getOpacity","getRotateWithView","getRotation","getScaleArray","textStyle","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","getFont","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","getTextAlign","textTextBaseline","getTextBaseline","isArray","reduce","acc","t","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","builderGroup","opt_declutterBuilderGroup","declutterImageWithText","getImageState","LOADED","imageBuilderGroup","declutterMode","getDeclutterMode","imageReplay_1","getBuilder","getZIndex","imageReplay","textBuilderGroup","textReplay","drawText","lineStringReplay","polygonReplay","imageReplay_2","replayGroup","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","parseInt","getSquaredTolerance","resolution","tolerance","getTolerance","renderFeature","squaredTolerance","listener","opt_transform","loading","imageState","ERROR","unlistenImageChange","IDLE","load","listenImageChange","simplifiedGeometry","renderer","getRenderer","renderGeometry","renderFeatureInternal","drawCustom","getHitDetectionRenderer","getGeometries","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","beginPathInstruction","closePathInstruction","CanvasBuilder","maxExtent","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","coordinates","tmpCoordinate_","hitDetectionInstructions","state","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","tmpCoord","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","Relationship","INTERSECTING","drawCustomCoordinates_","builderEnds","builderEnd","push","hitDetectionRenderer","beginGeometry","builderEndss","type","builderBegin","myEnds","inflate","endGeometry","finish","reverseHitDetectionInstructions","reverse","instruction","begin","slice","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","width","VectorContext","CanvasImageBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","opacity_","originX_","originY_","rotateWithView_","rotation_","scale_","width_","declutterMode_","declutterImageWithText_","pointGeometry","myBegin","ceil","multiPointGeometry","opt_sharedData","anchor","size","origin","getPixelRatio","getHitDetectionImage","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lineStringGeometry","multiLineStringGeometry","lastStroke","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","circleGeometry","setFillStrokeStyles_","circleInstruction","polygonGeometry","multiPolygonGeometry","matchingChunk","maxAngle","m12","m23","x1","y1","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","m","start","x2","y2","acos","TEXT_ALIGN","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","CanvasTextBuilder","labels_","fillStates","strokeStates","textStates","textKey_","fillKey_","strokeKey_","geometryType","placement","TextPlacement","LINE","geometryWidths","overflow","interiorPoints","beg_1","filter","w","keep","saveTextStates_","backgroundFill","backgroundStroke","padding","p0","p1","p2","p3","pixelRatio_1","NaN","flatOffset","flatEnd","o","oo","range","drawChars_","strokeKey","textKey","justify","fillKey","baseline","offsetY","text","strokeWidth","abs","getOverflow","getMaxAngle","getPlacement","getJustify","getBackgroundFill","getBackgroundStroke","getPadding","join","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","zIndex","builderType","zIndexKey","toString","replays","replay","Constructor","drawTextOnPath","startM","measureAndCacheTextWidth","cache","segmentLength","segmentM","advance","interpolate","beginX","beginY","startOffset","startLength","endM","endX","endY","flat","previousAngle","result","singleSegment","atan2","replace","angle","delta","iStart","charLength","len","chars","substring","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","RegExp","fromCharCode","horizontalTextAlign","align","test","createTextChunks","line","Executor","overlaps","alignFill_","coordinateCache_","renderedTransform_","widths_","createLabel","key","textIsArray","chunks","split","_a","height","widths","heights","lineWidths","renderWidth","contextInstructions","h","label","floor","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","previousFont","leftRight","strokeInstructions","fillInstructions","lineHeight","lineOffset","widthHeightIndex","lineWidthIndex","text_1","max","fillStrokeArgs","replayTextBackground_","strokeInstruction","fill_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","anchorX","anchorY","originX","originY","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","min","round","drawImageX","drawImageY","drawImageW","drawImageH","minX","minY","maxX","maxY","value","canvasTransform","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","opacity","box","canvas","strokePadding","origin_1","repeatSize","save","rotate","restore","drawLabelWithPointPlacement_","execute_","opt_featureCallback","opt_hitExtent","opt_declutterTree","dd","prevX","prevY","roundX","roundY","image","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotationFromTransform","batchSize","getGeometry","r","fn","coords","rotateWithView","labelWithAnchor","widthIndex","args","insert","imageArgs","imageDeclutterBox","index","collides","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","c","cc","part","i_1","ii_1","execute","executeHitDetection","ORDER","ExecutorGroup","allInstructions","opt_renderBuffer","overlaps_","renderBuffer_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","clip","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","forEachFeatureAtCoordinate","coordinate","hitTolerance","callback","declutteredFeatures","contextSize","newContext","hitExtent","clearRect","indexes","circlePixelIndexArrayCache","maxDistanceSq","distances","j","distanceSq","distance","pixelIndex","getPixelIndexArray","featureCallback","imageData","getImageData","data","indexOf","idx","result_1","executor","zs","keys","Number","sort","isEmpty","opt_builderTypes","jj","builderTypes","HIT_DETECT_RESOLUTION","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","bind","animatingOrInteracting_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedExtent_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","declutterExecutorGroup","clipping","compositionContext_","renderWorlds","executorGroup","frameState","viewState","center","projection","projectionExtent","vectorSource","getLayer","getSource","viewHints","ViewHint","ANIMATING","INTERACTING","multiWorld","getWrapX","canWrapX","worldWidth","endWorld","world","getRenderTransform","setupCompositionContext_","compositionContext","releaseCompositionContext_","renderDeclutter","declutterTree","renderFrame","target","layerState","layerStatesArray","layerIndex","pixelTransform","inversePixelTransform","useContainer","getBackground","containerReused","preRender","clipped","render","layerExtent","clipUnrotated","postRender","container","getFeatures","pixel","Promise","resolve","layer","transforms","source","startX","offsetX","features","styleFunction","imageSmoothingEnabled","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","getStyleFunction","styles","color","originalStyle","clone","setColor","setText","imgSize","getImageSize","imgContext","img","fillRect","setImage","Icon","anchorXUnits","IconAnchorUnits","PIXELS","anchorYUnits","getScale","byGeometryType","zIndexKeys","geomAndStyle","k","kk","createHitDetectionImageData","resultFeatures","g","hitDetect","matches","match","splice","lastIndexOf","executorGroups","some","all","item","handleFontsChanged","getVisible","changed","event","renderIfReadyAndVisible","prepareFrame","animating","interacting","updateWhileAnimating","getUpdateWhileAnimating","updateWhileInteracting","getUpdateWhileInteracting","ready","frameStateExtent","vectorLayerRevision","getRevision","vectorLayerRenderBuffer","getRenderBuffer","vectorLayerRenderOrder","getRenderOrder","renderedExtent","loadExtents","gutter","loadExtent","declutterBuilderGroup","getDeclutter","userTransform","userProjection","extent_1","userExtent_1","loadFeatures","dirty","userExtent","getFeaturesInExtent","replayGroupInstructions","getOverlaps","VectorLayer","opt_options","createRenderer","BaseVector","geometryCollectionGeometry","opt_declutterImageWithText"],"mappings":"4GAAA,IAOQA,EAPR,gGAMIC,GACID,EAAgB,SAAUE,EAAGC,GAI7B,OAHAH,EAAgBI,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,CAAG,GAC1E,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,GAAI,EAC7FR,EAAcE,EAAGC,EAC5B,EACO,SAAUD,EAAGC,GAChB,GAAiB,mBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIS,UAAU,uBAAyBC,OAAOV,GAAK,iCAE7D,SAASW,IAAOC,KAAKC,YAAcd,CAAG,CADtCF,EAAcE,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOa,OAAOd,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,EACnF,GAmBAI,EAAyC,SAAUC,GAWnD,SAASD,EAAwBE,EAASC,EAAYC,EAAQC,EAAWC,EAAcC,EAAsBC,GACzG,IAAIC,EAAQR,EAAOR,KAAKI,OAASA,KA2KjC,OAtKAY,EAAMC,SAAWR,EAKjBO,EAAME,YAAcR,EAKpBM,EAAMG,QAAUR,EAKhBK,EAAMI,WAAaR,EAKnBI,EAAMK,cAAgBR,EAKtBG,EAAMM,kBAAoBR,EAK1BE,EAAMO,eAAiBR,EAKvBC,EAAMQ,kBAAoB,KAK1BR,EAAMS,oBAAsB,KAK5BT,EAAMU,kBAAoB,KAK1BV,EAAMW,WAAa,KAKnBX,EAAMY,aAAe,KAKrBZ,EAAMa,OAAS,KAKfb,EAAMc,cAAgB,EAKtBd,EAAMe,cAAgB,EAKtBf,EAAMgB,aAAe,EAKrBhB,EAAMiB,cAAgB,EAKtBjB,EAAMkB,cAAgB,EAKtBlB,EAAMmB,cAAgB,EAKtBnB,EAAMoB,sBAAuB,EAK7BpB,EAAMqB,eAAiB,EAKvBrB,EAAMsB,YAAc,CAAC,EAAG,GAKxBtB,EAAMuB,YAAc,EAKpBvB,EAAMwB,MAAQ,GAKdxB,EAAMyB,aAAe,EAKrBzB,EAAM0B,aAAe,EAKrB1B,EAAM2B,qBAAsB,EAK5B3B,EAAM4B,cAAgB,EAKtB5B,EAAM6B,WAAa,CAAC,EAAG,GAKvB7B,EAAM8B,eAAiB,KAKvB9B,EAAM+B,iBAAmB,KAKzB/B,EAAMgC,WAAa,KAKnBhC,EAAMiC,kBAAoB,GAK1BjC,EAAMkC,mBAAqB,cACpBlC,CACX,CAqtBA,OA54BA1B,EAAUiB,EAAyBC,GA+LnCD,EAAwBT,UAAUqD,YAAc,SAAUC,EAAiBC,EAAQC,EAAKC,GACpF,GAAKnD,KAAKyB,OAAV,CAGA,IAAI2B,EAAmB,YAAYJ,EAAiBC,EAAQC,EAAKC,EAAQnD,KAAKgB,WAAYhB,KAAK6C,mBAC3FxC,EAAUL,KAAKa,SACfwC,EAAiBrD,KAAK8C,mBACtBQ,EAAQjD,EAAQkD,YACM,GAAtBvD,KAAK6B,gBACLxB,EAAQkD,YAAcD,EAAQtD,KAAK6B,eAEvC,IAAI2B,EAAWxD,KAAKiC,eAChBjC,KAAKgC,uBACLwB,GAAYxD,KAAKiB,eAErB,IAAK,IAAIwC,EAAI,EAAGC,EAAKN,EAAiBO,OAAQF,EAAIC,EAAID,GAAK,EAAG,CAC1D,IAAIG,EAAIR,EAAiBK,GAAKzD,KAAK0B,cAC/BmC,EAAIT,EAAiBK,EAAI,GAAKzD,KAAK2B,cACvC,GAAiB,IAAb6B,GACuB,GAAvBxD,KAAKkC,YAAY,IACM,GAAvBlC,KAAKkC,YAAY,GAAS,CAC1B,IAAI4B,EAAUF,EAAI5D,KAAK0B,cACnBqC,EAAUF,EAAI7D,KAAK2B,cACvB,YAAiB0B,EAAgBS,EAASC,EAAS,EAAG,EAAGP,GAAWM,GAAUC,GAC9E1D,EAAQ2D,aAAaC,MAAM5D,EAASgD,GACpChD,EAAQ6D,UAAUJ,EAASC,GAC3B1D,EAAQ8D,MAAMnE,KAAKkC,YAAY,GAAIlC,KAAKkC,YAAY,IACpD7B,EAAQ+D,UAAUpE,KAAKyB,OAAQzB,KAAK8B,cAAe9B,KAAK+B,cAAe/B,KAAKmC,YAAanC,KAAK4B,cAAe5B,KAAK0B,eAAgB1B,KAAK2B,cAAe3B,KAAKmC,YAAanC,KAAK4B,cAC7KvB,EAAQ2D,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,EACxC,MAEI3D,EAAQ+D,UAAUpE,KAAKyB,OAAQzB,KAAK8B,cAAe9B,KAAK+B,cAAe/B,KAAKmC,YAAanC,KAAK4B,aAAcgC,EAAGC,EAAG7D,KAAKmC,YAAanC,KAAK4B,aAEjJ,CAC0B,GAAtB5B,KAAK6B,gBACLxB,EAAQkD,YAAcD,EAhC1B,CAkCJ,EAQAnD,EAAwBT,UAAU2E,UAAY,SAAUrB,EAAiBC,EAAQC,EAAKC,GAClF,GAAKnD,KAAK4C,YAA6B,KAAf5C,KAAKoC,MAA7B,CAGIpC,KAAK0C,gBACL1C,KAAKsE,qBAAqBtE,KAAK0C,gBAE/B1C,KAAK2C,kBACL3C,KAAKuE,uBAAuBvE,KAAK2C,kBAErC3C,KAAKwE,qBAAqBxE,KAAK4C,YAC/B,IAAIQ,EAAmB,YAAYJ,EAAiBC,EAAQC,EAAKC,EAAQnD,KAAKgB,WAAYhB,KAAK6C,mBAC3FxC,EAAUL,KAAKa,SACf2C,EAAWxD,KAAKwC,cAIpB,IAHIxC,KAAKuC,sBACLiB,GAAYxD,KAAKiB,eAEdgC,EAASC,EAAKD,GAAUE,EAAQ,CACnC,IAAIS,EAAIR,EAAiBH,GAAUjD,KAAKqC,aACpCwB,EAAIT,EAAiBH,EAAS,GAAKjD,KAAKsC,aAC5C,GAAiB,IAAbkB,GACsB,GAAtBxD,KAAKyC,WAAW,IACM,GAAtBzC,KAAKyC,WAAW,GAAS,CACzB,IAAIY,EAAiB,YAAiBrD,KAAK8C,mBAAoBc,EAAGC,EAAG,EAAG,EAAGL,GAAWI,GAAIC,GAC1FxD,EAAQ2D,aAAaC,MAAM5D,EAASgD,GACpChD,EAAQ6D,UAAUN,EAAGC,GACrBxD,EAAQ8D,MAAMnE,KAAKyC,WAAW,GAAIzC,KAAKyC,WAAW,IAC9CzC,KAAK2C,kBACLtC,EAAQoE,WAAWzE,KAAKoC,MAAO,EAAG,GAElCpC,KAAK0C,gBACLrC,EAAQqE,SAAS1E,KAAKoC,MAAO,EAAG,GAEpC/B,EAAQ2D,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,EACxC,MAEQhE,KAAK2C,kBACLtC,EAAQoE,WAAWzE,KAAKoC,MAAOwB,EAAGC,GAElC7D,KAAK0C,gBACLrC,EAAQqE,SAAS1E,KAAKoC,MAAOwB,EAAGC,EAG5C,CAxCA,CAyCJ,EAUA1D,EAAwBT,UAAUiF,cAAgB,SAAU3B,EAAiBC,EAAQC,EAAKC,EAAQyB,GAC9F,IAAIvE,EAAUL,KAAKa,SACfuC,EAAmB,YAAYJ,EAAiBC,EAAQC,EAAKC,EAAQnD,KAAKgB,WAAYhB,KAAK6C,mBAC/FxC,EAAQwE,OAAOzB,EAAiB,GAAIA,EAAiB,IACrD,IAAIO,EAASP,EAAiBO,OAC1BiB,IACAjB,GAAU,GAEd,IAAK,IAAIF,EAAI,EAAGA,EAAIE,EAAQF,GAAK,EAC7BpD,EAAQyE,OAAO1B,EAAiBK,GAAIL,EAAiBK,EAAI,IAK7D,OAHImB,GACAvE,EAAQ0E,YAEL7B,CACX,EASA/C,EAAwBT,UAAUsF,WAAa,SAAUhC,EAAiBC,EAAQgC,EAAM9B,GACpF,IAAK,IAAIM,EAAI,EAAGC,EAAKuB,EAAKtB,OAAQF,EAAIC,IAAMD,EACxCR,EAASjD,KAAK2E,cAAc3B,EAAiBC,EAAQgC,EAAKxB,GAAIN,GAAQ,GAE1E,OAAOF,CACX,EAQA9C,EAAwBT,UAAUwF,WAAa,SAAUC,GACrD,GAAK,YAAWnF,KAAKe,QAASoE,EAASC,aAAvC,CAGA,GAAIpF,KAAKuB,YAAcvB,KAAKwB,aAAc,CAClCxB,KAAKuB,YACLvB,KAAKsE,qBAAqBtE,KAAKuB,YAE/BvB,KAAKwB,cACLxB,KAAKuE,uBAAuBvE,KAAKwB,cAErC,IAAI4B,EAAmB,YAAgB+B,EAAUnF,KAAKgB,WAAYhB,KAAK6C,mBACnEwC,EAAKjC,EAAiB,GAAKA,EAAiB,GAC5CkC,EAAKlC,EAAiB,GAAKA,EAAiB,GAC5CmC,EAASC,KAAKC,KAAKJ,EAAKA,EAAKC,EAAKA,GAClCjF,EAAUL,KAAKa,SACnBR,EAAQqF,YACRrF,EAAQsF,IAAIvC,EAAiB,GAAIA,EAAiB,GAAImC,EAAQ,EAAG,EAAIC,KAAKI,IACtE5F,KAAKuB,YACLlB,EAAQwF,OAER7F,KAAKwB,cACLnB,EAAQyF,QAEhB,CACmB,KAAf9F,KAAKoC,OACLpC,KAAKqE,UAAUc,EAASY,YAAa,EAAG,EAAG,EAvB/C,CAyBJ,EAQA5F,EAAwBT,UAAUsG,SAAW,SAAUC,GACnDjG,KAAKkG,mBAAmBD,EAAME,UAAWF,EAAMG,aAC/CpG,KAAKqG,cAAcJ,EAAMK,YACzBtG,KAAKuG,aAAaN,EAAMO,UAC5B,EAIArG,EAAwBT,UAAUsE,aAAe,SAAUxD,GACvDR,KAAKgB,WAAaR,CACtB,EAQAL,EAAwBT,UAAU+G,aAAe,SAAUtB,GAEvD,OADWA,EAASuB,WAEhB,IAAK,QACD1G,KAAK2G,UACgD,GACrD,MACJ,IAAK,aACD3G,KAAK4G,eACqD,GAC1D,MACJ,IAAK,UACD5G,KAAK6G,YACkD,GACvD,MACJ,IAAK,aACD7G,KAAK8G,eACqD,GAC1D,MACJ,IAAK,kBACD9G,KAAK+G,oBAC0D,GAC/D,MACJ,IAAK,eACD/G,KAAKgH,iBACuD,GAC5D,MACJ,IAAK,qBACDhH,KAAKiH,uBAC6D,GAClE,MACJ,IAAK,SACDjH,KAAKkF,WACiD,GAIlE,EAWA/E,EAAwBT,UAAUwH,YAAc,SAAUC,EAASlB,GAC/D,IAAId,EAAWc,EAAMmB,qBAANnB,CAA4BkB,GACtChC,GAAa,YAAWnF,KAAKe,QAASoE,EAASC,eAGpDpF,KAAKgG,SAASC,GACdjG,KAAKyG,aAAatB,GACtB,EAOAhF,EAAwBT,UAAUuH,uBAAyB,SAAU9B,GAEjE,IADA,IAAIkC,EAAalC,EAASmC,qBACjB7D,EAAI,EAAGC,EAAK2D,EAAW1D,OAAQF,EAAIC,IAAMD,EAC9CzD,KAAKyG,aAAaY,EAAW5D,GAErC,EAOAtD,EAAwBT,UAAUiH,UAAY,SAAUxB,GAChDnF,KAAKkB,oBACLiE,EAAiEA,EAASoC,oBAAoBvH,KAAKkB,kBAAmBlB,KAAKmB,iBAE/H,IAAI6B,EAAkBmC,EAASqC,qBAC3BrE,EAASgC,EAASsC,YAClBzH,KAAKyB,QACLzB,KAAK+C,YAAYC,EAAiB,EAAGA,EAAgBW,OAAQR,GAE9C,KAAfnD,KAAKoC,OACLpC,KAAKqE,UAAUrB,EAAiB,EAAGA,EAAgBW,OAAQR,EAEnE,EAOAhD,EAAwBT,UAAUoH,eAAiB,SAAU3B,GACrDnF,KAAKkB,oBACLiE,EAAsEA,EAASoC,oBAAoBvH,KAAKkB,kBAAmBlB,KAAKmB,iBAEpI,IAAI6B,EAAkBmC,EAASqC,qBAC3BrE,EAASgC,EAASsC,YAClBzH,KAAKyB,QACLzB,KAAK+C,YAAYC,EAAiB,EAAGA,EAAgBW,OAAQR,GAE9C,KAAfnD,KAAKoC,OACLpC,KAAKqE,UAAUrB,EAAiB,EAAGA,EAAgBW,OAAQR,EAEnE,EAOAhD,EAAwBT,UAAUkH,eAAiB,SAAUzB,GAIzD,GAHInF,KAAKkB,oBACLiE,EAAsEA,EAASoC,oBAAoBvH,KAAKkB,kBAAmBlB,KAAKmB,iBAE/H,YAAWnB,KAAKe,QAASoE,EAASC,aAAvC,CAGA,GAAIpF,KAAKwB,aAAc,CACnBxB,KAAKuE,uBAAuBvE,KAAKwB,cACjC,IAAInB,EAAUL,KAAKa,SACfmC,EAAkBmC,EAASqC,qBAC/BnH,EAAQqF,YACR1F,KAAK2E,cAAc3B,EAAiB,EAAGA,EAAgBW,OAAQwB,EAASsC,aAAa,GACrFpH,EAAQyF,QACZ,CACA,GAAmB,KAAf9F,KAAKoC,MAAc,CACnB,IAAIsF,EAAevC,EAASwC,kBAC5B3H,KAAKqE,UAAUqD,EAAc,EAAG,EAAG,EACvC,CAZA,CAaJ,EAOAvH,EAAwBT,UAAUqH,oBAAsB,SAAU5B,GAC1DnF,KAAKkB,oBACLiE,EACoEA,EAASoC,oBAAoBvH,KAAKkB,kBAAmBlB,KAAKmB,iBAElI,IAAIyG,EAAiBzC,EAASC,YAC9B,GAAK,YAAWpF,KAAKe,QAAS6G,GAA9B,CAGA,GAAI5H,KAAKwB,aAAc,CACnBxB,KAAKuE,uBAAuBvE,KAAKwB,cACjC,IAAInB,EAAUL,KAAKa,SACfmC,EAAkBmC,EAASqC,qBAC3BvE,EAAS,EACTgC,EAAqCE,EAAS0C,UAC9C1E,EAASgC,EAASsC,YACtBpH,EAAQqF,YACR,IAAK,IAAIjC,EAAI,EAAGC,EAAKuB,EAAKtB,OAAQF,EAAIC,IAAMD,EACxCR,EAASjD,KAAK2E,cAAc3B,EAAiBC,EAAQgC,EAAKxB,GAAIN,GAAQ,GAE1E9C,EAAQyF,QACZ,CACA,GAAmB,KAAf9F,KAAKoC,MAAc,CACnB,IAAI0F,EAAgB3C,EAAS4C,mBAC7B/H,KAAKqE,UAAUyD,EAAe,EAAGA,EAAcnE,OAAQ,EAC3D,CAjBA,CAkBJ,EAOAxD,EAAwBT,UAAUmH,YAAc,SAAU1B,GAItD,GAHInF,KAAKkB,oBACLiE,EAAmEA,EAASoC,oBAAoBvH,KAAKkB,kBAAmBlB,KAAKmB,iBAE5H,YAAWnB,KAAKe,QAASoE,EAASC,aAAvC,CAGA,GAAIpF,KAAKwB,cAAgBxB,KAAKuB,WAAY,CAClCvB,KAAKuB,YACLvB,KAAKsE,qBAAqBtE,KAAKuB,YAE/BvB,KAAKwB,cACLxB,KAAKuE,uBAAuBvE,KAAKwB,cAErC,IAAInB,EAAUL,KAAKa,SACnBR,EAAQqF,YACR1F,KAAKgF,WAAWG,EAAS6C,6BAA8B,EACzB7C,EAAS0C,UAAY1C,EAASsC,aACxDzH,KAAKuB,YACLlB,EAAQwF,OAER7F,KAAKwB,cACLnB,EAAQyF,QAEhB,CACA,GAAmB,KAAf9F,KAAKoC,MAAc,CACnB,IAAI6F,EAAoB9C,EAAS+C,uBACjClI,KAAKqE,UAAU4D,EAAmB,EAAG,EAAG,EAC5C,CAtBA,CAuBJ,EAMA9H,EAAwBT,UAAUsH,iBAAmB,SAAU7B,GAI3D,GAHInF,KAAKkB,oBACLiE,EAAwEA,EAASoC,oBAAoBvH,KAAKkB,kBAAmBlB,KAAKmB,iBAEjI,YAAWnB,KAAKe,QAASoE,EAASC,aAAvC,CAGA,GAAIpF,KAAKwB,cAAgBxB,KAAKuB,WAAY,CAClCvB,KAAKuB,YACLvB,KAAKsE,qBAAqBtE,KAAKuB,YAE/BvB,KAAKwB,cACLxB,KAAKuE,uBAAuBvE,KAAKwB,cAErC,IAAInB,EAAUL,KAAKa,SACfmC,EAAkBmC,EAAS6C,6BAC3B/E,EAAS,EACTkF,EAAQhD,EAASiD,WACjBjF,EAASgC,EAASsC,YACtBpH,EAAQqF,YACR,IAAK,IAAIjC,EAAI,EAAGC,EAAKyE,EAAMxE,OAAQF,EAAIC,IAAMD,EAAG,CAC5C,IAAIwB,EAAOkD,EAAM1E,GACjBR,EAASjD,KAAKgF,WAAWhC,EAAiBC,EAAQgC,EAAM9B,EAC5D,CACInD,KAAKuB,YACLlB,EAAQwF,OAER7F,KAAKwB,cACLnB,EAAQyF,QAEhB,CACA,GAAmB,KAAf9F,KAAKoC,MAAc,CACnB,IAAIiG,EAAqBlD,EAASmD,wBAClCtI,KAAKqE,UAAUgE,EAAoB,EAAGA,EAAmB1E,OAAQ,EACrE,CA5BA,CA6BJ,EAKAxD,EAAwBT,UAAU4E,qBAAuB,SAAUiE,GAC/D,IAAIlI,EAAUL,KAAKa,SACf2H,EAAmBxI,KAAKoB,kBACvBoH,EAOGA,EAAiBC,WAAaF,EAAUE,YACxCD,EAAiBC,UAAYF,EAAUE,UACvCpI,EAAQoI,UAAYF,EAAUE,YARlCpI,EAAQoI,UAAYF,EAAUE,UAC9BzI,KAAKoB,kBAAoB,CACrBqH,UAAWF,EAAUE,WASjC,EAKAtI,EAAwBT,UAAU6E,uBAAyB,SAAUmE,GACjE,IAAIrI,EAAUL,KAAKa,SACf8H,EAAqB3I,KAAKqB,oBACzBsH,GAqBGA,EAAmBC,SAAWF,EAAYE,UAC1CD,EAAmBC,QAAUF,EAAYE,QACzCvI,EAAQuI,QAAUF,EAAYE,SAE9BvI,EAAQwI,cACH,YAAOF,EAAmBG,SAAUJ,EAAYI,WACjDzI,EAAQwI,YAAaF,EAAmBG,SAAWJ,EAAYI,UAE/DH,EAAmBI,gBAAkBL,EAAYK,iBACjDJ,EAAmBI,eAAiBL,EAAYK,eAChD1I,EAAQ0I,eAAiBL,EAAYK,iBAGzCJ,EAAmBK,UAAYN,EAAYM,WAC3CL,EAAmBK,SAAWN,EAAYM,SAC1C3I,EAAQ2I,SAAWN,EAAYM,UAE/BL,EAAmBM,WAAaP,EAAYO,YAC5CN,EAAmBM,UAAYP,EAAYO,UAC3C5I,EAAQ4I,UAAYP,EAAYO,WAEhCN,EAAmBO,YAAcR,EAAYQ,aAC7CP,EAAmBO,WAAaR,EAAYQ,WAC5C7I,EAAQ6I,WAAaR,EAAYQ,YAEjCP,EAAmBQ,aAAeT,EAAYS,cAC9CR,EAAmBQ,YAAcT,EAAYS,YAC7C9I,EAAQ8I,YAAcT,EAAYS,eA/CtC9I,EAAQuI,QAAUF,EAAYE,QAC1BvI,EAAQwI,cACRxI,EAAQwI,YAAYH,EAAYI,UAChCzI,EAAQ0I,eAAiBL,EAAYK,gBAEzC1I,EAAQ2I,SAAWN,EAAYM,SAC/B3I,EAAQ4I,UAAYP,EAAYO,UAChC5I,EAAQ6I,WAAaR,EAAYQ,WACjC7I,EAAQ8I,YAAcT,EAAYS,YAClCnJ,KAAKqB,oBAAsB,CACvBuH,QAASF,EAAYE,QACrBE,SAAUJ,EAAYI,SACtBC,eAAgBL,EAAYK,eAC5BC,SAAUN,EAAYM,SACtBC,UAAWP,EAAYO,UACvBC,WAAYR,EAAYQ,WACxBC,YAAaT,EAAYS,aAkCrC,EAKAhJ,EAAwBT,UAAU8E,qBAAuB,SAAU4E,GAC/D,IAAI/I,EAAUL,KAAKa,SACfwI,EAAmBrJ,KAAKsB,kBACxBgI,EAAYF,EAAUE,UACpBF,EAAUE,UACV,IACDD,GAWGA,EAAiBE,MAAQH,EAAUG,OACnCF,EAAiBE,KAAOH,EAAUG,KAClClJ,EAAQkJ,KAAOH,EAAUG,MAEzBF,EAAiBC,WAAaA,IAC9BD,EAAiBC,UAA2C,EAC5DjJ,EAAQiJ,UAA2C,GAEnDD,EAAiBG,cAAgBJ,EAAUI,eAC3CH,EAAiBG,aAAkDJ,EAAsB,aACzF/I,EAAQmJ,aAAkDJ,EAAsB,gBApBpF/I,EAAQkJ,KAAOH,EAAUG,KACzBlJ,EAAQiJ,UAA2C,EACnDjJ,EAAQmJ,aAAkDJ,EAAsB,aAChFpJ,KAAKsB,kBAAoB,CACrBiI,KAAMH,EAAUG,KAChBD,UAAWA,EACXE,aAAcJ,EAAUI,cAiBpC,EAQArJ,EAAwBT,UAAUwG,mBAAqB,SAAUuC,EAAWU,GACxE,IAAIvI,EAAQZ,KACZ,GAAKyI,EAGA,CACD,IAAIgB,EAAiBhB,EAAUiB,WAC/B1J,KAAKuB,WAAa,CACdkH,UAAW,YAAYgB,GAAkC,KAEjE,MAPIzJ,KAAKuB,WAAa,KAQtB,GAAK4H,EAGA,CACD,IAAIQ,EAAmBR,EAAYO,WAC/BE,EAAqBT,EAAYU,aACjCC,EAAsBX,EAAYY,cAClCC,EAA4Bb,EAAYc,oBACxCC,EAAsBf,EAAYgB,cAClCC,EAAmBjB,EAAYkB,WAC/BC,EAAwBnB,EAAYoB,gBACpCzB,EAAWgB,GAET,IACN9J,KAAKwB,aAAe,CAChBoH,aAAgC4B,IAAvBZ,EACHA,EACA,IACNd,SAA+B,IAArB9I,KAAKc,YACTgI,EACAA,EAAS2B,KAAI,SAAUC,GAAK,OAAOA,EAAI9J,EAAME,WAAa,IAChEiI,gBAAiBiB,GAEX,KAAyBhK,KAAKc,YACpCkI,cAAkCwB,IAAxBN,EACJA,EACA,IACNjB,gBAAiCuB,IAArBJ,EACNA,EACA,KAAoBpK,KAAKc,YAC/BoI,gBAAsCsB,IAA1BF,EACNA,EACA,IACNnB,YAAa,YAAYQ,GAAsC,KAEvE,MAlCI3J,KAAKwB,aAAe,IAmC5B,EAOArB,EAAwBT,UAAU2G,cAAgB,SAAUsE,GACxD,IAAIC,EACJ,GAAKD,IAAgBC,EAAYD,EAAWE,WAA5C,CAIA,IAAIC,EAAcH,EAAWI,YACzBC,EAAcL,EAAWM,YAC7BjL,KAAKyB,OAASkJ,EAAWrE,SAAStG,KAAKc,aACvCd,KAAK0B,cAAgBoJ,EAAY,GAAK9K,KAAKc,YAC3Cd,KAAK2B,cAAgBmJ,EAAY,GAAK9K,KAAKc,YAC3Cd,KAAK4B,aAAegJ,EAAU,GAAK5K,KAAKc,YACxCd,KAAK6B,cAAgB8I,EAAWO,aAChClL,KAAK8B,cAAgBkJ,EAAY,GACjChL,KAAK+B,cAAgBiJ,EAAY,GACjChL,KAAKgC,qBAAuB2I,EAAWQ,oBACvCnL,KAAKiC,eAAiB0I,EAAWS,cACjCpL,KAAKkC,YAAcyI,EAAWU,gBAC9BrL,KAAKmC,YAAcyI,EAAU,GAAK5K,KAAKc,WAbvC,MAFId,KAAKyB,OAAS,IAgBtB,EAOAtB,EAAwBT,UAAU6G,aAAe,SAAU+E,GACvD,GAAKA,EAGA,CACD,IAAIC,EAAgBD,EAAUnF,UAC9B,GAAKoF,EAGA,CACD,IAAIC,EAAqBD,EAAc7B,WACvC1J,KAAK0C,eAAiB,CAClB+F,UAAW,YAAY+C,GAA0C,KAEzE,MAPIxL,KAAK0C,eAAiB,KAQ1B,IAAI+I,EAAkBH,EAAUlF,YAChC,GAAKqF,EAGA,CACD,IAAIC,EAAuBD,EAAgB/B,WACvCiC,EAAyBF,EAAgB5B,aACzC+B,EAA0BH,EAAgB1B,cAC1C8B,EAAgCJ,EAAgBxB,oBAChD6B,EAA0BL,EAAgBtB,cAC1C4B,EAAuBN,EAAgBpB,WACvC2B,EAA4BP,EAAgBlB,gBAChDvK,KAAK2C,iBAAmB,CACpBiG,aAAoC4B,IAA3BmB,EACHA,EACA,IACN7C,SAAU8C,GAEJ,IACN7C,eAAgB8C,GAEV,IACN7C,cAAsCwB,IAA5BsB,EACJA,EACA,IACN7C,eAAoCuB,IAAzBuB,EACLA,EACA,IACN7C,gBAA0CsB,IAA9BwB,EACNA,EACA,IACN7C,YAAa,YAAYuC,GAA8C,KAE/E,MA/BI1L,KAAK2C,iBAAmB,KAgC5B,IAAIsJ,EAAWX,EAAUY,UACrBC,EAAcb,EAAUc,aACxBC,EAAcf,EAAUgB,aACxBC,EAAqBjB,EAAUH,oBAC/BqB,EAAelB,EAAUF,cACzBqB,EAAYnB,EAAUD,gBACtBqB,EAAWpB,EAAU9E,UACrBmG,EAAgBrB,EAAUsB,eAC1BC,EAAmBvB,EAAUwB,kBACjC9M,KAAK4C,WAAa,CACd2G,UAAmBiB,IAAbyB,EAAyBA,EAAW,IAC1C3C,eAA6BkB,IAAlBmC,EAA8BA,EAAgB,IACzDnD,kBAAmCgB,IAArBqC,EACRA,EACA,KAEV7M,KAAKoC,WACYoI,IAAbkC,EACMlN,MAAMuN,QAAQL,GACVA,EAASM,QAAO,SAAUC,EAAKC,EAAGzJ,GAAK,OAAQwJ,GAAOxJ,EAAI,EAAI,IAAMyJ,EAAI,GAAG,IAC3ER,EACJ,GACV1M,KAAKqC,kBACemI,IAAhB2B,EAA4BnM,KAAKc,YAAcqL,EAAc,EACjEnM,KAAKsC,kBACekI,IAAhB6B,EAA4BrM,KAAKc,YAAcuL,EAAc,EACjErM,KAAKuC,yBACsBiI,IAAvB+B,GAAmCA,EACvCvM,KAAKwC,mBAAiCgI,IAAjBgC,EAA6BA,EAAe,EACjExM,KAAKyC,WAAa,CACdzC,KAAKc,YAAc2L,EAAU,GAC7BzM,KAAKc,YAAc2L,EAAU,GAErC,MAhFIzM,KAAKoC,MAAQ,EAiFrB,EACOjC,CACX,CA94B4C,CA84B1C,KACa,K,sCCr7Bf,oKAkBIgN,EAAqB,GAOrBC,EAAqB,CACrB,MAqNJ,SAA6BC,EAAclI,EAAUc,EAAOkB,EAASmG,GACjE,IAGIC,EAHA5C,EAAa1E,EAAMK,WACnBgF,EAAYrF,EAAMO,UAGtB,GAAImE,EAAY,CACZ,GAAIA,EAAW6C,iBAAmB,IAAWC,OACzC,OAEJ,IAAIC,EAAoBL,EACxB,GAAIC,EAA2B,CAC3B,IAAIK,EAAgBhD,EAAWiD,mBAC/B,GAAsB,SAAlBD,EAEA,GADAD,EAAoBJ,EACE,aAAlBK,EAA8B,CAE9B,IAAIE,EAAgBR,EAAaS,WAAW7H,EAAM8H,YAAa,SAC/DF,EAAcxH,cAAcsE,EAAY4C,GACxCM,EAAclH,UAAUxB,EAAUgC,EACtC,MACSmE,GAAaA,EAAU9E,YAC5B+G,EAAyB,CAAC,EAGtC,CACA,IAAIS,EAAcN,EAAkBI,WAAW7H,EAAM8H,YAAa,SAClEC,EAAY3H,cAAcsE,EAAY4C,GACtCS,EAAYrH,UAAUxB,EAAUgC,EACpC,CACA,GAAImE,GAAaA,EAAU9E,UAAW,CAClC,IAAIyH,EAAmBZ,EACnBC,IACAW,EAAmBX,GAEvB,IAAIY,EAAaD,EAAiBH,WAAW7H,EAAM8H,YAAa,QAChEG,EAAW3H,aAAa+E,EAAWiC,GACnCW,EAAWC,SAAShJ,EAAUgC,EAClC,CACJ,EA1PI,WAoJJ,SAAkCkG,EAAclI,EAAUc,EAAOkB,EAASmG,GACtE,IAAInE,EAAclD,EAAMG,YACxB,GAAI+C,EAAa,CACb,IAAIiF,EAAmBf,EAAaS,WAAW7H,EAAM8H,YAAa,cAClEK,EAAiBlI,mBAAmB,KAAMiD,GAC1CiF,EAAiBxH,eAAezB,EAAUgC,EAC9C,CACA,IAAImE,EAAYrF,EAAMO,UACtB,GAAI8E,GAAaA,EAAU9E,UAAW,CAClC,IAAI0H,GAAcZ,GAA6BD,GAAcS,WAAW7H,EAAM8H,YAAa,QAC3FG,EAAW3H,aAAa+E,GACxB4C,EAAWC,SAAShJ,EAAUgC,EAClC,CACJ,EAhKI,QA+SJ,SAA+BkG,EAAclI,EAAUc,EAAOkB,EAASmG,GACnE,IAAI7E,EAAYxC,EAAME,UAClBgD,EAAclD,EAAMG,YACxB,GAAIqC,GAAaU,EAAa,CAC1B,IAAIkF,EAAgBhB,EAAaS,WAAW7H,EAAM8H,YAAa,WAC/DM,EAAcnI,mBAAmBuC,EAAWU,GAC5CkF,EAAcxH,YAAY1B,EAAUgC,EACxC,CACA,IAAImE,EAAYrF,EAAMO,UACtB,GAAI8E,GAAaA,EAAU9E,UAAW,CAClC,IAAI0H,GAAcZ,GAA6BD,GAAcS,WAAW7H,EAAM8H,YAAa,QAC3FG,EAAW3H,aAAa+E,GACxB4C,EAAWC,SAAShJ,EAAUgC,EAClC,CACJ,EA5TI,WAgQJ,SAAkCkG,EAAclI,EAAUc,EAAOkB,EAASmG,GACtE,IAGIC,EAHA5C,EAAa1E,EAAMK,WACnBgF,EAAYrF,EAAMO,UAGtB,GAAImE,EAAY,CACZ,GAAIA,EAAW6C,iBAAmB,IAAWC,OACzC,OAEJ,IAAIC,EAAoBL,EACxB,GAAIC,EAA2B,CAC3B,IAAIK,EAAgBhD,EAAWiD,mBAC/B,GAAsB,SAAlBD,EAEA,GADAD,EAAoBJ,EACE,aAAlBK,EAA8B,CAE9B,IAAIW,EAAgBjB,EAAaS,WAAW7H,EAAM8H,YAAa,SAC/DO,EAAcjI,cAAcsE,EAAY4C,GACxCe,EAAcxH,eAAe3B,EAAUgC,EAC3C,MACSmE,GAAaA,EAAU9E,YAC5B+G,EAAyB,CAAC,EAGtC,CACA,IAAIS,EAAcN,EAAkBI,WAAW7H,EAAM8H,YAAa,SAClEC,EAAY3H,cAAcsE,EAAY4C,GACtCS,EAAYlH,eAAe3B,EAAUgC,EACzC,CACA,GAAImE,GAAaA,EAAU9E,UAAW,CAClC,IAAIyH,EAAmBZ,EACnBC,IACAW,EAAmBX,GAEvB,IAAIY,EAAaD,EAAiBH,WAAW7H,EAAM8H,YAAa,QAChEG,EAAW3H,aAAa+E,EAAWiC,GACnCW,EAAWC,SAAShJ,EAAUgC,EAClC,CACJ,EArSI,gBAsKJ,SAAuCkG,EAAclI,EAAUc,EAAOkB,EAASmG,GAC3E,IAAInE,EAAclD,EAAMG,YACxB,GAAI+C,EAAa,CACb,IAAIiF,EAAmBf,EAAaS,WAAW7H,EAAM8H,YAAa,cAClEK,EAAiBlI,mBAAmB,KAAMiD,GAC1CiF,EAAiBrH,oBAAoB5B,EAAUgC,EACnD,CACA,IAAImE,EAAYrF,EAAMO,UACtB,GAAI8E,GAAaA,EAAU9E,UAAW,CAClC,IAAI0H,GAAcZ,GAA6BD,GAAcS,WAAW7H,EAAM8H,YAAa,QAC3FG,EAAW3H,aAAa+E,GACxB4C,EAAWC,SAAShJ,EAAUgC,EAClC,CACJ,EAlLI,aA0LJ,SAAoCkG,EAAclI,EAAUc,EAAOkB,EAASmG,GACxE,IAAI7E,EAAYxC,EAAME,UAClBgD,EAAclD,EAAMG,YACxB,GAAI+C,GAAeV,EAAW,CAC1B,IAAI4F,EAAgBhB,EAAaS,WAAW7H,EAAM8H,YAAa,WAC/DM,EAAcnI,mBAAmBuC,EAAWU,GAC5CkF,EAAcrH,iBAAiB7B,EAAUgC,EAC7C,CACA,IAAImE,EAAYrF,EAAMO,UACtB,GAAI8E,GAAaA,EAAU9E,UAAW,CAClC,IAAI0H,GAAcZ,GAA6BD,GAAcS,WAAW7H,EAAM8H,YAAa,QAC3FG,EAAW3H,aAAa+E,GACxB4C,EAAWC,SAAShJ,EAAUgC,EAClC,CACJ,EAvMI,mBAgIJ,SAA0CoH,EAAapJ,EAAUc,EAAOkB,EAASmG,GAC7E,IACI7J,EAAGC,EADH2D,EAAalC,EAASmC,qBAE1B,IAAK7D,EAAI,EAAGC,EAAK2D,EAAW1D,OAAQF,EAAIC,IAAMD,EAAG,EAE7C+K,EADuBpB,EAAmB/F,EAAW5D,GAAGiD,YACvC6H,EAAalH,EAAW5D,GAAIwC,EAAOkB,EAASmG,EACjE,CACJ,EAtII,OAkCJ,SAA8BD,EAAclI,EAAUc,EAAOkB,EAASmG,GAClE,IAAI7E,EAAYxC,EAAME,UAClBgD,EAAclD,EAAMG,YACxB,GAAIqC,GAAaU,EAAa,CAC1B,IAAIsF,EAAepB,EAAaS,WAAW7H,EAAM8H,YAAa,UAC9DU,EAAavI,mBAAmBuC,EAAWU,GAC3CsF,EAAavJ,WAAWC,EAAUgC,EACtC,CACA,IAAImE,EAAYrF,EAAMO,UACtB,GAAI8E,GAAaA,EAAU9E,UAAW,CAClC,IAAI0H,GAAcZ,GAA6BD,GAAcS,WAAW7H,EAAM8H,YAAa,QAC3FG,EAAW3H,aAAa+E,GACxB4C,EAAWC,SAAShJ,EAAUgC,EAClC,CACJ,GAzCO,SAASuH,EAAaC,EAAUC,GACnC,OAAOC,SAAS,YAAOF,GAAW,IAAME,SAAS,YAAOD,GAAW,GACvE,CAMO,SAASE,EAAoBC,EAAYzO,GAC5C,IAAI0O,EAAYC,EAAaF,EAAYzO,GACzC,OAAO0O,EAAYA,CACvB,CAMO,SAASC,EAAaF,EAAYzO,GACrC,OAAQ6M,EAAqB4B,EAAczO,CAC/C,CAiCO,SAAS4O,EAAcX,EAAapH,EAASlB,EAAOkJ,EAAkBC,EAAUC,EAAe/B,GAClG,IAAIgC,GAAU,EACV3E,EAAa1E,EAAMK,WACvB,GAAIqE,EAAY,CACZ,IAAI4E,EAAa5E,EAAW6C,gBACxB+B,GAAc,IAAW9B,QAAU8B,GAAc,IAAWC,MAC5D7E,EAAW8E,oBAAoBL,IAG3BG,GAAc,IAAWG,MACzB/E,EAAWgF,OAEfhF,EAAWiF,kBAAkBR,GAC7BE,GAAU,EAElB,CAEA,OAUJ,SAA+Bf,EAAapH,EAASlB,EAAOkJ,EAAkBE,EAAe/B,GACzF,IAAInI,EAAWc,EAAMmB,qBAANnB,CAA4BkB,GAC3C,IAAKhC,EACD,OAEJ,IAAI0K,EAAqB1K,EAASoC,oBAAoB4H,EAAkBE,GACpES,EAAW7J,EAAM8J,cACrB,GAAID,EACAE,EAAezB,EAAasB,EAAoB5J,EAAOkB,OAEtD,EAEDqH,EADuBpB,EAAmByC,EAAmBnJ,YAC5C6H,EAAasB,EAAoB5J,EAAOkB,EAASmG,EACtE,CACJ,CAzBI2C,CAAsB1B,EAAapH,EAASlB,EAAOkJ,EAAkBE,EAAe/B,GAC7EgC,CACX,CA8BA,SAASU,EAAezB,EAAapJ,EAAUc,EAAOkB,GAClD,GAA0B,sBAAtBhC,EAASuB,UAQA6H,EAAYT,WAAW7H,EAAM8H,YAAa,WAChDmC,WACoD,EAAY/I,EAASlB,EAAM8J,cAAe9J,EAAMkK,gCAPvG,IAFA,IAAI9I,EAC2D,EAAW+I,gBACjE3M,EAAI,EAAGC,EAAK2D,EAAW1D,OAAQF,EAAIC,IAAMD,EAC9CuM,EAAezB,EAAalH,EAAW5D,GAAIwC,EAAOkB,EAO9D,C,0CCvJQlI,E,YCKJoR,EAAc,CACdC,eAAgB,EAChBC,WAAY,EACZC,OAAQ,EACRC,WAAY,EACZC,OAAQ,EACRC,WAAY,EACZC,WAAY,EACZC,aAAc,EACdC,KAAM,EACNC,gBAAiB,EACjBC,eAAgB,GAChBC,iBAAkB,GAClBC,OAAQ,IAKD,EAAkB,CAACb,EAAYS,MAI/B,EAAoB,CAACT,EAAYa,QAIjCC,EAAuB,CAACd,EAAYE,YAIpCa,EAAuB,CAACf,EAAYI,YAChC,I,oFDrCXvR,GACID,EAAgB,SAAUE,EAAGC,GAI7B,OAHAH,EAAgBI,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,CAAG,GAC1E,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,GAAI,EAC7FR,EAAcE,EAAGC,EAC5B,EACO,SAAUD,EAAGC,GAChB,GAAiB,mBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIS,UAAU,uBAAyBC,OAAOV,GAAK,iCAE7D,SAASW,IAAOC,KAAKC,YAAcd,CAAG,CADtCF,EAAcE,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOa,OAAOd,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,EACnF,GA6iBW,EAhiBoB,SAAUK,GAQzC,SAASiR,EAAcrC,EAAWsC,EAAWvC,EAAYzO,GACrD,IAAIM,EAAQR,EAAOR,KAAKI,OAASA,KAoEjC,OA/DAY,EAAMoO,UAAYA,EAMlBpO,EAAM0Q,UAAYA,EAKlB1Q,EAAMN,WAAaA,EAKnBM,EAAM2Q,aAAe,EAMrB3Q,EAAMmO,WAAaA,EAKnBnO,EAAM4Q,2BAA6B,KAKnC5Q,EAAM6Q,2BAA6B,KAKnC7Q,EAAM8Q,mBAAqB,KAK3B9Q,EAAM+Q,aAAe,GAKrB/Q,EAAMgR,YAAc,GAKpBhR,EAAMiR,eAAiB,GAKvBjR,EAAMkR,yBAA2B,GAKjClR,EAAMmR,MAA8D,CAAG,EAChEnR,CACX,CAgdA,OA7hBA1B,EAAUmS,EAAejR,GAmFzBiR,EAAc3R,UAAUsS,gBAAkB,SAAUC,GAChD,IAAI3R,EAAaN,KAAKM,WACtB,OAAqB,GAAdA,EACD2R,EACAA,EAAUxH,KAAI,SAAUyH,GACtB,OAAOA,EAAO5R,CAClB,GACR,EAOA+Q,EAAc3R,UAAUyS,2BAA6B,SAAUnP,EAAiBG,GAK5E,IAJA,IAAI5C,EAASP,KAAKoS,uBACdC,EAAWrS,KAAK6R,eAChBD,EAAc5R,KAAK4R,YACnBU,EAAQV,EAAYjO,OACfF,EAAI,EAAGC,EAAKV,EAAgBW,OAAQF,EAAIC,EAAID,GAAKN,EACtDkP,EAAS,GAAKrP,EAAgBS,GAC9B4O,EAAS,GAAKrP,EAAgBS,EAAI,GAC9B,YAAmBlD,EAAQ8R,KAC3BT,EAAYU,KAAWD,EAAS,GAChCT,EAAYU,KAAWD,EAAS,IAGxC,OAAOC,CACX,EAWAjB,EAAc3R,UAAU6S,0BAA4B,SAAUvP,EAAiBC,EAAQC,EAAKC,EAAQqP,EAAQC,GACxG,IAAIb,EAAc5R,KAAK4R,YACnBU,EAAQV,EAAYjO,OACpBpD,EAASP,KAAKoS,uBACdK,IACAxP,GAAUE,GAEd,IAIIM,EAAGiP,EAASC,EAJZC,EAAa5P,EAAgBC,GAC7B4P,EAAa7P,EAAgBC,EAAS,GACtC6P,EAAY9S,KAAK6R,eACjBkB,GAAU,EAEd,IAAKtP,EAAIR,EAASE,EAAQM,EAAIP,EAAKO,GAAKN,EACpC2P,EAAU,GAAK9P,EAAgBS,GAC/BqP,EAAU,GAAK9P,EAAgBS,EAAI,IACnCkP,EAAU,YAAuBpS,EAAQuS,MACzBJ,GACRK,IACAnB,EAAYU,KAAWM,EACvBhB,EAAYU,KAAWO,EACvBE,GAAU,GAEdnB,EAAYU,KAAWQ,EAAU,GACjClB,EAAYU,KAAWQ,EAAU,IAE5BH,IAAYK,EAAA,EAAaC,cAC9BrB,EAAYU,KAAWQ,EAAU,GACjClB,EAAYU,KAAWQ,EAAU,GACjCC,GAAU,GAGVA,GAAU,EAEdH,EAAaE,EAAU,GACvBD,EAAaC,EAAU,GACvBJ,EAAUC,EAOd,OAJKH,GAAUO,GAAYtP,IAAMR,EAASE,KACtCyO,EAAYU,KAAWM,EACvBhB,EAAYU,KAAWO,GAEpBP,CACX,EASAjB,EAAc3R,UAAUwT,uBAAyB,SAAUlQ,EAAiBC,EAAQgC,EAAM9B,EAAQgQ,GAC9F,IAAK,IAAI1P,EAAI,EAAGC,EAAKuB,EAAKtB,OAAQF,EAAIC,IAAMD,EAAG,CAC3C,IAAIP,EAAM+B,EAAKxB,GACX2P,EAAapT,KAAKuS,0BAA0BvP,EAAiBC,EAAQC,EAAKC,GAAQ,GAAO,GAC7FgQ,EAAYE,KAAKD,GACjBnQ,EAASC,CACb,CACA,OAAOD,CACX,EAOAoO,EAAc3R,UAAUwQ,WAAa,SAAU/K,EAAUgC,EAAS2I,EAAUwD,GACxEtT,KAAKuT,cAAcpO,EAAUgC,GAC7B,IAGInE,EAAiBoQ,EAAYD,EAAaK,EAC1CvQ,EAJAwQ,EAAOtO,EAASuB,UAChBvD,EAASgC,EAASsC,YAClBiM,EAAe1T,KAAK4R,YAAYjO,OAGpC,OAAQ8P,GACJ,IAAK,eACDzQ,EACgE,EAAWgF,6BAC3EwL,EAAe,GACf,IAAIrL,EACwD,EAAWC,WACvEnF,EAAS,EACT,IAAK,IAAIQ,EAAI,EAAGC,EAAKyE,EAAMxE,OAAQF,EAAIC,IAAMD,EAAG,CAC5C,IAAIkQ,EAAS,GACb1Q,EAASjD,KAAKkT,uBAAuBlQ,EAAiBC,EAAQkF,EAAM1E,GAAIN,EAAQwQ,GAChFH,EAAaH,KAAKM,EACtB,CACA3T,KAAK2R,aAAa0B,KAAK,CACnB,EAAkB3C,OAClBgD,EACAF,EACArO,EACA2K,EACA8D,EAAA,IAEJ5T,KAAK8R,yBAAyBuB,KAAK,CAC/B,EAAkB3C,OAClBgD,EACAF,EACArO,EACAmO,GAAwBxD,EACxB8D,EAAA,IAEJ,MACJ,IAAK,UACL,IAAK,kBACDT,EAAc,GACdnQ,EACY,WAARyQ,EAC6D,EAAWzL,6BAClE7C,EAASqC,qBACnBvE,EAASjD,KAAKkT,uBAAuBlQ,EAAiB,EACiD,EAAW6E,UAAW1E,EAAQgQ,GACrInT,KAAK2R,aAAa0B,KAAK,CACnB,EAAkB3C,OAClBgD,EACAP,EACAhO,EACA2K,EACA8D,EAAA,IAEJ5T,KAAK8R,yBAAyBuB,KAAK,CAC/B,EAAkB3C,OAClBgD,EACAP,EACAhO,EACAmO,GAAwBxD,EACxB8D,EAAA,IAEJ,MACJ,IAAK,aACL,IAAK,SACD5Q,EAAkBmC,EAASqC,qBAC3B4L,EAAapT,KAAKuS,0BAA0BvP,EAAiB,EAAGA,EAAgBW,OAAQR,GAAQ,GAAO,GACvGnD,KAAK2R,aAAa0B,KAAK,CACnB,EAAkB3C,OAClBgD,EACAN,EACAjO,EACA2K,EACA8D,EAAA,IAEJ5T,KAAK8R,yBAAyBuB,KAAK,CAC/B,EAAkB3C,OAClBgD,EACAN,EACAjO,EACAmO,GAAwBxD,EACxB8D,EAAA,IAEJ,MACJ,IAAK,aACD5Q,EAAkBmC,EAASqC,sBAC3B4L,EAAapT,KAAKmS,2BAA2BnP,EAAiBG,IAC7CuQ,IACb1T,KAAK2R,aAAa0B,KAAK,CACnB,EAAkB3C,OAClBgD,EACAN,EACAjO,EACA2K,EACA8D,EAAA,IAEJ5T,KAAK8R,yBAAyBuB,KAAK,CAC/B,EAAkB3C,OAClBgD,EACAN,EACAjO,EACAmO,GAAwBxD,EACxB8D,EAAA,KAGR,MACJ,IAAK,QACD5Q,EAAkBmC,EAASqC,qBAC3BxH,KAAK4R,YAAYyB,KAAKrQ,EAAgB,GAAIA,EAAgB,IAC1DoQ,EAAapT,KAAK4R,YAAYjO,OAC9B3D,KAAK2R,aAAa0B,KAAK,CACnB,EAAkB3C,OAClBgD,EACAN,EACAjO,EACA2K,IAEJ9P,KAAK8R,yBAAyBuB,KAAK,CAC/B,EAAkB3C,OAClBgD,EACAN,EACAjO,EACAmO,GAAwBxD,IAKpC9P,KAAK6T,YAAY1M,EACrB,EAMAkK,EAAc3R,UAAU6T,cAAgB,SAAUpO,EAAUgC,GACxDnH,KAAKwR,2BAA6B,CAC9B,EAAkBlB,eAClBnJ,EACA,EACAhC,GAEJnF,KAAK2R,aAAa0B,KAAKrT,KAAKwR,4BAC5BxR,KAAKyR,2BAA6B,CAC9B,EAAkBnB,eAClBnJ,EACA,EACAhC,GAEJnF,KAAK8R,yBAAyBuB,KAAKrT,KAAKyR,2BAC5C,EAIAJ,EAAc3R,UAAUoU,OAAS,WAC7B,MAAO,CACHnC,aAAc3R,KAAK2R,aACnBG,yBAA0B9R,KAAK8R,yBAC/BF,YAAa5R,KAAK4R,YAE1B,EAIAP,EAAc3R,UAAUqU,gCAAkC,WACtD,IAIItQ,EAJAqO,EAA2B9R,KAAK8R,yBAEpCA,EAAyBkC,UAGzB,IACIC,EACAR,EAFA/I,EAAIoH,EAAyBnO,OAG7BuQ,GAAS,EACb,IAAKzQ,EAAI,EAAGA,EAAIiH,IAAKjH,GAEjBgQ,GADAQ,EAAcnC,EAAyBrO,IAC+B,KAC1D,EAAkBoN,aAC1BqD,EAAQzQ,EAEHgQ,GAAQ,EAAkBnD,iBAC/B2D,EAAY,GAAKxQ,EACjB,YAAgBzD,KAAK8R,yBAA0BoC,EAAOzQ,GACtDyQ,GAAS,EAGrB,EAKA7C,EAAc3R,UAAUwG,mBAAqB,SAAUuC,EAAWU,GAC9D,IAAI4I,EAAQ/R,KAAK+R,MACjB,GAAItJ,EAAW,CACX,IAAIgB,EAAiBhB,EAAUiB,WAC/BqI,EAAMtJ,UAAY,YAAYgB,GAAkC,IACpE,MAEIsI,EAAMtJ,eAAY+B,EAEtB,GAAIrB,EAAa,CACb,IAAIQ,EAAmBR,EAAYO,WACnCqI,EAAM5I,YAAc,YAAYQ,GAAsC,KACtE,IAAIC,EAAqBT,EAAYU,aACrCkI,EAAMnJ,aACqB4B,IAAvBZ,EAAmCA,EAAqB,IAC5D,IAAIE,EAAsBX,EAAYY,cACtCgI,EAAMjJ,SAAWgB,EACXA,EAAoBqK,QACpB,IACN,IAAInK,EAA4Bb,EAAYc,oBAC5C8H,EAAMhJ,eAAiBiB,GAEjB,IACN,IAAIE,EAAsBf,EAAYgB,cACtC4H,EAAM/I,cACsBwB,IAAxBN,EACMA,EACA,IACV,IAAIE,EAAmBjB,EAAYkB,WACnC0H,EAAM9I,eACmBuB,IAArBJ,EAAiCA,EAAmB,IACxD,IAAIE,EAAwBnB,EAAYoB,gBACxCwH,EAAM7I,gBACwBsB,IAA1BF,EACMA,EACA,IACNyH,EAAM9I,UAAYjJ,KAAKuR,eACvBvR,KAAKuR,aAAeQ,EAAM9I,UAE1BjJ,KAAK0R,mBAAqB,KAElC,MAEIK,EAAM5I,iBAAcqB,EACpBuH,EAAMnJ,aAAU4B,EAChBuH,EAAMjJ,SAAW,KACjBiJ,EAAMhJ,oBAAiByB,EACvBuH,EAAM/I,cAAWwB,EACjBuH,EAAM9I,eAAYuB,EAClBuH,EAAM7I,gBAAasB,CAE3B,EAKA6G,EAAc3R,UAAU0U,WAAa,SAAUrC,GAC3C,IAAItJ,EAAYsJ,EAAMtJ,UAElB4L,EAAkB,CAAC,EAAkBrD,eAAgBvI,GAKzD,MAJyB,iBAAdA,GAEP4L,EAAgBhB,MAAK,GAElBgB,CACX,EAIAhD,EAAc3R,UAAU4U,YAAc,SAAUvC,GAC5C/R,KAAK2R,aAAa0B,KAAKrT,KAAKuU,aAAaxC,GAC7C,EAKAV,EAAc3R,UAAU6U,aAAe,SAAUxC,GAC7C,MAAO,CACH,EAAkBd,iBAClBc,EAAM5I,YACN4I,EAAM9I,UAAYjJ,KAAKM,WACvByR,EAAMnJ,QACNmJ,EAAM/I,SACN+I,EAAM7I,WACNlJ,KAAKgS,gBAAgBD,EAAMjJ,UAC3BiJ,EAAMhJ,eAAiB/I,KAAKM,WAEpC,EAKA+Q,EAAc3R,UAAU8U,gBAAkB,SAAUzC,EAAOqC,GACvD,IAAI3L,EAAYsJ,EAAMtJ,UACG,iBAAdA,GAA0BsJ,EAAM0C,kBAAoBhM,SACzC+B,IAAd/B,GACAzI,KAAK2R,aAAa0B,KAAKe,EAAWxU,KAAKI,KAAM+R,IAEjDA,EAAM0C,iBAAmBhM,EAEjC,EAKA4I,EAAc3R,UAAUgV,kBAAoB,SAAU3C,EAAOuC,GACzD,IAAInL,EAAc4I,EAAM5I,YACpBP,EAAUmJ,EAAMnJ,QAChBE,EAAWiJ,EAAMjJ,SACjBC,EAAiBgJ,EAAMhJ,eACvBC,EAAW+I,EAAM/I,SACjBC,EAAY8I,EAAM9I,UAClBC,EAAa6I,EAAM7I,YACnB6I,EAAM4C,oBAAsBxL,GAC5B4I,EAAM6C,gBAAkBhM,GACvBE,GAAYiJ,EAAM8C,kBACd,YAAO9C,EAAM8C,gBAAiB/L,IACnCiJ,EAAM+C,uBAAyB/L,GAC/BgJ,EAAMgD,iBAAmB/L,GACzB+I,EAAMiD,kBAAoB/L,GAC1B8I,EAAMkD,mBAAqB/L,UACPsB,IAAhBrB,GACAmL,EAAY1U,KAAKI,KAAM+R,GAE3BA,EAAM4C,mBAAqBxL,EAC3B4I,EAAM6C,eAAiBhM,EACvBmJ,EAAM8C,gBAAkB/L,EACxBiJ,EAAM+C,sBAAwB/L,EAC9BgJ,EAAMgD,gBAAkB/L,EACxB+I,EAAMiD,iBAAmB/L,EACzB8I,EAAMkD,kBAAoB/L,EAElC,EAIAmI,EAAc3R,UAAUmU,YAAc,SAAU1M,GAC5CnH,KAAKwR,2BAA2B,GAAKxR,KAAK2R,aAAahO,OACvD3D,KAAKwR,2BAA6B,KAClCxR,KAAKyR,2BAA2B,GAAKzR,KAAK8R,yBAAyBnO,OACnE3D,KAAKyR,2BAA6B,KAClC,IAAIyD,EAAyB,CAAC,EAAkBrE,aAAc1J,GAC9DnH,KAAK2R,aAAa0B,KAAK6B,GACvBlV,KAAK8R,yBAAyBuB,KAAK6B,EACvC,EAQA7D,EAAc3R,UAAU0S,qBAAuB,WAC3C,IAAKpS,KAAK0R,qBACN1R,KAAK0R,mBAAqB,YAAM1R,KAAKsR,WACjCtR,KAAKuR,aAAe,GAAG,CACvB,IAAI4D,EAASnV,KAAK+O,YAAc/O,KAAKuR,aAAe,GAAM,EAC1D,YAAOvR,KAAK0R,mBAAoByD,EAAOnV,KAAK0R,mBAChD,CAEJ,OAAO1R,KAAK0R,kBAChB,EACOL,CACX,CA/hBkC,CA+hBhC+D,EAAA,GEzjBE,EAAwC,WACxC,IAAInW,EAAgB,SAAUE,EAAGC,GAI7B,OAHAH,EAAgBI,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,CAAG,GAC1E,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,GAAI,EAC7FR,EAAcE,EAAGC,EAC5B,EACA,OAAO,SAAUD,EAAGC,GAChB,GAAiB,mBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIS,UAAU,uBAAyBC,OAAOV,GAAK,iCAE7D,SAASW,IAAOC,KAAKC,YAAcd,CAAG,CADtCF,EAAcE,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOa,OAAOd,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,EACnF,CACH,CAd2C,GA2Q7B,EAvPyB,SAAUK,GAQ9C,SAASiV,EAAmBrG,EAAWsC,EAAWvC,EAAYzO,GAC1D,IAAIM,EAAQR,EAAOR,KAAKI,KAAMgP,EAAWsC,EAAWvC,EAAYzO,IAAeN,KA6E/E,OAxEAY,EAAM0U,mBAAqB,KAK3B1U,EAAMa,OAAS,KAKfb,EAAM2U,sBAAmB/K,EAKzB5J,EAAM4U,cAAWhL,EAKjB5J,EAAM6U,cAAWjL,EAKjB5J,EAAM8U,aAAUlL,EAKhB5J,EAAM+U,cAAWnL,EAKjB5J,EAAMgV,cAAWpL,EAKjB5J,EAAMiV,cAAWrL,EAKjB5J,EAAMkV,qBAAkBtL,EAKxB5J,EAAMmV,eAAYvL,EAKlB5J,EAAMoV,YAASxL,EAKf5J,EAAMqV,YAASzL,EAKf5J,EAAMsV,oBAAiB1L,EAMvB5J,EAAMuV,6BAA0B3L,EACzB5J,CACX,CA8JA,OApPA,EAAUyU,EAAoBjV,GA2F9BiV,EAAmB3V,UAAUiH,UAAY,SAAUyP,EAAejP,GAC9D,GAAKnH,KAAKyB,OAAV,CAGAzB,KAAKuT,cAAc6C,EAAejP,GAClC,IAAInE,EAAkBoT,EAAc5O,qBAChCrE,EAASiT,EAAc3O,YACvB4O,EAAUrW,KAAK4R,YAAYjO,OAC3B2O,EAAQtS,KAAKmS,2BAA2BnP,EAAiBG,GAC7DnD,KAAK2R,aAAa0B,KAAK,CACnB,EAAkBzC,WAClByF,EACA/D,EACAtS,KAAKyB,OAELzB,KAAKwV,SAAWxV,KAAKuV,iBACrBvV,KAAKyV,SAAWzV,KAAKuV,iBACrB/P,KAAK8Q,KAAKtW,KAAK0V,QAAU1V,KAAKuV,kBAC9BvV,KAAK2V,SACL3V,KAAK4V,SAAW5V,KAAKuV,iBACrBvV,KAAK6V,SAAW7V,KAAKuV,iBACrBvV,KAAK8V,gBACL9V,KAAK+V,UACL,CACK/V,KAAKgW,OAAO,GAAKhW,KAAKM,WAAcN,KAAKuV,iBACzCvV,KAAKgW,OAAO,GAAKhW,KAAKM,WAAcN,KAAKuV,kBAE9C/P,KAAK8Q,KAAKtW,KAAKiW,OAASjW,KAAKuV,kBAC7BvV,KAAKkW,eACLlW,KAAKmW,0BAETnW,KAAK8R,yBAAyBuB,KAAK,CAC/B,EAAkBzC,WAClByF,EACA/D,EACAtS,KAAKsV,mBAELtV,KAAKwV,SACLxV,KAAKyV,SACLzV,KAAK0V,QACL1V,KAAK2V,SACL3V,KAAK4V,SACL5V,KAAK6V,SACL7V,KAAK8V,gBACL9V,KAAK+V,UACL/V,KAAKgW,OACLhW,KAAKiW,OACLjW,KAAKkW,eACLlW,KAAKmW,0BAETnW,KAAK6T,YAAY1M,EA/CjB,CAgDJ,EAKAkO,EAAmB3V,UAAUoH,eAAiB,SAAUyP,EAAoBpP,GACxE,GAAKnH,KAAKyB,OAAV,CAGAzB,KAAKuT,cAAcgD,EAAoBpP,GACvC,IAAInE,EAAkBuT,EAAmB/O,qBACrCrE,EAASoT,EAAmB9O,YAC5B4O,EAAUrW,KAAK4R,YAAYjO,OAC3B2O,EAAQtS,KAAKmS,2BAA2BnP,EAAiBG,GAC7DnD,KAAK2R,aAAa0B,KAAK,CACnB,EAAkBzC,WAClByF,EACA/D,EACAtS,KAAKyB,OAELzB,KAAKwV,SAAWxV,KAAKuV,iBACrBvV,KAAKyV,SAAWzV,KAAKuV,iBACrB/P,KAAK8Q,KAAKtW,KAAK0V,QAAU1V,KAAKuV,kBAC9BvV,KAAK2V,SACL3V,KAAK4V,SAAW5V,KAAKuV,iBACrBvV,KAAK6V,SAAW7V,KAAKuV,iBACrBvV,KAAK8V,gBACL9V,KAAK+V,UACL,CACK/V,KAAKgW,OAAO,GAAKhW,KAAKM,WAAcN,KAAKuV,iBACzCvV,KAAKgW,OAAO,GAAKhW,KAAKM,WAAcN,KAAKuV,kBAE9C/P,KAAK8Q,KAAKtW,KAAKiW,OAASjW,KAAKuV,kBAC7BvV,KAAKkW,eACLlW,KAAKmW,0BAETnW,KAAK8R,yBAAyBuB,KAAK,CAC/B,EAAkBzC,WAClByF,EACA/D,EACAtS,KAAKsV,mBAELtV,KAAKwV,SACLxV,KAAKyV,SACLzV,KAAK0V,QACL1V,KAAK2V,SACL3V,KAAK4V,SACL5V,KAAK6V,SACL7V,KAAK8V,gBACL9V,KAAK+V,UACL/V,KAAKgW,OACLhW,KAAKiW,OACLjW,KAAKkW,eACLlW,KAAKmW,0BAETnW,KAAK6T,YAAY1M,EA/CjB,CAgDJ,EAIAkO,EAAmB3V,UAAUoU,OAAS,WAgBlC,OAfA9T,KAAK+T,kCAEL/T,KAAKwV,cAAWhL,EAChBxK,KAAKyV,cAAWjL,EAChBxK,KAAKsV,mBAAqB,KAC1BtV,KAAKyB,OAAS,KACdzB,KAAKuV,sBAAmB/K,EACxBxK,KAAK0V,aAAUlL,EACfxK,KAAKgW,YAASxL,EACdxK,KAAK2V,cAAWnL,EAChBxK,KAAK4V,cAAWpL,EAChBxK,KAAK6V,cAAWrL,EAChBxK,KAAK8V,qBAAkBtL,EACvBxK,KAAK+V,eAAYvL,EACjBxK,KAAKiW,YAASzL,EACPpK,EAAOV,UAAUoU,OAAOlU,KAAKI,KACxC,EAKAqV,EAAmB3V,UAAU2G,cAAgB,SAAUsE,EAAY6L,GAC/D,IAAIC,EAAS9L,EAAWI,YACpB2L,EAAO/L,EAAWE,UAClB8L,EAAShM,EAAWM,YACxBjL,KAAKuV,iBAAmB5K,EAAWiM,cAAc5W,KAAKM,YACtDN,KAAKwV,SAAWiB,EAAO,GACvBzW,KAAKyV,SAAWgB,EAAO,GACvBzW,KAAKsV,mBAAqB3K,EAAWkM,uBACrC7W,KAAKyB,OAASkJ,EAAWrE,SAAStG,KAAKM,YACvCN,KAAK0V,QAAUgB,EAAK,GACpB1W,KAAK2V,SAAWhL,EAAWO,aAC3BlL,KAAK4V,SAAWe,EAAO,GACvB3W,KAAK6V,SAAWc,EAAO,GACvB3W,KAAK8V,gBAAkBnL,EAAWQ,oBAClCnL,KAAK+V,UAAYpL,EAAWS,cAC5BpL,KAAKgW,OAASrL,EAAWU,gBACzBrL,KAAKiW,OAASS,EAAK,GACnB1W,KAAKkW,eAAiBvL,EAAWiD,mBACjC5N,KAAKmW,wBAA0BK,CACnC,EACOnB,CACX,CAtPuC,CAsPrC,GC1QE,EAAwC,WACxC,IAAIpW,EAAgB,SAAUE,EAAGC,GAI7B,OAHAH,EAAgBI,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,CAAG,GAC1E,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,GAAI,EAC7FR,EAAcE,EAAGC,EAC5B,EACA,OAAO,SAAUD,EAAGC,GAChB,GAAiB,mBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIS,UAAU,uBAAyBC,OAAOV,GAAK,iCAE7D,SAASW,IAAOC,KAAKC,YAAcd,CAAG,CADtCF,EAAcE,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOa,OAAOd,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,EACnF,CACH,CAd2C,GA+I7B,EA1H8B,SAAUK,GAQnD,SAAS0W,EAAwB9H,EAAWsC,EAAWvC,EAAYzO,GAC/D,OAAOF,EAAOR,KAAKI,KAAMgP,EAAWsC,EAAWvC,EAAYzO,IAAeN,IAC9E,CA8GA,OAvHA,EAAU8W,EAAyB1W,GAkBnC0W,EAAwBpX,UAAUqX,qBAAuB,SAAU/T,EAAiBC,EAAQC,EAAKC,GAC7F,IAAIkT,EAAUrW,KAAK4R,YAAYjO,OAC3B2O,EAAQtS,KAAKuS,0BAA0BvP,EAAiBC,EAAQC,EAAKC,GAAQ,GAAO,GACpF6T,EAA0B,CAC1B,EAAkBjG,gBAClBsF,EACA/D,GAIJ,OAFAtS,KAAK2R,aAAa0B,KAAK2D,GACvBhX,KAAK8R,yBAAyBuB,KAAK2D,GAC5B9T,CACX,EAKA4T,EAAwBpX,UAAUkH,eAAiB,SAAUqQ,EAAoB9P,GAC7E,IAAI4K,EAAQ/R,KAAK+R,MACb5I,EAAc4I,EAAM5I,YACpBF,EAAY8I,EAAM9I,UACtB,QAAoBuB,IAAhBrB,QAA2CqB,IAAdvB,EAAjC,CAGAjJ,KAAK0U,kBAAkB3C,EAAO/R,KAAKsU,aACnCtU,KAAKuT,cAAc0D,EAAoB9P,GACvCnH,KAAK8R,yBAAyBuB,KAAK,CAC/B,EAAkBpC,iBAClBc,EAAM5I,YACN4I,EAAM9I,UACN8I,EAAMnJ,QACNmJ,EAAM/I,SACN+I,EAAM7I,WACN,IACA,KACDiI,GACH,IAAInO,EAAkBiU,EAAmBzP,qBACrCrE,EAAS8T,EAAmBxP,YAChCzH,KAAK+W,qBAAqB/T,EAAiB,EAAGA,EAAgBW,OAAQR,GACtEnD,KAAK8R,yBAAyBuB,KAAK,GACnCrT,KAAK6T,YAAY1M,EAjBjB,CAkBJ,EAKA2P,EAAwBpX,UAAUqH,oBAAsB,SAAUmQ,EAAyB/P,GACvF,IAAI4K,EAAQ/R,KAAK+R,MACb5I,EAAc4I,EAAM5I,YACpBF,EAAY8I,EAAM9I,UACtB,QAAoBuB,IAAhBrB,QAA2CqB,IAAdvB,EAAjC,CAGAjJ,KAAK0U,kBAAkB3C,EAAO/R,KAAKsU,aACnCtU,KAAKuT,cAAc2D,EAAyB/P,GAC5CnH,KAAK8R,yBAAyBuB,KAAK,CAC/B,EAAkBpC,iBAClBc,EAAM5I,YACN4I,EAAM9I,UACN8I,EAAMnJ,QACNmJ,EAAM/I,SACN+I,EAAM7I,WACN6I,EAAMjJ,SACNiJ,EAAMhJ,gBACPoI,GAKH,IAJA,IAAIlM,EAAOiS,EAAwBrP,UAC/B7E,EAAkBkU,EAAwB1P,qBAC1CrE,EAAS+T,EAAwBzP,YACjCxE,EAAS,EACJQ,EAAI,EAAGC,EAAKuB,EAAKtB,OAAQF,EAAIC,IAAMD,EACxCR,EAASjD,KAAK+W,qBAAqB/T,EAAiBC,EAC7BgC,EAAKxB,GAAKN,GAErCnD,KAAK8R,yBAAyBuB,KAAK,GACnCrT,KAAK6T,YAAY1M,EAtBjB,CAuBJ,EAIA2P,EAAwBpX,UAAUoU,OAAS,WACvC,IAAI/B,EAAQ/R,KAAK+R,MAOjB,OANwBvH,MAApBuH,EAAMoF,YACNpF,EAAMoF,YAAcnX,KAAK4R,YAAYjO,QACrC3D,KAAK2R,aAAa0B,KAAK,GAE3BrT,KAAK+T,kCACL/T,KAAK+R,MAAQ,KACN3R,EAAOV,UAAUoU,OAAOlU,KAAKI,KACxC,EAIA8W,EAAwBpX,UAAU4U,YAAc,SAAUvC,GAC9BvH,MAApBuH,EAAMoF,YACNpF,EAAMoF,YAAcnX,KAAK4R,YAAYjO,SACrC3D,KAAK2R,aAAa0B,KAAK,GACvBtB,EAAMoF,WAAanX,KAAK4R,YAAYjO,QAExCoO,EAAMoF,WAAa,EACnB/W,EAAOV,UAAU4U,YAAY1U,KAAKI,KAAM+R,GACxC/R,KAAK2R,aAAa0B,KAAKlC,EAC3B,EACO2F,CACX,CAzH4C,CAyH1C,G,YC9IE,EAAwC,WACxC,IAAI7X,EAAgB,SAAUE,EAAGC,GAI7B,OAHAH,EAAgBI,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,CAAG,GAC1E,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,GAAI,EAC7FR,EAAcE,EAAGC,EAC5B,EACA,OAAO,SAAUD,EAAGC,GAChB,GAAiB,mBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIS,UAAU,uBAAyBC,OAAOV,GAAK,iCAE7D,SAASW,IAAOC,KAAKC,YAAcd,CAAG,CADtCF,EAAcE,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOa,OAAOd,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,EACnF,CACH,CAd2C,GA6O7B,EAvN2B,SAAUK,GAQhD,SAASgX,EAAqBpI,EAAWsC,EAAWvC,EAAYzO,GAC5D,OAAOF,EAAOR,KAAKI,KAAMgP,EAAWsC,EAAWvC,EAAYzO,IAAeN,IAC9E,CA2MA,OApNA,EAAUoX,EAAsBhX,GAkBhCgX,EAAqB1X,UAAU2X,sBAAwB,SAAUrU,EAAiBC,EAAQgC,EAAM9B,GAC5F,IAAI4O,EAAQ/R,KAAK+R,MACblM,OAA2B2E,IAApBuH,EAAMtJ,UACb3C,OAA+B0E,IAAtBuH,EAAM5I,YACfmO,EAAUrS,EAAKtB,OACnB3D,KAAK2R,aAAa0B,KAAKlC,GACvBnR,KAAK8R,yBAAyBuB,KAAKlC,GACnC,IAAK,IAAI1N,EAAI,EAAGA,EAAI6T,IAAW7T,EAAG,CAC9B,IAAIP,EAAM+B,EAAKxB,GACX4S,EAAUrW,KAAK4R,YAAYjO,OAC3B2O,EAAQtS,KAAKuS,0BAA0BvP,EAAiBC,EAAQC,EAAKC,GAAQ,GAAO2C,GACpFkR,EAA0B,CAC1B,EAAkBjG,gBAClBsF,EACA/D,GAEJtS,KAAK2R,aAAa0B,KAAK2D,GACvBhX,KAAK8R,yBAAyBuB,KAAK2D,GAC/BlR,IAGA9F,KAAK2R,aAAa0B,KAAKjC,GACvBpR,KAAK8R,yBAAyBuB,KAAKjC,IAEvCnO,EAASC,CACb,CASA,OARI2C,IACA7F,KAAK2R,aAAa0B,KAAK,GACvBrT,KAAK8R,yBAAyBuB,KAAK,IAEnCvN,IACA9F,KAAK2R,aAAa0B,KAAK,GACvBrT,KAAK8R,yBAAyBuB,KAAK,IAEhCpQ,CACX,EAKAmU,EAAqB1X,UAAUwF,WAAa,SAAUqS,EAAgBpQ,GAClE,IAAI4K,EAAQ/R,KAAK+R,MACbtJ,EAAYsJ,EAAMtJ,UAClBU,EAAc4I,EAAM5I,YACxB,QAAkBqB,IAAd/B,QAA2C+B,IAAhBrB,EAA/B,CAGAnJ,KAAKwX,uBACLxX,KAAKuT,cAAcgE,EAAgBpQ,QACXqD,IAApBuH,EAAMtJ,WACNzI,KAAK8R,yBAAyBuB,KAAK,CAC/B,EAAkBrC,eAClB,WAGkBxG,IAAtBuH,EAAM5I,aACNnJ,KAAK8R,yBAAyBuB,KAAK,CAC/B,EAAkBpC,iBAClBc,EAAM5I,YACN4I,EAAM9I,UACN8I,EAAMnJ,QACNmJ,EAAM/I,SACN+I,EAAM7I,WACN6I,EAAMjJ,SACNiJ,EAAMhJ,iBAGd,IAAI/F,EAAkBuU,EAAe/P,qBACjCrE,EAASoU,EAAe9P,YACxB4O,EAAUrW,KAAK4R,YAAYjO,OAC/B3D,KAAKuS,0BAA0BvP,EAAiB,EAAGA,EAAgBW,OAAQR,GAAQ,GAAO,GAC1F,IAAIsU,EAAoB,CAAC,EAAkBjH,OAAQ6F,GACnDrW,KAAK2R,aAAa0B,KAAKlC,EAAsBsG,GAC7CzX,KAAK8R,yBAAyBuB,KAAKlC,EAAsBsG,QACjCjN,IAApBuH,EAAMtJ,YACNzI,KAAK2R,aAAa0B,KAAK,GACvBrT,KAAK8R,yBAAyBuB,KAAK,SAEb7I,IAAtBuH,EAAM5I,cACNnJ,KAAK2R,aAAa0B,KAAK,GACvBrT,KAAK8R,yBAAyBuB,KAAK,IAEvCrT,KAAK6T,YAAY1M,EApCjB,CAqCJ,EAKAiQ,EAAqB1X,UAAUmH,YAAc,SAAU6Q,EAAiBvQ,GACpE,IAAI4K,EAAQ/R,KAAK+R,MACbtJ,EAAYsJ,EAAMtJ,UAClBU,EAAc4I,EAAM5I,YACxB,QAAkBqB,IAAd/B,QAA2C+B,IAAhBrB,EAA/B,CAGAnJ,KAAKwX,uBACLxX,KAAKuT,cAAcmE,EAAiBvQ,QACZqD,IAApBuH,EAAMtJ,WACNzI,KAAK8R,yBAAyBuB,KAAK,CAC/B,EAAkBrC,eAClB,WAGkBxG,IAAtBuH,EAAM5I,aACNnJ,KAAK8R,yBAAyBuB,KAAK,CAC/B,EAAkBpC,iBAClBc,EAAM5I,YACN4I,EAAM9I,UACN8I,EAAMnJ,QACNmJ,EAAM/I,SACN+I,EAAM7I,WACN6I,EAAMjJ,SACNiJ,EAAMhJ,iBAGd,IAAI9D,EAAOyS,EAAgB7P,UACvB7E,EAAkB0U,EAAgB1P,6BAClC7E,EAASuU,EAAgBjQ,YAC7BzH,KAAKqX,sBAAsBrU,EAAiB,EACf,EAAQG,GACrCnD,KAAK6T,YAAY1M,EA1BjB,CA2BJ,EAKAiQ,EAAqB1X,UAAUsH,iBAAmB,SAAU2Q,EAAsBxQ,GAC9E,IAAI4K,EAAQ/R,KAAK+R,MACbtJ,EAAYsJ,EAAMtJ,UAClBU,EAAc4I,EAAM5I,YACxB,QAAkBqB,IAAd/B,QAA2C+B,IAAhBrB,EAA/B,CAGAnJ,KAAKwX,uBACLxX,KAAKuT,cAAcoE,EAAsBxQ,QACjBqD,IAApBuH,EAAMtJ,WACNzI,KAAK8R,yBAAyBuB,KAAK,CAC/B,EAAkBrC,eAClB,WAGkBxG,IAAtBuH,EAAM5I,aACNnJ,KAAK8R,yBAAyBuB,KAAK,CAC/B,EAAkBpC,iBAClBc,EAAM5I,YACN4I,EAAM9I,UACN8I,EAAMnJ,QACNmJ,EAAM/I,SACN+I,EAAM7I,WACN6I,EAAMjJ,SACNiJ,EAAMhJ,iBAOd,IAJA,IAAIZ,EAAQwP,EAAqBvP,WAC7BpF,EAAkB2U,EAAqB3P,6BACvC7E,EAASwU,EAAqBlQ,YAC9BxE,EAAS,EACJQ,EAAI,EAAGC,EAAKyE,EAAMxE,OAAQF,EAAIC,IAAMD,EACzCR,EAASjD,KAAKqX,sBAAsBrU,EAAiBC,EAAQkF,EAAM1E,GAAIN,GAE3EnD,KAAK6T,YAAY1M,EA5BjB,CA6BJ,EAIAiQ,EAAqB1X,UAAUoU,OAAS,WACpC9T,KAAK+T,kCACL/T,KAAK+R,MAAQ,KAKb,IAAI/C,EAAYhP,KAAKgP,UACrB,GAAkB,IAAdA,EAEA,IADA,IAAI4C,EAAc5R,KAAK4R,YACdnO,EAAI,EAAGC,EAAKkO,EAAYjO,OAAQF,EAAIC,IAAMD,EAC/CmO,EAAYnO,GAAK,YAAKmO,EAAYnO,GAAIuL,GAG9C,OAAO5O,EAAOV,UAAUoU,OAAOlU,KAAKI,KACxC,EAIAoX,EAAqB1X,UAAU8X,qBAAuB,WAClD,IAAIzF,EAAQ/R,KAAK+R,WAECvH,IADFuH,EAAMtJ,WAElBzI,KAAKwU,gBAAgBzC,EAAO/R,KAAKoU,iBAEX5J,IAAtBuH,EAAM5I,aACNnJ,KAAK0U,kBAAkB3C,EAAO/R,KAAKsU,YAE3C,EACO8C,CACX,CAtNyC,CAsNvC,G,wBChOK,SAASQ,EAAcC,EAAU7U,EAAiBC,EAAQC,EAAKC,GAClE,IAKUM,EAAGqU,EAAKC,EAAKC,EAAIC,EAAIC,EAAKC,EAAKC,EAAKC,EAL1CC,EAAarV,EACbsV,EAAWtV,EACXuV,EAAS,EACTC,EAAI,EACJC,EAAQzV,EAEZ,IAAKQ,EAAIR,EAAQQ,EAAIP,EAAKO,GAAKN,EAAQ,CACnC,IAAIwV,EAAK3V,EAAgBS,GACrBmV,EAAK5V,EAAgBS,EAAI,QAClB+G,IAAPwN,IACAI,EAAMO,EAAKX,EACXK,EAAMO,EAAKX,EACXF,EAAMvS,KAAKC,KAAK2S,EAAMA,EAAMC,EAAMA,QACtB7N,IAAR0N,IACAO,GAAKX,EACEtS,KAAKqT,MAAMX,EAAME,EAAMD,EAAME,IAAQP,EAAMC,IACvCF,IACHY,EAAID,IACJA,EAASC,EACTH,EAAaI,EACbH,EAAW9U,GAEfgV,EAAI,EACJC,EAAQjV,EAAIN,IAGpB2U,EAAMC,EACNG,EAAME,EACND,EAAME,GAEVL,EAAKW,EACLV,EAAKW,CACT,CAEA,OADAH,GAAKV,GACMS,EAAS,CAACE,EAAOjV,GAAK,CAAC6U,EAAYC,EAClD,CChDA,IAAI,EAAwC,WACxC,IAAItZ,EAAgB,SAAUE,EAAGC,GAI7B,OAHAH,EAAgBI,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,CAAG,GAC1E,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,GAAI,EAC7FR,EAAcE,EAAGC,EAC5B,EACA,OAAO,SAAUD,EAAGC,GAChB,GAAiB,mBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIS,UAAU,uBAAyBC,OAAOV,GAAK,iCAE7D,SAASW,IAAOC,KAAKC,YAAcd,CAAG,CADtCF,EAAcE,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOa,OAAOd,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,EACnF,CACH,CAd2C,GA8BjC+Y,EAAa,CACpB,KAAQ,EACR,IAAO,EACP,OAAU,GACV,MAAS,EACT,MAAS,EACT,IAAO,EACP,OAAU,GACV,QAAW,GACX,WAAc,GACd,YAAe,GACf,OAAU,GC9BVC,EAAqB,CACrB,OAAUC,EACV,QAAWC,EACX,MAASC,EACT,WAAcC,EACd,QAAWH,EACX,KD0BmC,SAAU5Y,GAQ7C,SAASgZ,EAAkBpK,EAAWsC,EAAWvC,EAAYzO,GACzD,IAAIM,EAAQR,EAAOR,KAAKI,KAAMgP,EAAWsC,EAAWvC,EAAYzO,IAAeN,KA+E/E,OA1EAY,EAAMyY,QAAU,KAKhBzY,EAAMwB,MAAQ,GAKdxB,EAAMyB,aAAe,EAKrBzB,EAAM0B,aAAe,EAKrB1B,EAAM2B,yBAAsBiI,EAK5B5J,EAAM4B,cAAgB,EAKtB5B,EAAM8B,eAAiB,KAIvB9B,EAAM0Y,WAAa,CAAC,EAKpB1Y,EAAM+B,iBAAmB,KAIzB/B,EAAM2Y,aAAe,CAAC,EAKtB3Y,EAAMgC,WAA6D,CAAG,EAItEhC,EAAM4Y,WAAa,CAAC,EAKpB5Y,EAAM6Y,SAAW,GAKjB7Y,EAAM8Y,SAAW,GAKjB9Y,EAAM+Y,WAAa,GAMnB/Y,EAAMuV,6BAA0B3L,EACzB5J,CACX,CAobA,OA5gBA,EAAUwY,EAAmBhZ,GA4F7BgZ,EAAkB1Z,UAAUoU,OAAS,WACjC,IAAInC,EAAevR,EAAOV,UAAUoU,OAAOlU,KAAKI,MAIhD,OAHA2R,EAAa6H,WAAaxZ,KAAKwZ,WAC/B7H,EAAa2H,WAAatZ,KAAKsZ,WAC/B3H,EAAa4H,aAAevZ,KAAKuZ,aAC1B5H,CACX,EAKAyH,EAAkB1Z,UAAUyO,SAAW,SAAUhJ,EAAUgC,GACvD,IAAIoB,EAAYvI,KAAK0C,eACjBgG,EAAc1I,KAAK2C,iBACnByG,EAAYpJ,KAAK4C,WACrB,GAAmB,KAAf5C,KAAKoC,OAAiBgH,IAAeb,GAAcG,GAAvD,CAGA,IAAIkJ,EAAc5R,KAAK4R,YACnBsC,EAAQtC,EAAYjO,OACpBiW,EAAezU,EAASuB,UACxB1D,EAAkB,KAClBG,EAASgC,EAASsC,YACtB,GAAI2B,EAAUyQ,YAAcC,EAAA,EAAcC,MACrB,cAAhBH,GACmB,mBAAhBA,GACgB,WAAhBA,GACgB,gBAAhBA,EAiDH,CACD,IAAII,EAAiB5Q,EAAU6Q,SAAW,KAAO,GACjD,OAAQL,GACJ,IAAK,QACL,IAAK,aACD5W,EAC8D,EAAWwE,qBACzE,MACJ,IAAK,aACDxE,EAC8D,EAAW2E,kBACzE,MACJ,IAAK,SACD3E,EAC0D,EAAW+C,YACrE,MACJ,IAAK,kBACD/C,EACmE,EAAW+E,mBAC9E5E,EAAS,EACT,MACJ,IAAK,UACDH,EAC2D,EAAWkF,uBACjEkB,EAAU6Q,UACXD,EAAe3G,KAAKrQ,EAAgB,GAAKhD,KAAK+O,YAElD5L,EAAS,EACT,MACJ,IAAK,eACD,IAAI+W,EACwD,EAAW5R,wBACvEtF,EAAkB,GAClB,IAASS,EAAI,EAAGC,EAAKwW,EAAevW,OAAQF,EAAIC,EAAID,GAAK,EAChD2F,EAAU6Q,UACXD,EAAe3G,KAAK6G,EAAezW,EAAI,GAAKzD,KAAK+O,YAErD/L,EAAgBqQ,KAAK6G,EAAezW,GAAIyW,EAAezW,EAAI,IAE/D,GAA+B,IAA3BT,EAAgBW,OAChB,OAEJR,EAAS,EAKjB,IADID,EAAMlD,KAAKmS,2BAA2BnP,EAAiBG,MAC/C+Q,EACR,OAEJ,GAAI8F,IACC9W,EAAMgR,GAAS,GAAMlR,EAAgBW,OAASR,EAAQ,CACvD,IAAIgX,EAAQjG,EAAQ,EACpB8F,EAAiBA,EAAeI,QAAO,SAAUC,EAAG5W,GAChD,IAAI6W,EAAO1I,EAA0B,GAAbuI,EAAQ1W,MAAYT,EAAgBS,EAAIN,IAC5DyO,EAA0B,GAAbuI,EAAQ1W,GAAS,KAAOT,EAAgBS,EAAIN,EAAS,GAItE,OAHKmX,KACCH,EAECG,CACX,GACJ,CACAta,KAAKua,mBACDnR,EAAUoR,gBAAkBpR,EAAUqR,oBACtCza,KAAKkG,mBAAmBkD,EAAUoR,eAAgBpR,EAAUqR,kBACxDrR,EAAUoR,iBACVxa,KAAKwU,gBAAgBxU,KAAK+R,MAAO/R,KAAKoU,YACtCpU,KAAK8R,yBAAyBuB,KAAKrT,KAAKoU,WAAWpU,KAAK+R,SAExD3I,EAAUqR,mBACVza,KAAK0U,kBAAkB1U,KAAK+R,MAAO/R,KAAKsU,aACxCtU,KAAK8R,yBAAyBuB,KAAKrT,KAAKuU,aAAavU,KAAK+R,UAGlE/R,KAAKuT,cAAcpO,EAAUgC,GAE7B,IAAIuT,EAAUtR,EAAUsR,QACxB,GAAIA,GAAW,MACVtR,EAAUjF,MAAM,GAAK,GAAKiF,EAAUjF,MAAM,GAAK,GAAI,CACpD,IAAIwW,EAAKvR,EAAUsR,QAAQ,GACvBE,EAAKxR,EAAUsR,QAAQ,GACvBG,EAAKzR,EAAUsR,QAAQ,GACvBI,EAAK1R,EAAUsR,QAAQ,GACvBtR,EAAUjF,MAAM,GAAK,IACrByW,GAAMA,EACNE,GAAMA,GAEN1R,EAAUjF,MAAM,GAAK,IACrBwW,GAAMA,EACNE,GAAMA,GAEVH,EAAU,CAACC,EAAIC,EAAIC,EAAIC,EAC3B,CAIA,IAAIC,EAAe/a,KAAKM,WACxBN,KAAK2R,aAAa0B,KAAK,CACnB,EAAkBzC,WAClBsD,EACAhR,EACA,KACA8X,IACAA,IACAA,IACA,EACA,EACA,EACAhb,KAAKuC,oBACLvC,KAAKwC,cACL,CAAC,EAAG,GACJwY,SACAxQ,EACAxK,KAAKmW,wBACLuE,GAAW,IACL,IACAA,EAAQjQ,KAAI,SAAUhL,GACpB,OAAOA,EAAIsb,CACf,MACF3R,EAAUoR,iBACVpR,EAAUqR,iBACZza,KAAKoC,MACLpC,KAAKyZ,SACLzZ,KAAK2Z,WACL3Z,KAAK0Z,SACL1Z,KAAKqC,aACLrC,KAAKsC,aACL0X,IAEJ,IAAI7V,EAAQ,EAAI4W,EAChB/a,KAAK8R,yBAAyBuB,KAAK,CAC/B,EAAkBzC,WAClBsD,EACAhR,EACA,KACA8X,IACAA,IACAA,IACA,EACA,EACA,EACAhb,KAAKuC,oBACLvC,KAAKwC,cACL,CAAC2B,EAAOA,GACR6W,SACAxQ,EACAxK,KAAKmW,wBACLuE,IACEtR,EAAUoR,iBACVpR,EAAUqR,iBACZza,KAAKoC,MACLpC,KAAKyZ,SACLzZ,KAAK2Z,WACL3Z,KAAK0Z,SACL1Z,KAAKqC,aACLrC,KAAKsC,aACL0X,IAEJha,KAAK6T,YAAY1M,EACrB,KAhNyC,CACrC,IAAK,YAAWnH,KAAKoS,uBAAwBjN,EAASC,aAClD,OAEJ,IAAIH,OAAO,EAEX,GADAjC,EAAkBmC,EAASqC,qBACP,cAAhBoS,EACA3U,EAAO,CAACjC,EAAgBW,aAEvB,GAAoB,mBAAhBiW,EACL3U,EAAsE,EAAW4C,eAEhF,GAAoB,WAAhB+R,EACL3U,EAA8D,EACzD4C,UACAsM,MAAM,EAAG,QAEb,GAAoB,gBAAhByF,EAAgC,CACrC,IAAIzR,EACwD,EAAWC,WACvEnD,EAAO,GACP,IAAK,IAAIxB,EAAI,EAAGC,EAAKyE,EAAMxE,OAAQF,EAAIC,IAAMD,EACzCwB,EAAKoO,KAAKlL,EAAM1E,GAAG,GAE3B,CACAzD,KAAKuT,cAAcpO,EAAUgC,GAK7B,IAJA,IAAImC,EAAYF,EAAUE,UAEtB2R,EAAa,EACbC,OAAU,EACLC,EAAI,EAAGC,EAAKnW,EAAKtB,OAAQwX,EAAIC,IAAMD,EAAG,CAC3C,GAAiB3Q,MAAblB,EAAwB,CACxB,IAAI+R,EAAQzD,EAAcxO,EAAUyO,SAAU7U,EAAiBiY,EAAYhW,EAAKkW,GAAIhY,GACpF8X,EAAaI,EAAM,GACnBH,EAAUG,EAAM,EACpB,MAEIH,EAAUjW,EAAKkW,GAEnB,IAAK,IAAI1X,EAAIwX,EAAYxX,EAAIyX,EAASzX,GAAKN,EACvCyO,EAAYyB,KAAKrQ,EAAgBS,GAAIT,EAAgBS,EAAI,IAE7D,IAAIP,EAAM0O,EAAYjO,OACtBsX,EAAahW,EAAKkW,GAClBnb,KAAKsb,WAAWpH,EAAOhR,GACvBgR,EAAQhR,CACZ,CACAlD,KAAK6T,YAAY1M,EACrB,CA1DA,CA2NJ,EAIAiS,EAAkB1Z,UAAU6a,gBAAkB,WAC1C,IAAI7R,EAAc1I,KAAK2C,iBACnByG,EAAYpJ,KAAK4C,WACjB2F,EAAYvI,KAAK0C,eACjB6Y,EAAYvb,KAAK2Z,WACjBjR,IACM6S,KAAavb,KAAKuZ,eACpBvZ,KAAKuZ,aAAagC,GAAa,CAC3BpS,YAAaT,EAAYS,YACzBP,QAASF,EAAYE,QACrBG,eAAgBL,EAAYK,eAC5BE,UAAWP,EAAYO,UACvBD,SAAUN,EAAYM,SACtBE,WAAYR,EAAYQ,WACxBJ,SAAUJ,EAAYI,YAIlC,IAAI0S,EAAUxb,KAAKyZ,SACb+B,KAAWxb,KAAKwZ,aAClBxZ,KAAKwZ,WAAWgC,GAAW,CACvBjS,KAAMH,EAAUG,KAChBD,UAAWF,EAAUE,WAAa,IAClCmS,QAASrS,EAAUqS,QACnBjS,aAAcJ,EAAUI,cAAgB,IACxCrF,MAAOiF,EAAUjF,QAGzB,IAAIuX,EAAU1b,KAAK0Z,SACfnR,IACMmT,KAAW1b,KAAKsZ,aAClBtZ,KAAKsZ,WAAWoC,GAAW,CACvBjT,UAAWF,EAAUE,YAIrC,EAMA2Q,EAAkB1Z,UAAU4b,WAAa,SAAUpH,EAAOhR,GACtD,IAAIwF,EAAc1I,KAAK2C,iBACnByG,EAAYpJ,KAAK4C,WACjB2Y,EAAYvb,KAAK2Z,WACjB6B,EAAUxb,KAAKyZ,SACfiC,EAAU1b,KAAK0Z,SACnB1Z,KAAKua,kBACL,IAAIja,EAAaN,KAAKM,WAClBqb,EAAW7C,EAAW1P,EAAUI,cAChCoS,EAAU5b,KAAKsC,aAAehC,EAC9Bub,EAAO7b,KAAKoC,MACZ0Z,EAAcpT,EACXA,EAAYO,UAAYzD,KAAKuW,IAAI3S,EAAUjF,MAAM,IAAO,EACzD,EACNnE,KAAK2R,aAAa0B,KAAK,CACnB,EAAkB1C,WAClBuD,EACAhR,EACAyY,EACAvS,EAAU6Q,SACVyB,EACAtS,EAAUyO,SACVvX,EACAsb,EACAL,EACAO,EAAcxb,EACdub,EACAL,EACA,IAEJxb,KAAK8R,yBAAyBuB,KAAK,CAC/B,EAAkB1C,WAClBuD,EACAhR,EACAyY,EACAvS,EAAU6Q,SACVyB,EACAtS,EAAUyO,SACV,EACA+D,EACAL,EACAO,EACAD,EACAL,EACA,EAAIlb,GAEZ,EAKA8Y,EAAkB1Z,UAAU6G,aAAe,SAAU+E,EAAWkL,GAC5D,IAAIpN,EAAWb,EAAWG,EAC1B,GAAK4C,EAGA,CACD,IAAIC,EAAgBD,EAAUnF,UACzBoF,IAKDhD,EAAYvI,KAAK0C,kBAEb6F,EAA4D,CAAG,EAC/DvI,KAAK0C,eAAiB6F,GAE1BA,EAAUE,UAAY,YAAY8C,EAAc7B,YAAc,OAT9DnB,EAAY,KACZvI,KAAK0C,eAAiB6F,GAU1B,IAAIkD,EAAkBH,EAAUlF,YAChC,GAAKqF,EAIA,EACD/C,EAAc1I,KAAK2C,oBAEf+F,EAAgE,CAAG,EACnE1I,KAAK2C,iBAAmB+F,GAE5B,IAAII,EAAW2C,EAAgB1B,cAC3BhB,EAAiB0C,EAAgBxB,oBACjChB,EAAYwC,EAAgBpB,WAC5BnB,EAAauC,EAAgBlB,gBACjC7B,EAAYE,QAAU6C,EAAgB5B,cAAgB,IACtDnB,EAAYI,SAAWA,EAAWA,EAASqL,QAAU,IACrDzL,EAAYK,oBACWyB,IAAnBzB,EAA+B,IAAwBA,EAC3DL,EAAYM,SAAWyC,EAAgBtB,eAAiB,IACxDzB,EAAYO,eACMuB,IAAdvB,EAA0B,IAAmBA,EACjDP,EAAYQ,gBACOsB,IAAftB,EAA2B,IAAoBA,EACnDR,EAAYS,YAAc,YAAYsC,EAAgB/B,YAAc,IACxE,MAvBIhB,EAAc,KACd1I,KAAK2C,iBAAmB+F,EAuB5BU,EAAYpJ,KAAK4C,WACjB,IAAI2G,EAAO+B,EAAUY,WAAa,IAClC,YAAa3C,GACb,IAAIkD,EAAYnB,EAAUD,gBAC1BjC,EAAU6Q,SAAW3O,EAAU0Q,cAC/B5S,EAAUG,KAAOA,EACjBH,EAAUyO,SAAWvM,EAAU2Q,cAC/B7S,EAAUyQ,UAAYvO,EAAU4Q,eAChC9S,EAAUE,UAAYgC,EAAUsB,eAChCxD,EAAUqS,QAAUnQ,EAAU6Q,aAC9B/S,EAAUI,aACN8B,EAAUwB,mBAAqB,IACnC1D,EAAUoR,eAAiBlP,EAAU8Q,oBACrChT,EAAUqR,iBAAmBnP,EAAU+Q,sBACvCjT,EAAUsR,QAAUpP,EAAUgR,cAAgB,IAC9ClT,EAAUjF,WAAsBqG,IAAdiC,EAA0B,CAAC,EAAG,GAAKA,EACrD,IAAIN,EAAcb,EAAUc,aACxBC,EAAcf,EAAUgB,aACxBC,EAAqBjB,EAAUH,oBAC/BqB,EAAelB,EAAUF,cAC7BpL,KAAKoC,MAAQkJ,EAAU9E,WAAa,GACpCxG,KAAKqC,kBAA+BmI,IAAhB2B,EAA4B,EAAIA,EACpDnM,KAAKsC,kBAA+BkI,IAAhB6B,EAA4B,EAAIA,EACpDrM,KAAKuC,yBACsBiI,IAAvB+B,GAA2CA,EAC/CvM,KAAKwC,mBAAiCgI,IAAjBgC,EAA6B,EAAIA,EACtDxM,KAAK2Z,WAAajR,GACuB,iBAA3BA,EAAYS,YAChBT,EAAYS,YACZ,YAAOT,EAAYS,cACrBT,EAAYE,QACZF,EAAYK,eACZ,IACAL,EAAYO,UACZP,EAAYM,SACZN,EAAYQ,WACZ,IACAR,EAAYI,SAASyT,OACrB,IACF,GACNvc,KAAKyZ,SACDrQ,EAAUG,KACNH,EAAUjF,OACTiF,EAAUE,WAAa,MACvBF,EAAUqS,SAAW,MACrBrS,EAAUI,cAAgB,KACnCxJ,KAAK0Z,SAAWnR,EACoB,iBAAvBA,EAAUE,UACbF,EAAUE,UACV,IAAM,YAAOF,EAAUE,WAC3B,EACV,MA7FIzI,KAAKoC,MAAQ,GA8FjBpC,KAAKmW,wBAA0BK,CACnC,EACO4C,CACX,CA9gBsC,CA8gBpC,IC/da,EAvEmB,WAO9B,SAASoD,EAAaxN,EAAWsC,EAAWvC,EAAYzO,GAKpDN,KAAKyc,WAAazN,EAKlBhP,KAAK0c,WAAapL,EAKlBtR,KAAKc,YAAcR,EAKnBN,KAAK2c,YAAc5N,EAKnB/O,KAAK4c,kBAAoB,CAAC,CAC9B,CAoCA,OAhCAJ,EAAa9c,UAAUoU,OAAS,WAC5B,IAAI+I,EAAsB,CAAC,EAC3B,IAAK,IAAIC,KAAQ9c,KAAK4c,kBAAmB,CACrCC,EAAoBC,GAAQD,EAAoBC,IAAS,CAAC,EAC1D,IAAIC,EAAW/c,KAAK4c,kBAAkBE,GACtC,IAAK,IAAIE,KAAcD,EAAU,CAC7B,IAAIE,EAAqBF,EAASC,GAAYlJ,SAC9C+I,EAAoBC,GAAME,GAAcC,CAC5C,CACJ,CACA,OAAOJ,CACX,EAMAL,EAAa9c,UAAUoO,WAAa,SAAUoP,EAAQC,GAClD,IAAIC,OAAuB5S,IAAX0S,EAAuBA,EAAOG,WAAa,IACvDC,EAAUtd,KAAK4c,kBAAkBQ,QACrB5S,IAAZ8S,IACAA,EAAU,CAAC,EACXtd,KAAK4c,kBAAkBQ,GAAaE,GAExC,IAAIC,EAASD,EAAQH,QACN3S,IAAX+S,IAEAA,EAAS,IAAIC,EADKzE,EAAmBoE,IACZnd,KAAKyc,WAAYzc,KAAK0c,WAAY1c,KAAK2c,YAAa3c,KAAKc,aAClFwc,EAAQH,GAAeI,GAE3B,OAAOA,CACX,EACOf,CACX,CAtEiC,G,4DCE1B,SAASiB,EAAeza,EAAiBC,EAAQC,EAAKC,EAAQ0Y,EAAM6B,EAAQ7F,EAAU1T,EAAOwZ,EAA0BpU,EAAMqU,EAAOpa,GACvI,IAAImV,EAAK3V,EAAgBC,GACrB2V,EAAK5V,EAAgBC,EAAS,GAC9B+U,EAAK,EACLC,EAAK,EACL4F,EAAgB,EAChBC,EAAW,EACf,SAASC,IACL/F,EAAKW,EACLV,EAAKW,EAELD,EAAK3V,EADLC,GAAUE,GAEVyV,EAAK5V,EAAgBC,EAAS,GAC9B6a,GAAYD,EACZA,EAAgBrY,KAAKC,MAAMkT,EAAKX,IAAOW,EAAKX,IAAOY,EAAKX,IAAOW,EAAKX,GACxE,CACA,GACI8F,UACK9a,EAASC,EAAMC,GAAU2a,EAAWD,EAAgBH,GAO7D,IANA,IAAIM,EAAgC,IAAlBH,EAAsB,GAAKH,EAASI,GAAYD,EAC9DI,EAAS,YAAKjG,EAAIW,EAAIqF,GACtBE,EAAS,YAAKjG,EAAIW,EAAIoF,GACtBG,EAAclb,EAASE,EACvBib,EAAcN,EACdO,EAAOX,EAASvZ,EAAQwZ,EAAyBpU,EAAMsS,EAAM+B,GAC1D3a,EAASC,EAAMC,GAAU2a,EAAWD,EAAgBQ,GACvDN,IAEJC,EAAgC,IAAlBH,EAAsB,GAAKQ,EAAOP,GAAYD,EAC5D,IAGI7J,EAHAsK,EAAO,YAAKtG,EAAIW,EAAIqF,GACpBO,EAAO,YAAKtG,EAAIW,EAAIoF,GAGxB,GAAIxa,EAAU,CACV,IAAIgb,EAAO,CAACP,EAAQC,EAAQI,EAAMC,GAClC,YAAOC,EAAM,EAAG,EAAG,EAAGhb,EAAUgb,EAAMA,GACtCxK,EAAUwK,EAAK,GAAKA,EAAK,EAC7B,MAEIxK,EAAUiK,EAASK,EAEvB,IAQIG,EARA7Y,EAAKJ,KAAKI,GACV8Y,EAAS,GACTC,EAAgBR,EAAchb,IAAWF,EAQ7C,GANA4a,EAAgB,EAChBC,EAAWM,EACXzF,EAAK3V,EAHLC,EAASkb,GAITvF,EAAK5V,EAAgBC,EAAS,GAG1B0b,EAAe,CACfZ,IACAU,EAAgBjZ,KAAKoZ,MAAMhG,EAAKX,EAAIU,EAAKX,GACrChE,IACAyK,GAAiBA,EAAgB,GAAK7Y,EAAKA,GAE/C,IAAIhC,GAAK0a,EAAOL,GAAU,EACtBpa,GAAK0a,EAAOL,GAAU,EAE1B,OADAQ,EAAO,GAAK,CAAC9a,EAAGC,GAAIwa,EAAOX,GAAU,EAAGe,EAAe5C,GAChD6C,CACX,CAGA,IAAK,IAAIjb,EAAI,EAAGC,GADhBmY,EAAOA,EAAKgD,QAAQ,MAAO,MACDlb,OAAQF,EAAIC,GAAK,CACvCqa,IACA,IAAIe,EAAQtZ,KAAKoZ,MAAMhG,EAAKX,EAAIU,EAAKX,GAIrC,GAHIhE,IACA8K,GAASA,EAAQ,GAAKlZ,EAAKA,QAET4E,IAAlBiU,EAA6B,CAC7B,IAAIM,EAAQD,EAAQL,EAEpB,GADAM,GAASA,EAAQnZ,GAAM,EAAIA,EAAKmZ,GAASnZ,EAAK,EAAIA,EAAK,EACnDJ,KAAKuW,IAAIgD,GAASlH,EAClB,OAAO,IAEf,CACA4G,EAAgBK,EAGhB,IAFA,IAAIE,EAASvb,EACTwb,EAAa,EACVxb,EAAIC,IAAMD,EAAG,CAChB,IACIyb,EAAM/a,EAAQwZ,EAAyBpU,EAAMsS,EADrC7H,EAAUtQ,EAAKD,EAAI,EAAIA,GAC2Bma,GAC9D,GAAI3a,EAASE,EAASD,GAClB4a,EAAWD,EAAgBH,EAASuB,EAAaC,EAAM,EACvD,MAEJD,GAAcC,CAClB,CACA,GAAIzb,IAAMub,EAAV,CAGA,IAAIG,EAAQnL,EACN6H,EAAKuD,UAAU1b,EAAKsb,EAAQtb,EAAKD,GACjCoY,EAAKuD,UAAUJ,EAAQvb,GAC7Bua,EACsB,IAAlBH,EACM,GACCH,EAASuB,EAAa,EAAInB,GAAYD,EAC7Cja,EAAI,YAAKoU,EAAIW,EAAIqF,GACjBna,EAAI,YAAKoU,EAAIW,EAAIoF,GACrBU,EAAOrL,KAAK,CAACzP,EAAGC,EAAGob,EAAa,EAAGH,EAAOK,IAC1CzB,GAAUuB,CAXV,CAYJ,CACA,OAAOP,CACX,C,gBCnFIW,EAAY,cAEZ,EAAK,GAEL,EAAK,GAEL,EAAK,GAELC,EAAK,GAKT,SAASC,EAAgBC,GACrB,OAAOA,EAAuB,GAAGC,YACrC,CACA,IAAIC,EAAW,IAAIC,OAEnB,IACI7f,OAAO8f,aAAa,MAAW,IAAM9f,OAAO8f,aAAa,MACzD9f,OAAO8f,aAAa,OAAW,IAAM9f,OAAO8f,aAAa,OACzD9f,OAAO8f,aAAa,OAAW,IAAM9f,OAAO8f,aAAa,OACzD9f,OAAO8f,aAAa,OAAW,IAAM9f,OAAO8f,aAAa,OACzD9f,OAAO8f,aAAa,QAAW,IAAM9f,OAAO8f,aAAa,QACzD,KAQJ,SAASC,EAAoBhE,EAAMiE,GAI/B,MAHe,UAAVA,GAA+B,QAAVA,GAAqBJ,EAASK,KAAKlE,KACzDiE,EAAkB,UAAVA,EAAoB,OAAS,SAElChH,EAAWgH,EACtB,CAOA,SAASE,EAAiB/S,EAAKgT,EAAMxc,GAKjC,OAJIA,EAAI,GACJwJ,EAAIoG,KAAK,KAAM,IAEnBpG,EAAIoG,KAAK4M,EAAM,IACRhT,CACX,CACA,IAm2Be,EAn2Be,WAO1B,SAASiT,EAASnR,EAAYzO,EAAY6f,EAAUxO,GAKhD3R,KAAKmgB,SAAWA,EAKhBngB,KAAKM,WAAaA,EAMlBN,KAAK+O,WAAaA,EAKlB/O,KAAKogB,WAKLpgB,KAAK2R,aAAeA,EAAaA,aAKjC3R,KAAK4R,YAAcD,EAAaC,YAKhC5R,KAAKqgB,iBAAmB,CAAC,EAKzBrgB,KAAKsgB,mBAAqB,cAK1BtgB,KAAK8R,yBAA2BH,EAAaG,yBAK7C9R,KAAK6C,kBAAoB,KAKzB7C,KAAKiB,cAAgB,EAIrBjB,KAAKsZ,WAAa3H,EAAa2H,YAAc,CAAC,EAI9CtZ,KAAKuZ,aAAe5H,EAAa4H,cAAgB,CAAC,EAIlDvZ,KAAKwZ,WAAa7H,EAAa6H,YAAc,CAAC,EAK9CxZ,KAAKugB,QAAU,CAAC,EAKhBvgB,KAAKqZ,QAAU,CAAC,CACpB,CA2wBA,OAnwBA6G,EAASxgB,UAAU8gB,YAAc,SAAU3E,EAAML,EAASE,EAASH,GAC/D,IAAIkF,EAAM5E,EAAOL,EAAUE,EAAUH,EACrC,GAAIvb,KAAKqZ,QAAQoH,GACb,OAAOzgB,KAAKqZ,QAAQoH,GAExB,IAAI/X,EAAc6S,EAAYvb,KAAKuZ,aAAagC,GAAa,KACzDhT,EAAYmT,EAAU1b,KAAKsZ,WAAWoC,GAAW,KACjDtS,EAAYpJ,KAAKwZ,WAAWgC,GAC5Blb,EAAaN,KAAKM,WAClB6D,EAAQ,CACRiF,EAAUjF,MAAM,GAAK7D,EACrB8I,EAAUjF,MAAM,GAAK7D,GAErBogB,EAAclhB,MAAMuN,QAAQ8O,GAC5BiE,EAAQ1W,EAAUqS,QAChB3C,EAAW1P,EAAUqS,SACrBoE,EAAoBrgB,MAAMuN,QAAQ8O,GAAQA,EAAK,GAAKA,EAAMzS,EAAUE,WAAa,KACnFwS,EAAcP,GAAa7S,EAAYO,UAAYP,EAAYO,UAAY,EAC3E0X,EAASD,EACP7E,EACAA,EAAK+E,MAAM,MAAM5T,OAAOgT,EAAkB,IAC5Ca,EAAK,YAAkBzX,EAAWuX,GAASxL,EAAQ0L,EAAG1L,MAAO2L,EAASD,EAAGC,OAAQC,EAASF,EAAGE,OAAQC,EAAUH,EAAGG,QAASC,EAAaJ,EAAGI,WAC3IC,EAAc/L,EAAQ2G,EACtBqF,EAAsB,GAEtB9G,GAAK6G,EAAc,GAAK/c,EAAM,GAC9Bid,GAAKN,EAAShF,GAAe3X,EAAM,GAEnCkd,EAAQ,CACRlM,MAAOkF,EAAI,EAAI7U,KAAK8b,MAAMjH,GAAK7U,KAAK8Q,KAAK+D,GACzCyG,OAAQM,EAAI,EAAI5b,KAAK8b,MAAMF,GAAK5b,KAAK8Q,KAAK8K,GAC1CD,oBAAqBA,IAET,GAAZhd,EAAM,IAAuB,GAAZA,EAAM,IACvBgd,EAAoB9N,KAAK,QAASlP,GAElCoX,KACA4F,EAAoB9N,KAAK,cAAe3K,EAAYS,aACpDgY,EAAoB9N,KAAK,YAAayI,GACtCqF,EAAoB9N,KAAK,UAAW3K,EAAYE,SAChDuY,EAAoB9N,KAAK,WAAY3K,EAAYM,UACjDmY,EAAoB9N,KAAK,aAAc3K,EAAYQ,aAErC,IAA0BqY,kCAAoCC,0BAChE9hB,UAAUmJ,cAClBsY,EAAoB9N,KAAK,cAAe,CAAC3K,EAAYI,WACrDqY,EAAoB9N,KAAK,iBAAkB3K,EAAYK,kBAG3D2S,GACAyF,EAAoB9N,KAAK,YAAa9K,EAAUE,WAEpD0Y,EAAoB9N,KAAK,eAAgB,UACzC8N,EAAoB9N,KAAK,YAAa,UAUtC,IATA,IAQIoO,EARAC,EAAY,GAAM5B,EAClBlc,EAAIkc,EAAQoB,EAAcQ,EAAY5F,EACtC6F,EAAqB,GACrBC,EAAmB,GACnBC,EAAa,EACbC,EAAa,EACbC,EAAmB,EACnBC,EAAiB,EAEZve,EAAI,EAAGC,EAAKid,EAAOhd,OAAQF,EAAIC,EAAID,GAAK,EAAG,CAChD,IAAIwe,EAAStB,EAAOld,GACpB,GAAe,OAAXwe,EAAJ,CAOA,IAAI1Y,EAAOoX,EAAOld,EAAI,IAAM2F,EAAUG,KAClCA,IAASkY,IACLlG,GACAoG,EAAmBtO,KAAK,OAAQ9J,GAEhCmS,GACAkG,EAAiBvO,KAAK,OAAQ9J,GAElCkY,EAAelY,GAEnBsY,EAAarc,KAAK0c,IAAIL,EAAYb,EAAQe,IAC1C,IAAII,EAAiB,CACjBF,EACAre,EACI8d,EAAYX,EAAOgB,GACnBjC,GAASiB,EAAOgB,GAAoBd,EAAWe,IACnD,IAAOlG,EAAc+F,GAAcC,GAEvCle,GAAKmd,EAAOgB,GACRxG,GACAoG,EAAmBtO,KAAK,aAAc8O,GAEtCzG,GACAkG,EAAiBvO,KAAK,WAAY8O,KAEpCJ,CA1BF,MALID,GAAcD,EACdA,EAAa,EACbje,EAAIkc,EAAQoB,EAAcQ,EAAY5F,IACpCkG,CA6BV,CAIA,OAHAxiB,MAAME,UAAU2T,KAAKpP,MAAMkd,EAAqBQ,GAChDniB,MAAME,UAAU2T,KAAKpP,MAAMkd,EAAqBS,GAChD5hB,KAAKqZ,QAAQoH,GAAOY,EACbA,CACX,EAUAnB,EAASxgB,UAAU0iB,sBAAwB,SAAU/hB,EAASua,EAAIC,EAAIC,EAAIwE,EAAIjL,EAAiBgO,GAC3FhiB,EAAQqF,YACRrF,EAAQwE,OAAOZ,MAAM5D,EAASua,GAC9Bva,EAAQyE,OAAOb,MAAM5D,EAASwa,GAC9Bxa,EAAQyE,OAAOb,MAAM5D,EAASya,GAC9Bza,EAAQyE,OAAOb,MAAM5D,EAASif,GAC9Bjf,EAAQyE,OAAOb,MAAM5D,EAASua,GAC1BvG,IACArU,KAAKogB,WAAqC/L,EAAgB,GAC1DrU,KAAKsiB,MAAMjiB,IAEXgiB,IACAriB,KAAKuiB,gBAAgBliB,EACG,GACxBA,EAAQyF,SAEhB,EAqBAoa,EAASxgB,UAAU8iB,iCAAmC,SAAUC,EAAYC,EAAa5e,EAASC,EAASoR,EAAO2L,EAAQ6B,EAASC,EAASC,EAASC,EAAStf,EAAUW,EAAO4e,EAAarI,EAASsI,EAAY7b,GAG7M,IAkBI3G,EAlBAoD,EAAIE,GAFR6e,GAAWxe,EAAM,IAGbN,EAAIE,GAFR6e,GAAWze,EAAM,IAGbkW,EAAIlF,EAAQ0N,EAAUJ,EAAaA,EAAaI,EAAU1N,EAC1DiM,EAAIN,EAASgC,EAAUJ,EAAcA,EAAcI,EAAUhC,EAC7DmC,EAAOvI,EAAQ,GAAKL,EAAIlW,EAAM,GAAKuW,EAAQ,GAC3CwI,EAAOxI,EAAQ,GAAK0G,EAAIjd,EAAM,GAAKuW,EAAQ,GAC3CyI,EAAOvf,EAAI8W,EAAQ,GACnB0I,EAAOvf,EAAI6W,EAAQ,GA2BvB,OA1BIsI,GAA2B,IAAbxf,KACd,EAAG,GAAK2f,EACR7D,EAAG,GAAK6D,EACR,EAAG,GAAKC,EACR,EAAG,GAAKA,EACR,EAAG,GAAKD,EAAOF,EACf,EAAG,GAAK,EAAG,GACX,EAAG,GAAKG,EAAOF,EACf5D,EAAG,GAAK,EAAG,IAGE,IAAb9b,GACAhD,EAAY,YAAiB,cAAmBsD,EAASC,EAAS,EAAG,EAAGP,GAAWM,GAAUC,GAC7F,YAAevD,EAAW,GAC1B,YAAeA,EAAW,GAC1B,YAAeA,EAAW,GAC1B,YAAeA,EAAW8e,GAC1B,YAAe9Z,KAAK6d,IAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI/D,EAAG,IAAK9Z,KAAK6d,IAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI/D,EAAG,IAAK9Z,KAAK0c,IAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI5C,EAAG,IAAK9Z,KAAK0c,IAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI5C,EAAG,IAAKD,IAGvK,YAAe7Z,KAAK6d,IAAIF,EAAMA,EAAOF,GAAOzd,KAAK6d,IAAID,EAAMA,EAAOF,GAAO1d,KAAK0c,IAAIiB,EAAMA,EAAOF,GAAOzd,KAAK0c,IAAIkB,EAAMA,EAAOF,GAAO7D,GAEnI0D,IACAnf,EAAI4B,KAAK8d,MAAM1f,GACfC,EAAI2B,KAAK8d,MAAMzf,IAEZ,CACH0f,WAAY3f,EACZ4f,WAAY3f,EACZ4f,WAAYpJ,EACZqJ,WAAYtC,EACZyB,QAASA,EACTC,QAASA,EACTrD,aAAc,CACVkE,KAAMtE,EAAU,GAChBuE,KAAMvE,EAAU,GAChBwE,KAAMxE,EAAU,GAChByE,KAAMzE,EAAU,GAChB0E,MAAO5c,GAEX6c,gBAAiBxjB,EACjB2D,MAAOA,EAEf,EAYA+b,EAASxgB,UAAUukB,oBAAsB,SAAU5jB,EAAS6jB,EAAcC,EAAcC,EAAYC,EAAShQ,EAAiBgO,GAC1H,IAAIW,KAAgB3O,IAAmBgO,GACnCiC,EAAMF,EAAW3E,aACjB8E,EAASlkB,EAAQkkB,OACjBC,EAAgBnC,EACbA,EAAkB,GAAK+B,EAAWjgB,MAAM,GAAM,EAC/C,EAaN,OAZiBmgB,EAAIX,KAAOa,GAAiBD,EAAOpP,MAAQ+O,GACxDI,EAAIT,KAAOW,GAAiB,GAC5BF,EAAIV,KAAOY,GAAiBD,EAAOzD,OAASoD,GAC5CI,EAAIR,KAAOU,GAAiB,IAExBxB,GACAhjB,KAAKoiB,sBAAsB/hB,EAAS,EAAI,EAAI,EAAIif,EACxB,EACA,GAE5B,YAAiBjf,EAAS+jB,EAAWJ,gBAAiBK,EAASF,EAAcC,EAAWvB,QAASuB,EAAWtB,QAASsB,EAAWX,WAAYW,EAAWV,WAAYU,EAAWb,WAAYa,EAAWZ,WAAYY,EAAWjgB,SAEzN,CACX,EAKA+b,EAASxgB,UAAU4iB,MAAQ,SAAUjiB,GACjC,GAAIL,KAAKogB,WAAY,CACjB,IAAIqE,EAAW,YAAezkB,KAAKsgB,mBAAoB,CAAC,EAAG,IACvDoE,EAAa,IAAM1kB,KAAKM,WAC5BD,EAAQskB,OACRtkB,EAAQ6D,UAAUugB,EAAS,GAAKC,EAAYD,EAAS,GAAKC,GAC1DrkB,EAAQukB,OAAO5kB,KAAKiB,cACxB,CACAZ,EAAQwF,OACJ7F,KAAKogB,YACL/f,EAAQwkB,SAEhB,EAMA3E,EAASxgB,UAAU6iB,gBAAkB,SAAUliB,EAAS4T,GACpD5T,EAAqB,YACsC4T,EAAY,GACvE5T,EAAQ4I,UAAmCgL,EAAY,GACvD5T,EAAQuI,QAAwCqL,EAAY,GAC5D5T,EAAQ2I,SAA0CiL,EAAY,GAC9D5T,EAAQ6I,WAAoC+K,EAAY,GACpD5T,EAAQwI,cACRxI,EAAQ0I,eAAwCkL,EAAY,GAC5D5T,EAAQwI,YAA0CoL,EAAY,IAEtE,EASAiM,EAASxgB,UAAUolB,6BAA+B,SAAUjJ,EAAML,EAASD,EAAWG,GAClF,IAAItS,EAAYpJ,KAAKwZ,WAAWgC,GAC5B6F,EAAQrhB,KAAKwgB,YAAY3E,EAAML,EAASE,EAASH,GACjD7S,EAAc1I,KAAKuZ,aAAagC,GAChCjb,EAAaN,KAAKM,WAClBwf,EAAQD,EAAoBrgB,MAAMuN,QAAQ8O,GAAQA,EAAK,GAAKA,EAAMzS,EAAUE,WAAa,KACzFqS,EAAW7C,EAAW1P,EAAUI,cAAgB,KAChDsS,EAAcpT,GAAeA,EAAYO,UAAYP,EAAYO,UAAY,EAMjF,MAAO,CACHoY,MAAOA,EACPsB,QALU7C,GADFuB,EAAMlM,MAAQ7U,EAAa,EAAI8I,EAAUjF,MAAM,IAC7B,GAAK,GAAM2b,GAAShE,EAM9C8G,QALWjH,EAAW0F,EAAMP,OAAUxgB,EACtC,GAAK,GAAMqb,GAAYG,EAM/B,EAeAoE,EAASxgB,UAAUqlB,SAAW,SAAU1kB,EAAS6jB,EAAc1jB,EAAWmR,EAAcoR,EAAaiC,EAAqBC,EAAeC,GAErI,IAAI9hB,EACApD,KAAK6C,mBAAqB,YAAOrC,EAAWR,KAAKsgB,oBACjDld,EAAmBpD,KAAK6C,mBAGnB7C,KAAK6C,oBACN7C,KAAK6C,kBAAoB,IAE7BO,EAAmB,YAAYpD,KAAK4R,YAAa,EAAG5R,KAAK4R,YAAYjO,OAAQ,EAAGnD,EAAWR,KAAK6C,mBAChG,YAAsB7C,KAAKsgB,mBAAoB9f,IAyBnD,IAvBA,IAGI2kB,EACAxC,EAASC,EAASwC,EAAOC,EAAOC,EAAQC,EAAQC,EAAO3J,EAAML,EAASD,EAAWG,EAiB3BvU,EACtDvD,EAAGC,EAAG4hB,EAtBNhiB,EAAI,EACJC,EAAKiO,EAAahO,OAClBxE,EAAI,EAGJumB,EAAc,EACdC,EAAgB,EAChBC,EAAsB,KACtBC,EAAwB,KACxBC,EAAkB9lB,KAAKqgB,iBACvB5f,EAAeT,KAAKiB,cACpB8kB,EAA4BvgB,KAAK8d,MAAgD,KAA1C9d,KAAKoZ,OAAOpe,EAAU,GAAIA,EAAU,KAAc,KACzFuR,EAAuD,CACvD1R,QAASA,EACTC,WAAYN,KAAKM,WACjByO,WAAY/O,KAAK+O,WACjBvL,SAAU/C,GAIVulB,EAAYhmB,KAAK2R,cAAgBA,GAAgB3R,KAAKmgB,SAAW,EAAI,IAGlE1c,EAAIC,GAAI,CACX,IAAIuQ,EAActC,EAAalO,GAE/B,OAD8DwQ,EAAY,IAEtE,KAAK,EAAkB3D,eACnBnJ,EAAiE8M,EAAY,GAC7EwR,EAAkBxR,EAAY,GACzB9M,EAAQ8e,mBAGczb,IAAlBya,GACJ,YAAWA,EAAeQ,EAAgBrgB,eAIzC3B,EAHFA,EAA2BwQ,EAAY,GAAM,EAJ7CxQ,EAA2BwQ,EAAY,GAS3C,MACJ,KAAK,EAAkB1D,WACfmV,EAAcM,IACdhmB,KAAKsiB,MAAMjiB,GACXqlB,EAAc,GAEdC,EAAgBK,IAChB3lB,EAAQyF,SACR6f,EAAgB,GAEfD,GAAgBC,IACjBtlB,EAAQqF,YACR0f,EAAQpK,IACRqK,EAAQrK,OAEVvX,EACF,MACJ,KAAK,EAAkB+M,OAEnB,IAAIwH,EAAK5U,EADTjE,EAA2B8U,EAAY,IAEnCgE,EAAK7U,EAAiBjE,EAAI,GAG1BkG,EAFKjC,EAAiBjE,EAAI,GAEhB6Y,EACV1S,EAFKlC,EAAiBjE,EAAI,GAEhB8Y,EACViO,EAAI1gB,KAAKC,KAAKJ,EAAKA,EAAKC,EAAKA,GACjCjF,EAAQwE,OAAOmT,EAAKkO,EAAGjO,GACvB5X,EAAQsF,IAAIqS,EAAIC,EAAIiO,EAAG,EAAG,EAAI1gB,KAAKI,IAAI,KACrCnC,EACF,MACJ,KAAK,EAAkBgN,WACnBpQ,EAAQ0E,cACNtB,EACF,MACJ,KAAK,EAAkBiN,OACnBvR,EAA2B8U,EAAY,GACvCkR,EAAKlR,EAAY,GACjB,IAAI9O,EAC2D8O,EAAY,GACvEnE,GAAWmE,EAAY,GACvBkS,GAA2B,GAAtBlS,EAAYtQ,OAAcsQ,EAAY,QAAKzJ,EACpDuH,EAAM5M,SAAWA,EACjB4M,EAAM5K,QAAUA,EACV1D,KAAKqiB,IACPA,EAAgBriB,GAAK,IAEzB,IAAI2iB,GAASN,EAAgBriB,GACzB0iB,GACAA,GAAG/iB,EAAkBjE,EAAGgmB,EAAI,EAAGiB,KAG/BA,GAAO,GAAKhjB,EAAiBjE,GAC7BinB,GAAO,GAAKhjB,EAAiBjE,EAAI,GACjCinB,GAAOziB,OAAS,GAEpBmM,GAASsW,GAAQrU,KACftO,EACF,MACJ,KAAK,EAAkBmN,WACnBzR,EAA2B8U,EAAY,GACvCkR,EAA4BlR,EAAY,GACxCuR,EACwEvR,EAAY,GAEpF0O,EAAiC1O,EAAY,GAC7C2O,EAAiC3O,EAAY,GAC7C,IAAI6M,GAAgC7M,EAAY,GAC5CoQ,GAAiCpQ,EAAY,GAC7C4O,GAAiC5O,EAAY,GAC7C6O,GAAiC7O,EAAY,GAC7CoS,GAAyCpS,EAAY,IACrDzQ,GAAkCyQ,EAAY,IAC9C9P,GAAqD8P,EAAY,IACjEkB,GAA+BlB,EAAY,IAC3CtG,GACoDsG,EAAY,IAChE1G,GAC0D0G,EAAY,IAC1E,IAAKuR,GAASvR,EAAYtQ,QAAU,GAAI,CAEpCkY,EAA8B5H,EAAY,IAC1CuH,EAAiCvH,EAAY,IAC7CsH,EAAmCtH,EAAY,IAC/CyH,EAAiCzH,EAAY,IAC7C,IAAIqS,GAAkBtmB,KAAK8kB,6BAA6BjJ,EAAML,EAASD,EAAWG,GAClF8J,EAAQc,GAAgBjF,MACxBpN,EAAY,GAAKuR,EACjB,IAAIrZ,GAAqC8H,EAAY,IACrD0O,GAAW2D,GAAgB3D,QAAUxW,IAAenM,KAAKM,WACzD2T,EAAY,GAAK0O,EACjB,IAAItW,GAAqC4H,EAAY,IACrD2O,GAAW0D,GAAgB1D,QAAUvW,IAAerM,KAAKM,WACzD2T,EAAY,GAAK2O,EACjB9B,GAAS0E,EAAM1E,OACf7M,EAAY,GAAK6M,GACjB3L,GAAQqQ,EAAMrQ,MACdlB,EAAY,IAAMkB,EACtB,CACA,IAAI6E,QAAiB,EACjB/F,EAAYtQ,OAAS,KACrBqW,GAAwC/F,EAAY,KAExD,IAAIyG,QAAU,EAAQF,QAAiB,EAAQC,QAAmB,EAC9DxG,EAAYtQ,OAAS,IACrB+W,GAAwCzG,EAAY,IACpDuG,GAAyCvG,EAAY,IACrDwG,GAA2CxG,EAAY,MAGvDyG,GAAU,IACVF,IAAiB,EACjBC,IAAmB,GAEnB4L,IAAkBN,EAElBviB,IAAY/C,EAEN4lB,IAAmBN,IAEzBviB,IAAY/C,GAGhB,IADA,IAAI8lB,GAAa,EACVpnB,EAAIgmB,EAAIhmB,GAAK,EAChB,KAAI6a,IACAA,GAAeuM,MAAgBpR,GAAQnV,KAAKM,YADhD,CAIA,IAEIkmB,GAAO,CACPnmB,EACA6jB,EACAsB,EALApB,GAAapkB,KAAKwiB,iCAAiCgD,EAAMrQ,MAAOqQ,EAAM1E,OAAQ1d,EAAiBjE,GAAIiE,EAAiBjE,EAAI,GAAIgW,GAAO2L,GAAQ6B,EAASC,EAASC,GAASC,GAAStf,GAAUW,GAAO4e,EAAarI,GAASF,IAAkBC,GAAkBtT,GAO1Pkd,GACA7J,GAC8B,EACxB,KACNC,GAC8B,EACxB,MAEV,GAAIyK,EAAmB,CACnB,GAAsB,SAAlBvX,GAEA,SAEC,GAAsB,aAAlBA,GAA8B,CAEnCuX,EAAkBuB,OAAOrC,GAAW3E,cACpC,QACJ,CAEI,IAAIiH,QAAY,EACZC,QAAoB,EACxB,GAAIpZ,GAAwB,CACxB,IAAIqZ,GAAQzB,EAAKhmB,EACjB,IAAKoO,GAAuBqZ,IAAQ,CAEhCrZ,GAAuBqZ,IAASJ,GAEhC,QACJ,CAIA,GAHAE,GAAYnZ,GAAuBqZ,WAC5BrZ,GAAuBqZ,IAC9BD,GAAoBpH,EAAgBmH,IAChCxB,EAAkB2B,SAASF,IAC3B,QAER,CACA,GAAIzB,EAAkB2B,SAASzC,GAAW3E,cACtC,SAEAiH,KAEAxB,EAAkBuB,OAAOE,IAEzB3mB,KAAKikB,oBAAoBhgB,MAAMjE,KAAM0mB,KAEzCxB,EAAkBuB,OAAOrC,GAAW3E,aAE5C,CACAzf,KAAKikB,oBAAoBhgB,MAAMjE,KAAMwmB,GAxDrC,GA0DF/iB,EACF,MACJ,KAAK,EAAkBkN,WACnB,IAAIuD,GAA+BD,EAAY,GAC3C/Q,GAA6B+Q,EAAY,GACzC0H,GAAkC1H,EAAY,GAC9CgG,GAAkChG,EAAY,GAClDyH,EAAiCzH,EAAY,GAC7C,IAAI4D,GAAkC5D,EAAY,GAC9C6S,GAA2C7S,EAAY,GACvD2H,GAAiC3H,EAAY,GACjDsH,EAAmCtH,EAAY,GAC/C,IAAI6H,GAAqC7H,EAAY,IACrD4H,EAA8B5H,EAAY,IAC1CuH,EAAiCvH,EAAY,IAC7C,IAAI8S,GAAkB,CACK9S,EAAY,IACZA,EAAY,KAEnC7K,GAAYpJ,KAAKwZ,WAAWgC,GAC5BjS,GAAOH,GAAUG,KACjBkD,GAAY,CACZrD,GAAUjF,MAAM,GAAK2iB,GACrB1d,GAAUjF,MAAM,GAAK2iB,IAErBE,QAAe,EACfzd,MAAQvJ,KAAKugB,QACbyG,GAAehnB,KAAKugB,QAAQhX,KAG5Byd,GAAe,CAAC,EAChBhnB,KAAKugB,QAAQhX,IAAQyd,IAEzB,IAAIC,GAAa,YAAiB7jB,EAAkB8Q,GAAOhR,GAAK,GAC5DgkB,GAAa1hB,KAAKuW,IAAItP,GAAU,IAChC,YAAyBlD,GAAMsS,EAAMmL,IACzC,GAAI/M,IAAYiN,IAAcD,GAAY,CACtC,IAAI3d,GAAYtJ,KAAKwZ,WAAWgC,GAASlS,UAErC6d,GAAQ1J,EAAera,EAAkB8Q,GAAOhR,GAAK,EAAG2Y,GAD9CoL,GAAaC,IAAcpO,EAAWxP,IACsBuO,GAAUrS,KAAKuW,IAAItP,GAAU,IAAK,IAA0BlD,GAAMyd,GAAcjB,EAA4B,EAAI/lB,KAAKiB,eAC/LmmB,EAAW,GAAID,GAAO,CAElB,IAAI3H,GAAyB,GACzB6H,QAAI,EAAQC,QAAK,EAAQnI,QAAQ,EAAQkC,QAAQ,EAAQkG,QAAO,EACpE,GAAIhM,EACA,IAAK8L,GAAI,EAAGC,GAAKH,GAAMxjB,OAAQ0jB,GAAIC,KAAMD,GAAG,CAExClI,IADAoI,GAAOJ,GAAME,KACuB,GACpChG,GAAQrhB,KAAKwgB,YAAYrB,GAAO3D,EAAS,GAAID,GAC7CoH,EAC2B4E,GAAK,IACvB9a,GAAU,GAAK,GAAKqP,GAAcA,IAC3C8G,EACIjH,GAAW0F,GAAMP,OACO,GAAlB,GAAMnF,IAAgBG,GAAcrP,GAAU,GAC5CA,GAAU,GACdmP,GACR,IAAIwI,GAAapkB,KAAKwiB,iCAAiCnB,GAAMlM,MAAOkM,GAAMP,OAAQyG,GAAK,GAAIA,GAAK,GAAIlG,GAAMlM,MAAOkM,GAAMP,OAAQ6B,EAASC,EAAS,EAAG,EAAG2E,GAAK,GAAIR,IAAiB,EAAO,KAAgB,EAAO5f,GAC/M,GAAI+d,GACAA,EAAkB2B,SAASzC,GAAW3E,cACtC,MAAM2H,EAEV5H,GAAuBnM,KAAK,CACxBhT,EACA6jB,EACA7C,GACA+C,GACA,EACA,KACA,MAER,CAEJ,GAAI1I,EACA,IAAK2L,GAAI,EAAGC,GAAKH,GAAMxjB,OAAQ0jB,GAAIC,KAAMD,GAAG,CAExClI,IADAoI,GAAOJ,GAAME,KACuB,GACpChG,GAAQrhB,KAAKwgB,YAAYrB,GAAO3D,EAASE,EAAS,IAClDiH,EAAiC4E,GAAK,GACtC3E,EAAUjH,GAAW0F,GAAMP,OAASlF,GAChCwI,GAAapkB,KAAKwiB,iCAAiCnB,GAAMlM,MAAOkM,GAAMP,OAAQyG,GAAK,GAAIA,GAAK,GAAIlG,GAAMlM,MAAOkM,GAAMP,OAAQ6B,EAASC,EAAS,EAAG,EAAG2E,GAAK,GAAIR,IAAiB,EAAO,KAAgB,EAAO5f,GAC/M,GAAI+d,GACAA,EAAkB2B,SAASzC,GAAW3E,cACtC,MAAM2H,EAEV5H,GAAuBnM,KAAK,CACxBhT,EACA6jB,EACA7C,GACA+C,GACA,EACA,KACA,MAER,CAEAc,GACAA,EAAkBvV,KAAK6P,GAAuB/U,IAAI8U,IAEtD,IAAK,IAAIiI,GAAM,EAAGC,GAAOjI,GAAuB7b,OAAQ6jB,GAAMC,KAAQD,GAClExnB,KAAKikB,oBAAoBhgB,MAAMjE,KAAMwf,GAAuBgI,IAEpE,CACJ,GACE/jB,EACF,MACJ,KAAK,EAAkBoN,aACnB,QAA4BrG,IAAxBwa,EAAmC,CAEnC,IAAItG,GAASsG,EADb7d,EAAiE8M,EAAY,GACnCwR,GAC1C,GAAI/G,GACA,OAAOA,EAEf,GACEjb,EACF,MACJ,KAAK,EAAkBqN,KACfkV,EACAN,IAGA1lB,KAAKsiB,MAAMjiB,KAEboD,EACF,MACJ,KAAK,EAAkBsN,gBAYnB,IAXA5R,EAA2B8U,EAAY,GACvCkR,EAA4BlR,EAAY,GACxCrQ,EAAIR,EAAiBjE,GAGrBomB,GAFA1hB,EAAIT,EAAiBjE,EAAI,IAEX,GAAO,GADrBmmB,EAAU1hB,EAAI,GAAO,KAENwhB,GAASG,IAAWF,IAC/BhlB,EAAQwE,OAAOjB,EAAGC,GAClBuhB,EAAQE,EACRD,EAAQE,GAEPpmB,GAAK,EAAGA,EAAIgmB,EAAIhmB,GAAK,EAGtBmmB,GAFA1hB,EAAIR,EAAiBjE,IAEP,GAAO,EACrBomB,GAFA1hB,EAAIT,EAAiBjE,EAAI,IAEX,GAAO,EACjBA,GAAKgmB,EAAK,GAAKG,IAAWF,GAASG,IAAWF,IAC9ChlB,EAAQyE,OAAOlB,EAAGC,GAClBuhB,EAAQE,EACRD,EAAQE,KAGd9hB,EACF,MACJ,KAAK,EAAkBuN,eACnB4U,EAAsB3R,EACtBjU,KAAKogB,WAAanM,EAAY,GAC1ByR,IACA1lB,KAAKsiB,MAAMjiB,GACXqlB,EAAc,EACVC,IACAtlB,EAAQyF,SACR6f,EAAgB,IAGxBtlB,EAAQoI,UACmDwL,EAAY,KACrExQ,EACF,MACJ,KAAK,EAAkBwN,iBACnB4U,EAAwB5R,EACpB0R,IACAtlB,EAAQyF,SACR6f,EAAgB,GAEpB3lB,KAAKuiB,gBAAgBliB,EAAiC,KACpDoD,EACF,MACJ,KAAK,EAAkByN,OACf8U,EACAL,IAGAtlB,EAAQyF,WAEVrC,EACF,MACJ,UACMA,EAGd,CACIiiB,GACA1lB,KAAKsiB,MAAMjiB,GAEXslB,GACAtlB,EAAQyF,QAGhB,EASAoa,EAASxgB,UAAUgoB,QAAU,SAAUrnB,EAAS6jB,EAAc1jB,EAAWC,EAAcsiB,EAAamC,GAChGllB,KAAKiB,cAAgBR,EACrBT,KAAK+kB,SAAS1kB,EAAS6jB,EAAc1jB,EAAWR,KAAK2R,aAAcoR,OAAavY,OAAWA,EAAW0a,EAC1G,EAWAhF,EAASxgB,UAAUioB,oBAAsB,SAAUtnB,EAASG,EAAWC,EAAcukB,EAAqBC,GAEtG,OADAjlB,KAAKiB,cAAgBR,EACdT,KAAK+kB,SAAS1kB,EAAS,EAAGG,EAAWR,KAAK8R,0BAA0B,EAAMkT,EAAqBC,EAC1G,EACO/E,CACX,CAl2B6B,G,wBChFzB0H,EAAQ,CAAC,UAAW,SAAU,aAAc,QAAS,OAAQ,WAC7D,GAA+B,WAa/B,SAASC,EAAcvW,EAAWvC,EAAYzO,EAAY6f,EAAU2H,EAAiBC,GAKjF/nB,KAAK0c,WAAapL,EAKlBtR,KAAKgoB,UAAY7H,EAKjBngB,KAAKc,YAAcR,EAKnBN,KAAK2c,YAAc5N,EAKnB/O,KAAKioB,cAAgBF,EAKrB/nB,KAAKkoB,mBAAqB,CAAC,EAK3BloB,KAAKmoB,qBAAuB,KAK5BnoB,KAAKooB,uBAAyB,cAC9BpoB,KAAKqoB,iBAAiBP,EAC1B,CAmMA,OA9LAD,EAAcnoB,UAAU4oB,KAAO,SAAUjoB,EAASG,GAC9C,IAAI+nB,EAAiBvoB,KAAKwoB,cAAchoB,GACxCH,EAAQqF,YACRrF,EAAQwE,OAAO0jB,EAAe,GAAIA,EAAe,IACjDloB,EAAQyE,OAAOyjB,EAAe,GAAIA,EAAe,IACjDloB,EAAQyE,OAAOyjB,EAAe,GAAIA,EAAe,IACjDloB,EAAQyE,OAAOyjB,EAAe,GAAIA,EAAe,IACjDloB,EAAQioB,MACZ,EAMAT,EAAcnoB,UAAU2oB,iBAAmB,SAAUP,GACjD,IAAK,IAAI5K,KAAU4K,EAAiB,CAChC,IAAIW,EAAYzoB,KAAKkoB,mBAAmBhL,QACtB1S,IAAdie,IACAA,EAAY,CAAC,EACbzoB,KAAKkoB,mBAAmBhL,GAAUuL,GAEtC,IAAIC,EAAsBZ,EAAgB5K,GAC1C,IAAK,IAAIC,KAAeuL,EAAqB,CACzC,IAAI/W,EAAe+W,EAAoBvL,GACvCsL,EAAUtL,GAAe,IAAI,EAASnd,KAAK2c,YAAa3c,KAAKc,YAAad,KAAKgoB,UAAWrW,EAC9F,CACJ,CACJ,EAKAkW,EAAcnoB,UAAUipB,aAAe,SAAUF,GAC7C,IAAK,IAAIvL,KAAUld,KAAKkoB,mBAEpB,IADA,IAAIU,EAAa5oB,KAAKkoB,mBAAmBhL,GAChCzZ,EAAI,EAAGC,EAAK+kB,EAAU9kB,OAAQF,EAAIC,IAAMD,EAC7C,GAAIglB,EAAUhlB,KAAMmlB,EAChB,OAAO,EAInB,OAAO,CACX,EAWAf,EAAcnoB,UAAUmpB,2BAA6B,SAAUC,EAAY/Z,EAAYvL,EAAUulB,EAAcC,EAAUC,GAErH,IAAIC,EAA6B,GADjCH,EAAevjB,KAAK8d,MAAMyF,IACW,EACjCvoB,EAAY,YAAiBR,KAAKooB,uBAAwBW,EAAe,GAAKA,EAAe,GAAK,EAAIha,GAAa,EAAIA,GAAavL,GAAWslB,EAAW,IAAKA,EAAW,IAC1KK,GAAcnpB,KAAKmoB,qBACnBgB,IACAnpB,KAAKmoB,qBAAuB,YAAsBe,EAAaA,IAEnE,IAYIE,EAZA/oB,EAAUL,KAAKmoB,qBACf9nB,EAAQkkB,OAAOpP,QAAU+T,GACzB7oB,EAAQkkB,OAAOzD,SAAWoI,GAC1B7oB,EAAQkkB,OAAOpP,MAAQ+T,EACvB7oB,EAAQkkB,OAAOzD,OAASoI,GAElBC,GACN9oB,EAAQgpB,UAAU,EAAG,EAAGH,EAAaA,QAMd1e,IAAvBxK,KAAKioB,gBACLmB,EAAY,cACZ,YAAiBA,EAAWN,GAC5B,YAAOM,EAAWra,GAAc/O,KAAKioB,cAAgBc,GAAeK,IAExE,IACIjM,EADAmM,EA+HL,SAA4B/jB,GAC/B,QAA2CiF,IAAvC+e,GAA2BhkB,GAC3B,OAAOgkB,GAA2BhkB,GAKtC,IAHA,IAAImR,EAAgB,EAATnR,EAAa,EACpBikB,EAAgBjkB,EAASA,EACzBkkB,EAAY,IAAIjqB,MAAMgqB,EAAgB,GACjC/lB,EAAI,EAAGA,GAAK8B,IAAU9B,EAC3B,IAAK,IAAIimB,EAAI,EAAGA,GAAKnkB,IAAUmkB,EAAG,CAC9B,IAAIC,EAAalmB,EAAIA,EAAIimB,EAAIA,EAC7B,GAAIC,EAAaH,EACb,MAEJ,IAAII,EAAWH,EAAUE,GACpBC,IACDA,EAAW,GACXH,EAAUE,GAAcC,GAE5BA,EAASvW,KAA4C,IAArC9N,EAAS9B,GAAKiT,GAAQnR,EAASmkB,IAAU,GACrDjmB,EAAI,GACJmmB,EAASvW,KAA4C,IAArC9N,EAAS9B,GAAKiT,GAAQnR,EAASmkB,IAAU,GAEzDA,EAAI,IACJE,EAASvW,KAA4C,IAArC9N,EAAS9B,GAAKiT,GAAQnR,EAASmkB,IAAU,GACrDjmB,EAAI,GACJmmB,EAASvW,KAA4C,IAArC9N,EAAS9B,GAAKiT,GAAQnR,EAASmkB,IAAU,GAGrE,CAGJ,IADA,IAAIG,EAAa,GACDnmB,GAAPD,EAAI,EAAQgmB,EAAU9lB,QAAQF,EAAIC,IAAMD,EACzCgmB,EAAUhmB,IACVomB,EAAWxW,KAAKpP,MAAM4lB,EAAYJ,EAAUhmB,IAIpD,OADA8lB,GAA2BhkB,GAAUskB,EAC9BA,CACX,CArKsBC,CAAmBf,GAOjC,SAASgB,EAAgB5iB,EAAShC,GAE9B,IADA,IAAI6kB,EAAY3pB,EAAQ4pB,aAAa,EAAG,EAAGf,EAAaA,GAAagB,KAC5D1C,EAAM,EAAG9jB,EAAK4lB,EAAQ3lB,OAAQ6jB,EAAM9jB,EAAI8jB,IAC7C,GAAIwC,EAAUV,EAAQ9B,IAAQ,EAAG,CAC7B,IAAKyB,GACgB,UAAhB9L,GAA2C,SAAhBA,IACc,IAA1C8L,EAAoBkB,QAAQhjB,GAAiB,CAC7C,IAAIijB,GAAOd,EAAQ9B,GAAO,GAAK,EAC3B5jB,EAAImlB,EAAgBqB,EAAMlB,EAC1BrlB,EAAIklB,GAAiBqB,EAAMlB,EAAe,GAC1CmB,EAAWrB,EAAS7hB,EAAShC,EAAUvB,EAAIA,EAAIC,EAAIA,GACvD,GAAIwmB,EACA,OAAOA,CAEf,CACAhqB,EAAQgpB,UAAU,EAAG,EAAGH,EAAaA,GACrC,KACJ,CAGR,CAEA,IAEIzlB,EAAGimB,EAAGjB,EAAW6B,EAAU5L,EAF3B6L,EAAKlrB,OAAOmrB,KAAKxqB,KAAKkoB,oBAAoBzd,IAAIggB,QAGlD,IAFAF,EAAGG,KAAK,KAEHjnB,EAAI8mB,EAAG5mB,OAAS,EAAGF,GAAK,IAAKA,EAAG,CACjC,IAAI2Z,EAAYmN,EAAG9mB,GAAG4Z,WAEtB,IADAoL,EAAYzoB,KAAKkoB,mBAAmB9K,GAC/BsM,EAAI9B,EAAMjkB,OAAS,EAAG+lB,GAAK,IAAKA,EAGjC,QAAiBlf,KADjB8f,EAAW7B,EADXtL,EAAcyK,EAAM8B,OAGhBhL,EAAS4L,EAAS3C,oBAAoBtnB,EAASG,EAAWgD,EAAUumB,EAAiBX,IAEjF,OAAO1K,CAIvB,CAEJ,EAKAmJ,EAAcnoB,UAAU8oB,cAAgB,SAAUhoB,GAC9C,IAAI8Q,EAAYtR,KAAK0c,WACrB,IAAKpL,EACD,OAAO,KAEX,IAAIqS,EAAOrS,EAAU,GACjBsS,EAAOtS,EAAU,GACjBuS,EAAOvS,EAAU,GACjBwS,EAAOxS,EAAU,GACjBiX,EAAiB,CAAC5E,EAAMC,EAAMD,EAAMG,EAAMD,EAAMC,EAAMD,EAAMD,GAEhE,OADA,YAAY2E,EAAgB,EAAG,EAAG,EAAG/nB,EAAW+nB,GACzCA,CACX,EAIAV,EAAcnoB,UAAUirB,QAAU,WAC9B,OAAO,YAAQ3qB,KAAKkoB,mBACxB,EAWAL,EAAcnoB,UAAUgoB,QAAU,SAAUrnB,EAAS6jB,EAAc1jB,EAAWC,EAAcsiB,EAAa6H,EAAkB1F,GAEvH,IAAIqF,EAAKlrB,OAAOmrB,KAAKxqB,KAAKkoB,oBAAoBzd,IAAIggB,QAClDF,EAAGG,KAAK,KAGJ1qB,KAAK0c,aACLrc,EAAQskB,OACR3kB,KAAKsoB,KAAKjoB,EAASG,IAEvB,IACIiD,EAAGC,EAAIgmB,EAAGmB,EAAIvN,EAASC,EADvBuN,EAAeF,GAAsChD,EAKzD,IAHI1C,GACAqF,EAAGvW,UAEFvQ,EAAI,EAAGC,EAAK6mB,EAAG5mB,OAAQF,EAAIC,IAAMD,EAAG,CACrC,IAAI2Z,EAAYmN,EAAG9mB,GAAG4Z,WAEtB,IADAC,EAAUtd,KAAKkoB,mBAAmB9K,GAC7BsM,EAAI,EAAGmB,EAAKC,EAAannB,OAAQ+lB,EAAImB,IAAMnB,EAAG,MAGhClf,KADf+S,EAASD,EADSwN,EAAapB,MAG3BnM,EAAOmK,QAAQrnB,EAAS6jB,EAAc1jB,EAAWC,EAAcsiB,EAAamC,EAEpF,CACJ,CACIllB,KAAK0c,YACLrc,EAAQwkB,SAEhB,EACOgD,CACX,CA3PkC,GAkQ9B0B,GAA6B,CAAC,EA+CnB,U,oDCtTJwB,GAAwB,G,2CCV/B,GAAwC,WACxC,IAAI9rB,EAAgB,SAAUE,EAAGC,GAI7B,OAHAH,EAAgBI,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,CAAG,GAC1E,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,GAAI,EAC7FR,EAAcE,EAAGC,EAC5B,EACA,OAAO,SAAUD,EAAGC,GAChB,GAAiB,mBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIS,UAAU,uBAAyBC,OAAOV,GAAK,iCAE7D,SAASW,IAAOC,KAAKC,YAAcd,CAAG,CADtCF,EAAcE,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOa,OAAOd,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,EACnF,CACH,CAd2C,GA2jB7B,GAvhBgC,SAAUK,GAKrD,SAAS4qB,EAA0BC,GAC/B,IAAIrqB,EAAQR,EAAOR,KAAKI,KAAMirB,IAAgBjrB,KAoF9C,OAlFAY,EAAMsqB,6BAA+BtqB,EAAMuqB,wBAAwBC,KAAKxqB,GAIxEA,EAAMyqB,wBAINzqB,EAAM0qB,uBAAyB,KAI/B1qB,EAAM2qB,kBAAoB,KAK1B3qB,EAAM4qB,mBAAqB,EAK3B5qB,EAAM6qB,oBAAsBzQ,IAK5Bpa,EAAM8qB,gBAAkB,cAKxB9qB,EAAM+qB,uBAAyB,cAK/B/qB,EAAMgrB,kBAKNhrB,EAAMirB,gBAAkB,KAKxBjrB,EAAMkrB,oBAAsB,KAK5BlrB,EAAMmrB,qBAAuB,KAK7BnrB,EAAMorB,aAAe,KAKrBprB,EAAMqrB,oBAAqB,EAI3BrrB,EAAMsrB,uBAAyB,KAK/BtrB,EAAMurB,UAAW,EAKjBvrB,EAAMwrB,oBAAsB,KAK5BxrB,EAAM+U,SAAW,EACV/U,CACX,CA0bA,OAphBA,GAAUoqB,EAA2B5qB,GAgGrC4qB,EAA0BtrB,UAAU2sB,aAAe,SAAUC,EAAeC,EAAYrH,GACpF,IAAI3kB,EAASgsB,EAAWhsB,OACpBisB,EAAYD,EAAWC,UACvBC,EAASD,EAAUC,OACnB1d,EAAayd,EAAUzd,WACvB2d,EAAaF,EAAUE,WACvBlpB,EAAWgpB,EAAUhpB,SACrBmpB,EAAmBD,EAAWtnB,YAC9BwnB,EAAe5sB,KAAK6sB,WAAWC,YAC/BxsB,EAAaisB,EAAWjsB,WACxBysB,EAAYR,EAAWQ,UACvBhK,IAAgBgK,EAAUC,GAAA,EAASC,YAAcF,EAAUC,GAAA,EAASE,cACpE7sB,EAAUL,KAAKosB,oBACfjX,EAAQ3P,KAAK8d,MAAMiJ,EAAW7V,KAAK,GAAKpW,GACxCwgB,EAAStb,KAAK8d,MAAMiJ,EAAW7V,KAAK,GAAKpW,GACzC6sB,EAAaP,EAAaQ,YAAcV,EAAWW,WACnDC,EAAaH,EAAa,YAASR,GAAoB,KACvDY,EAAWJ,EACT3nB,KAAK8Q,MAAM/V,EAAO,GAAKosB,EAAiB,IAAMW,GAAc,EAC5D,EACFE,EAAQL,EACN3nB,KAAK8b,OAAO/gB,EAAO,GAAKosB,EAAiB,IAAMW,GAC/C,EACN,EAAG,CACC,IAAI9sB,EAAYR,KAAKytB,mBAAmBhB,EAAQ1d,EAAYvL,EAAUlD,EAAY6U,EAAO2L,EAAQ0M,EAAQF,GACzGhB,EAAc5E,QAAQrnB,EAAS,EAAGG,EAAWgD,EAAUuf,OAAavY,EAAW0a,EACnF,SAAWsI,EAAQD,EACvB,EACAvC,EAA0BtrB,UAAUguB,yBAA2B,WAC3D,GAAsB,IAAlB1tB,KAAK2V,SAAgB,CACrB,IAAIgY,EAAqB,YAAsB3tB,KAAKK,QAAQkkB,OAAOpP,MAAOnV,KAAKK,QAAQkkB,OAAOzD,OAAQ,KACtG9gB,KAAKosB,oBAAsBuB,CAC/B,MAEI3tB,KAAKosB,oBAAsBpsB,KAAKK,OAExC,EACA2qB,EAA0BtrB,UAAUkuB,2BAA6B,WAC7D,GAAsB,IAAlB5tB,KAAK2V,SAAgB,CACrB,IAAIrS,EAAQtD,KAAKK,QAAQkD,YACzBvD,KAAKK,QAAQkD,YAAcvD,KAAK2V,SAChC3V,KAAKK,QAAQ+D,UAAUpE,KAAKosB,oBAAoB7H,OAAQ,EAAG,GAC3DvkB,KAAKK,QAAQkD,YAAcD,EAC3B,YAActD,KAAKosB,qBACnB,IAAW/Y,KAAKrT,KAAKosB,oBAAoB7H,QACzCvkB,KAAKosB,oBAAsB,IAC/B,CACJ,EAKApB,EAA0BtrB,UAAUmuB,gBAAkB,SAAUtB,GACxDvsB,KAAKksB,yBACLlsB,KAAK0tB,2BACL1tB,KAAKqsB,aAAarsB,KAAKksB,uBAAwBK,EAAYA,EAAWuB,eACtE9tB,KAAK4tB,6BAEb,EAOA5C,EAA0BtrB,UAAUquB,YAAc,SAAUxB,EAAYyB,GACpE,IAAI1tB,EAAaisB,EAAWjsB,WACxB2tB,EAAa1B,EAAW2B,iBAAiB3B,EAAW4B,YAExD,YAAUnuB,KAAKouB,eAAgB,EAAI9tB,EAAY,EAAIA,GACnD,YAAYN,KAAKquB,sBAAuBruB,KAAKouB,gBAC7C,IAAIpK,EAAkB,YAAkBhkB,KAAKouB,gBAC7CpuB,KAAKsuB,aAAaN,EAAQhK,EAAiBhkB,KAAKuuB,cAAchC,IAC9D,IAAIlsB,EAAUL,KAAKK,QACfkkB,EAASlkB,EAAQkkB,OACjBhW,EAAcvO,KAAKgsB,aACnBE,EAAyBlsB,KAAKksB,uBAClC,KAAM3d,GAAeA,EAAYoc,cAC3BuB,GAA0BA,EAAuBvB,WACnD,OAAO,KAGX,IAAIxV,EAAQ3P,KAAK8d,MAAMiJ,EAAW7V,KAAK,GAAKpW,GACxCwgB,EAAStb,KAAK8d,MAAMiJ,EAAW7V,KAAK,GAAKpW,GACzCikB,EAAOpP,OAASA,GAASoP,EAAOzD,QAAUA,GAC1CyD,EAAOpP,MAAQA,EACfoP,EAAOzD,OAASA,EACZyD,EAAOte,MAAMzF,YAAcwjB,IAC3BO,EAAOte,MAAMzF,UAAYwjB,IAGvBhkB,KAAKwuB,iBACXnuB,EAAQgpB,UAAU,EAAG,EAAGlU,EAAO2L,GAEnC9gB,KAAKyuB,UAAUpuB,EAASksB,GACxB,IAAIC,EAAYD,EAAWC,UACvBE,EAAaF,EAAUE,WAC3B1sB,KAAK2V,SAAWsY,EAAW5J,QAC3BrkB,KAAK0tB,2BAEL,IAAIgB,GAAU,EACVC,GAAS,EACb,GAAIV,EAAW1tB,QAAUP,KAAKmsB,SAAU,CACpC,IAAIyC,EAAc,aAAeX,EAAW1tB,OAAQmsB,IAEpDgC,GADAC,EAAS,YAAiBC,EAAarC,EAAWhsB,WAC7B,YAAequB,EAAarC,EAAWhsB,UAExDP,KAAK6uB,cAAc7uB,KAAKosB,oBAAqBG,EAAYqC,EAEjE,CAaA,OAZID,GACA3uB,KAAKqsB,aAAa9d,EAAage,GAE/BmC,GACA1uB,KAAKosB,oBAAoBvH,UAE7B7kB,KAAK4tB,6BACL5tB,KAAK8uB,WAAWzuB,EAASksB,GACrBvsB,KAAK4rB,oBAAsBY,EAAUhpB,WACrCxD,KAAK4rB,kBAAoBY,EAAUhpB,SACnCxD,KAAKsrB,uBAAyB,MAE3BtrB,KAAK+uB,SAChB,EAMA/D,EAA0BtrB,UAAUsvB,YAAc,SAAUC,GACxD,OAAO,IAAIC,QAKX,SAAUC,GACN,IAAKnvB,KAAKsrB,yBAA2BtrB,KAAKqrB,wBAAyB,CAC/D,IAAI3U,EAAO,CAAC1W,KAAKK,QAAQkkB,OAAOpP,MAAOnV,KAAKK,QAAQkkB,OAAOzD,QAC3D,YAAM9gB,KAAKouB,eAAgB1X,GAC3B,IAAI+V,EAASzsB,KAAK6rB,gBACd9c,EAAa/O,KAAKyrB,oBAClBjoB,EAAWxD,KAAK4rB,kBAChBc,EAAa1sB,KAAK8rB,oBAClBvrB,EAASP,KAAK2rB,uBACdyD,EAAQpvB,KAAK6sB,WACbwC,EAAa,GACbla,EAAQuB,EAAK,GAAKqU,GAClBjK,EAASpK,EAAK,GAAKqU,GACvBsE,EAAWhc,KAAKrT,KAAKytB,mBAAmBhB,EAAQ1d,EAAYvL,EAAUunB,GAAuB5V,EAAO2L,EAAQ,GAAG3M,SAC/G,IAAImb,EAASF,EAAMtC,YACfH,EAAmBD,EAAWtnB,YAClC,GAAIkqB,EAAOlC,YACPV,EAAWW,aACV,YAAeV,EAAkBpsB,GAAS,CAK3C,IAJA,IAAIgvB,EAAShvB,EAAO,GAChB+sB,EAAa,YAASX,GACtBa,EAAQ,EACRgC,OAAU,EACPD,EAAS5C,EAAiB,IAE7B6C,EAAUlC,IADRE,EAEF6B,EAAWhc,KAAKrT,KAAKytB,mBAAmBhB,EAAQ1d,EAAYvL,EAAUunB,GAAuB5V,EAAO2L,EAAQ0O,GAASrb,SACrHob,GAAUjC,EAId,IAFAE,EAAQ,EACR+B,EAAShvB,EAAO,GACTgvB,EAAS5C,EAAiB,IAE7B6C,EAAUlC,IADRE,EAEF6B,EAAWhc,KAAKrT,KAAKytB,mBAAmBhB,EAAQ1d,EAAYvL,EAAUunB,GAAuB5V,EAAO2L,EAAQ0O,GAASrb,SACrHob,GAAUjC,CAElB,CACAttB,KAAKsrB,uBDzRd,SAAqC5U,EAAM2Y,EAAYI,EAAUC,EAAenvB,EAAQwO,EAAYvL,GACvG,IAAI2R,EAAQuB,EAAK,GAAKqU,GAClBjK,EAASpK,EAAK,GAAKqU,GACnB1qB,EAAU,YAAsB8U,EAAO2L,GAC3CzgB,EAAQsvB,uBAAwB,EAOhC,IANA,IAAIpL,EAASlkB,EAAQkkB,OACjBzU,EAAW,IAAI,KAAwBzP,EAAS0qB,GAAuBxqB,EAAQ,KAAMiD,GACrFosB,EAAeH,EAAS9rB,OAExBksB,EAAcrqB,KAAK8b,MAAM,SAAwBsO,GACjDE,EAAmB,CAAC,EACfrsB,EAAI,EAAGA,GAAKmsB,IAAgBnsB,EAAG,CACpC,IAAI0D,EAAUsoB,EAAShsB,EAAI,GACvBssB,EAAuB5oB,EAAQ6oB,oBAAsBN,EACzD,GAAKA,EAAL,CAGA,IAAIO,EAASF,EAAqB5oB,EAAS4H,GAC3C,GAAKkhB,EAAL,CAGKzwB,MAAMuN,QAAQkjB,KACfA,EAAS,CAACA,IAId,IAFA,IACIC,EAAQ,KAAO,UADPzsB,EAAIosB,GACoBxS,SAAS,KAAKlJ,OAAO,GAChDuV,EAAI,EAAGmB,EAAKoF,EAAOtsB,OAAQ+lB,EAAImB,IAAMnB,EAAG,CAC7C,IAAIyG,EAAgBF,EAAOvG,GACvBvkB,EAAWgrB,EAAc/oB,qBAAd+oB,CAAoChpB,GACnD,GAAKhC,GAAa,YAAW5E,EAAQ4E,EAASC,aAA9C,CAGA,IAAIa,EAAQkqB,EAAcC,QACtBvqB,EAAOI,EAAME,UACbN,GACAA,EAAKwqB,SAASH,GAElB,IAAIpqB,EAASG,EAAMG,YACfN,IACAA,EAAOuqB,SAASH,GAChBpqB,EAAO+C,YAAY,OAEvB5C,EAAMqqB,aAAQ9lB,GACd,IAAIgb,EAAQ2K,EAAc7pB,WAC1B,GAAIkf,GAAgC,IAAvBA,EAAMta,aAAoB,CACnC,IAAIqlB,EAAU/K,EAAMgL,eACpB,IAAKD,EACD,SAEJ,IAAIE,EAAa,YAAsBF,EAAQ,GAAIA,EAAQ,QAAI/lB,EAAW,CAAElH,OAAO,IAC/EotB,EAAMD,EAAWlM,OACrBkM,EAAWhoB,UAAYynB,EACvBO,EAAWE,SAAS,EAAG,EAAGD,EAAIvb,MAAOub,EAAI5P,QACzC7a,EAAM2qB,SAAS,IAAIC,GAAA,EAAK,CACpBH,IAAKA,EACLH,QAASA,EACT9Z,OAAQ+O,EAAMza,YACd+lB,aAAcC,GAAA,EAAgBC,OAC9BC,aAAcF,GAAA,EAAgBC,OAC9B/tB,OAAQuiB,EAAMva,YACdoZ,QAAS,EACT3N,KAAM8O,EAAM3a,UACZ1G,MAAOqhB,EAAM0L,WACb1tB,SAAUgiB,EAAMpa,cAChBib,eAAgBb,EAAMra,sBAE9B,CACA,IAAI+R,EAASjX,EAAM8H,aAAe,GAC9BojB,EAAiBrB,EAAiB5S,MAElCiU,EAAiB,CAAC,EAClBrB,EAAiB5S,GAAUiU,EAC3BA,EAAwB,QAAI,GAC5BA,EAAuB,OAAI,GAC3BA,EAA2B,WAAI,GAC/BA,EAAsB,MAAI,IAE9BA,EAAehsB,EAASuB,UAAUmY,QAAQ,QAAS,KAAKxL,KAAKlO,EAAUc,EA9CvE,CA+CJ,CA1DA,CAJA,CA+DJ,CAIA,IAHA,IAAImrB,EAAa/xB,OAAOmrB,KAAKsF,GACxBrlB,IAAIggB,QACJC,KAAK,KACMhnB,GAAPD,EAAI,EAAQ2tB,EAAWztB,QAAQF,EAAIC,IAAMD,EAAG,CACjD,IAAI0tB,EAAiBrB,EAAiBsB,EAAW3tB,IACjD,IAAK,IAAIgQ,KAAQ0d,EACb,KAAIE,EAAeF,EAAe1d,GAClC,IAASiW,EAAI,EAAGmB,EAAKwG,EAAa1tB,OAAQ+lB,EAAImB,EAAInB,GAAK,EAAG,CACtD5Z,EAAS9J,SAASqrB,EAAa3H,EAAI,IACnC,IAAK,IAAI4H,EAAI,EAAGC,EAAKlC,EAAW1rB,OAAQ2tB,EAAIC,IAAMD,EAC9CxhB,EAAS9L,aAAaqrB,EAAWiC,IACjCxhB,EAASrJ,aAAa4qB,EAAa3H,GAE3C,CAPuC,CAS/C,CACA,OAAOrpB,EAAQ4pB,aAAa,EAAG,EAAG1F,EAAOpP,MAAOoP,EAAOzD,OAC3D,CCwL8C0Q,CAA4B9a,EAAM2Y,EAAYrvB,KAAKurB,kBAAmB6D,EAAMY,mBAAoBzvB,EAAQwO,EAAYvL,EACtJ,CACA2rB,EDhLL,SAAmBF,EAAOQ,EAAUzF,GACvC,IAAIyH,EAAiB,GACrB,GAAIzH,EAAW,CACX,IAAIpmB,EAAI4B,KAAK8b,MAAM9b,KAAK8d,MAAM2L,EAAM,IAAMlE,IACtClnB,EAAI2B,KAAK8b,MAAM9b,KAAK8d,MAAM2L,EAAM,IAAMlE,IAItCnE,EAEA,GAFS,YAAMhjB,EAAG,EAAGomB,EAAU7U,MAAQ,GACvC,YAAMtR,EAAG,EAAGmmB,EAAUlJ,OAAS,GAAKkJ,EAAU7U,OAE9C+Q,EAAI8D,EAAUE,KAAKtD,GACnB8K,EAAI1H,EAAUE,KAAKtD,EAAQ,GAE3BnjB,EADIumB,EAAUE,KAAKtD,EAAQ,GACnB,KAAO8K,EAAI,IAAMxL,GACzB2J,EAAcrqB,KAAK8b,MAAM,SAAwBmO,EAAS9rB,QAC1DF,GAAKA,EAAIosB,GAAgB,GACzB4B,EAAepe,KAAKoc,EAAShsB,EAAIosB,EAAc,GAEvD,CACA,OAAO4B,CACX,CC2JoBE,CAAU1C,EAAOjvB,KAAKurB,kBAAmBvrB,KAAKsrB,wBAC1D,EAAEF,KAAKprB,MACX,EAUAgrB,EAA0BtrB,UAAUmpB,2BAA6B,SAAUC,EAAYyD,EAAYxD,EAAcC,EAAU4I,GACvH,IAAIhxB,EAAQZ,KACZ,GAAKA,KAAKgsB,aAAV,CAGA,IAsCItN,EAtCA3P,EAAawd,EAAWC,UAAUzd,WAClCvL,EAAW+oB,EAAWC,UAAUhpB,SAChC4rB,EAAQpvB,KAAK6sB,WAEb4C,EAAW,CAAC,EAOZ1F,EAAkB,SAAU5iB,EAAShC,EAAUwkB,GAC/C,IAAIlJ,EAAM,YAAOtZ,GACb0qB,EAAQpC,EAAShP,GACrB,GAAKoR,GAaA,IAAc,IAAVA,GAAkBlI,EAAakI,EAAMlI,WAAY,CACtD,GAAmB,IAAfA,EAGA,OAFA8F,EAAShP,IAAO,EAChBmR,EAAQE,OAAOF,EAAQG,YAAYF,GAAQ,GACpC7I,EAAS7hB,EAASioB,EAAOjqB,GAEpC0sB,EAAM1sB,SAAWA,EACjB0sB,EAAMlI,WAAaA,CACvB,MArBY,CACR,GAAmB,IAAfA,EAEA,OADA8F,EAAShP,IAAO,EACTuI,EAAS7hB,EAASioB,EAAOjqB,GAEpCysB,EAAQve,KAAMoc,EAAShP,GAAO,CAC1BtZ,QAASA,EACTioB,MAAOA,EACPjqB,SAAUA,EACVwkB,WAAYA,EACZX,SAAUA,GAElB,CAWJ,EAEIgJ,EAAiB,CAAChyB,KAAKgsB,cAU3B,OATIhsB,KAAKksB,wBACL8F,EAAe3e,KAAKrT,KAAKksB,wBAE7B8F,EAAeC,MAAK,SAAU3F,GAC1B,OAAQ5N,EAAS4N,EAAczD,2BAA2BC,EAAY/Z,EAAYvL,EAAUulB,EAAcgB,EAAiBuC,IAAkB1rB,EAAMsrB,wBAC/IK,EAAWuB,cACTvB,EAAWuB,cAAcoE,MAAMznB,KAAI,SAAU0nB,GAAQ,OAAOA,EAAKpO,KAAO,IACxE,KACV,IACOrF,CAlDP,CAmDJ,EAIAsM,EAA0BtrB,UAAU0yB,mBAAqB,WACrD,IAAIhD,EAAQpvB,KAAK6sB,WACbuC,EAAMiD,cAAgBryB,KAAKgsB,cAC3BoD,EAAMkD,SAEd,EAMAtH,EAA0BtrB,UAAUyrB,wBAA0B,SAAUoH,GACpEvyB,KAAKwyB,yBACT,EAMAxH,EAA0BtrB,UAAU+yB,aAAe,SAAUlG,GACzD,IAAItB,EAAcjrB,KAAK6sB,WACnBD,EAAe3B,EAAY6B,YAC/B,IAAKF,EACD,OAAO,EAEX,IAAI8F,EAAYnG,EAAWQ,UAAUC,GAAA,EAASC,WAC1C0F,EAAcpG,EAAWQ,UAAUC,GAAA,EAASE,aAC5C0F,EAAuB3H,EAAY4H,0BACnCC,EAAyB7H,EAAY8H,4BACzC,GAAK/yB,KAAKgzB,QAAUJ,GAAwBF,IACtCI,GAA0BH,EAE5B,OADA3yB,KAAKqrB,yBAA0B,GACxB,EAEXrrB,KAAKqrB,yBAA0B,EAC/B,IAAI4H,EAAmB1G,EAAWhsB,OAC9BisB,EAAYD,EAAWC,UACvBE,EAAaF,EAAUE,WACvB3d,EAAayd,EAAUzd,WACvBzO,EAAaisB,EAAWjsB,WACxB4yB,EAAsBjI,EAAYkI,cAClCC,EAA0BnI,EAAYoI,kBACtCC,EAAyBrI,EAAYsI,sBACV/oB,IAA3B8oB,IACAA,EAAyB,MAE7B,IAAI7G,EAASD,EAAUC,OAAOtY,QAC1B5T,EAAS,YAAO0yB,EAAkBG,EAA0BrkB,GAC5DykB,EAAiBjzB,EAAO4T,QACxBsf,EAAc,CAAClzB,EAAO4T,SACtBwY,EAAmBD,EAAWtnB,YAClC,GAAIwnB,EAAaQ,YACbV,EAAWW,aACV,YAAeV,EAAkBJ,EAAWhsB,QAAS,CAMtD,IAAI+sB,EAAa,YAASX,GACtB+G,EAASluB,KAAK0c,IAAI,YAAS3hB,GAAU,EAAG+sB,GAC5C/sB,EAAO,GAAKosB,EAAiB,GAAK+G,EAClCnzB,EAAO,GAAKosB,EAAiB,GAAK+G,EAClC,aAAgBjH,EAAQC,GACxB,IAAIiH,EAAa,YAAYF,EAAY,GAAI/G,GAEzCiH,EAAW,GAAKhH,EAAiB,IACjCgH,EAAW,GAAKhH,EAAiB,GACjC8G,EAAYpgB,KAAK,CACbsgB,EAAW,GAAKrG,EAChBqG,EAAW,GACXA,EAAW,GAAKrG,EAChBqG,EAAW,KAGVA,EAAW,GAAKhH,EAAiB,IACtCgH,EAAW,GAAKhH,EAAiB,IACjC8G,EAAYpgB,KAAK,CACbsgB,EAAW,GAAKrG,EAChBqG,EAAW,GACXA,EAAW,GAAKrG,EAChBqG,EAAW,IAGvB,CACA,GAAI3zB,KAAKgzB,OACLhzB,KAAKyrB,qBAAuB1c,GAC5B/O,KAAKwrB,mBAAqB0H,GAC1BlzB,KAAK+rB,sBAAwBuH,GAC7B,YAAetzB,KAAK2rB,uBAAwBprB,GAO5C,OANK,YAAOP,KAAK0rB,gBAAiB8H,KAC9BxzB,KAAKsrB,uBAAyB,KAC9BtrB,KAAK0rB,gBAAkB8H,GAE3BxzB,KAAK6rB,gBAAkBY,EACvBzsB,KAAKisB,oBAAqB,GACnB,EAEXjsB,KAAKgsB,aAAe,KACpB,IACI4H,EADArlB,EAAc,IAAI,EAAmB,aAAmBQ,EAAYzO,GAAaC,EAAQwO,EAAYzO,GAErGN,KAAK6sB,WAAWgH,iBAChBD,EAAwB,IAAI,EAAmB,aAAmB7kB,EAAYzO,GAAaC,EAAQwO,EAAYzO,IAEnH,IACIwzB,EADAC,EAAiB,eAErB,GAAIA,EAAgB,CAChB,IAAK,IAAItwB,EAAI,EAAGC,EAAK+vB,EAAY9vB,OAAQF,EAAIC,IAAMD,EAAG,CAClD,IAAIuwB,EAAWP,EAAYhwB,GACvBwwB,EAAe,aAAaD,EAAUtH,GAC1CE,EAAasH,aAAaD,EAAc,aAAiBllB,EAAY2d,GAAaqH,EACtF,CACAD,EAAgB,aAA4BC,EAAgBrH,EAChE,MAEI,IAASjpB,EAAI,EAAGC,EAAK+vB,EAAY9vB,OAAQF,EAAIC,IAAMD,EAC/CmpB,EAAasH,aAAaT,EAAYhwB,GAAIsL,EAAY2d,GAG9D,IAAIvd,EAAmB,aAA0BJ,EAAYzO,GACzD0yB,GAAQ,EACRrE,EAKJ,SAAUxnB,GACN,IAAI8oB,EACAP,EAAgBvoB,EAAQ6oB,oBAAsB/E,EAAY+E,mBAI9D,GAHIN,IACAO,EAASP,EAAcvoB,EAAS4H,IAEhCkhB,EAAQ,CACR,IAAIkE,EAAQn0B,KAAKkP,cAAc/H,EAASgI,EAAkB8gB,EAAQ1hB,EAAaulB,EAAeF,GAC9FZ,EAAQA,IAAUmB,CACtB,CACJ,EAAE/I,KAAKprB,MACHo0B,EAAa,aAAa7zB,EAAQmsB,GAElC+C,EAAW7C,EAAayH,oBAAoBD,GAC5Cd,GACA7D,EAAS/E,KAAK4I,GAElB,IAAS7vB,EAAI,EAAGC,EAAK+rB,EAAS9rB,OAAQF,EAAIC,IAAMD,EAC5CkrB,EAAOc,EAAShsB,IAEpBzD,KAAKurB,kBAAoBkE,EACzBzvB,KAAKgzB,MAAQA,EACb,IAAIsB,EAA0B/lB,EAAYuF,SACtCwY,EAAgB,IAAI,GAAc/rB,EAAQwO,EAAYzO,EAAYssB,EAAa2H,cAAeD,EAAyBrJ,EAAYoI,mBAcvI,OAbIO,IACA5zB,KAAKksB,uBAAyB,IAAI,GAAc3rB,EAAQwO,EAAYzO,EAAYssB,EAAa2H,cAAeX,EAAsB9f,SAAUmX,EAAYoI,oBAE5JrzB,KAAKyrB,oBAAsB1c,EAC3B/O,KAAKwrB,kBAAoB0H,EACzBlzB,KAAK+rB,qBAAuBuH,EAC5BtzB,KAAK0rB,gBAAkB8H,EACvBxzB,KAAK2rB,uBAAyBprB,EAC9BP,KAAK6rB,gBAAkBY,EACvBzsB,KAAK8rB,oBAAsBY,EAC3B1sB,KAAKgsB,aAAeM,EACpBtsB,KAAKsrB,uBAAyB,KAC9BtrB,KAAKisB,oBAAqB,GACnB,CACX,EAUAjB,EAA0BtrB,UAAUwP,cAAgB,SAAU/H,EAASgI,EAAkB8gB,EAAQ5iB,EAAcgC,EAAe/B,GAC1H,IAAK2iB,EACD,OAAO,EAEX,IAAI3gB,GAAU,EACd,GAAI9P,MAAMuN,QAAQkjB,GACd,IAAK,IAAIxsB,EAAI,EAAGC,EAAKusB,EAAOtsB,OAAQF,EAAIC,IAAMD,EAC1C6L,EACI,aAAcjC,EAAclG,EAAS8oB,EAAOxsB,GAAI0L,EAAkBnP,KAAKkrB,6BAA8B7b,EAAe/B,IAA8BgC,OAI1JA,EAAU,aAAcjC,EAAclG,EAAS8oB,EAAQ9gB,EAAkBnP,KAAKkrB,6BAA8B7b,EAAe/B,GAE/H,OAAOgC,CACX,EACO0b,CACX,CAthB8C,CAshB5C,KC1jBE,GAAwC,WACxC,IAAI/rB,EAAgB,SAAUE,EAAGC,GAI7B,OAHAH,EAAgBI,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,CAAG,GAC1E,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,GAAI,EAC7FR,EAAcE,EAAGC,EAC5B,EACA,OAAO,SAAUD,EAAGC,GAChB,GAAiB,mBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIS,UAAU,uBAAyBC,OAAOV,GAAK,iCAE7D,SAASW,IAAOC,KAAKC,YAAcd,CAAG,CADtCF,EAAcE,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOa,OAAOd,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,EACnF,CACH,CAd2C,GAmCxC,GAA6B,SAAUK,GAKvC,SAASo0B,EAAYC,GACjB,OAAOr0B,EAAOR,KAAKI,KAAMy0B,IAAgBz0B,IAC7C,CAIA,OAVA,GAAUw0B,EAAap0B,GAOvBo0B,EAAY90B,UAAUg1B,eAAiB,WACnC,OAAO,IAAI,GAA0B10B,KACzC,EACOw0B,CACX,CAZgC,CAY9BG,EAAA,GACa,M,oCCvCf,IAAIvf,EAA+B,WAC/B,SAASA,IACT,CAuFA,OA9EAA,EAAc1V,UAAUwQ,WAAa,SAAU/K,EAAUgC,EAAS2I,EAAUwD,GAAwB,EAMpG8B,EAAc1V,UAAU+G,aAAe,SAAUtB,GAAY,EAM7DiQ,EAAc1V,UAAUsG,SAAW,SAAUC,GAAS,EAKtDmP,EAAc1V,UAAUwF,WAAa,SAAUqS,EAAgBpQ,GAAW,EAK1EiO,EAAc1V,UAAUwH,YAAc,SAAUC,EAASlB,GAAS,EAKlEmP,EAAc1V,UAAUuH,uBAAyB,SAAU2tB,EAA4BztB,GAAW,EAKlGiO,EAAc1V,UAAUkH,eAAiB,SAAUqQ,EAAoB9P,GAAW,EAKlFiO,EAAc1V,UAAUqH,oBAAsB,SAAUmQ,EAAyB/P,GAAW,EAK5FiO,EAAc1V,UAAUoH,eAAiB,SAAUyP,EAAoBpP,GAAW,EAKlFiO,EAAc1V,UAAUsH,iBAAmB,SAAU2Q,EAAsBxQ,GAAW,EAKtFiO,EAAc1V,UAAUiH,UAAY,SAAUyP,EAAejP,GAAW,EAKxEiO,EAAc1V,UAAUmH,YAAc,SAAU6Q,EAAiBvQ,GAAW,EAK5EiO,EAAc1V,UAAUyO,SAAW,SAAUhJ,EAAUgC,GAAW,EAKlEiO,EAAc1V,UAAUwG,mBAAqB,SAAUuC,EAAWU,GAAe,EAKjFiM,EAAc1V,UAAU2G,cAAgB,SAAUsE,EAAYkqB,GAA8B,EAK5Fzf,EAAc1V,UAAU6G,aAAe,SAAU+E,EAAWupB,GAA8B,EACnFzf,CACX,CA1FkC,GA2FnB,K","file":"js/chunk-4509329f.9a89abcd.js","sourcesContent":["/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport VectorContext from '../VectorContext.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { defaultFillStyle, defaultFont, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextAlign, defaultTextBaseline, } from '../canvas.js';\nimport { equals } from '../../array.js';\nimport { intersects } from '../../extent.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { transformGeom2D } from '../../geom/SimpleGeometry.js';\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = /** @class */ (function (_super) {\n    __extends(CanvasImmediateRenderer, _super);\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {number} [opt_squaredTolerance] Optional squared tolerance for simplification.\n     * @param {import(\"../../proj.js\").TransformFunction} [opt_userTransform] Transform from user to view projection.\n     */\n    function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation, opt_squaredTolerance, opt_userTransform) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context_ = context;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.extent_ = extent;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.transform_ = transform;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.viewRotation_ = viewRotation;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.squaredTolerance_ = opt_squaredTolerance;\n        /**\n         * @private\n         * @type {import(\"../../proj.js\").TransformFunction}\n         */\n        _this.userTransform_ = opt_userTransform;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.contextFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.contextStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.contextTextState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.fillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.strokeState_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorY_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageHeight_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOpacity_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.imageRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageRotation_ = 0;\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size}\n         */\n        _this.imageScale_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageWidth_ = 0;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.textRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size}\n         */\n        _this.textScale_ = [0, 0];\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.pixelCoordinates_ = [];\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tmpLocalTransform_ = createTransform();\n        return _this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawImages_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.image_) {\n            return;\n        }\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var localTransform = this.tmpLocalTransform_;\n        var alpha = context.globalAlpha;\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha * this.imageOpacity_;\n        }\n        var rotation = this.imageRotation_;\n        if (this.imageRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n            var x = pixelCoordinates[i] - this.imageAnchorX_;\n            var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n            if (rotation !== 0 ||\n                this.imageScale_[0] != 1 ||\n                this.imageScale_[1] != 1) {\n                var centerX = x + this.imageAnchorX_;\n                var centerY = y + this.imageAnchorY_;\n                composeTransform(localTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n                context.setTransform.apply(context, localTransform);\n                context.translate(centerX, centerY);\n                context.scale(this.imageScale_[0], this.imageScale_[1]);\n                context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, -this.imageAnchorX_, -this.imageAnchorY_, this.imageWidth_, this.imageHeight_);\n                context.setTransform(1, 0, 0, 1, 0, 0);\n            }\n            else {\n                context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, x, y, this.imageWidth_, this.imageHeight_);\n            }\n        }\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha;\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawText_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.textState_ || this.text_ === '') {\n            return;\n        }\n        if (this.textFillState_) {\n            this.setContextFillState_(this.textFillState_);\n        }\n        if (this.textStrokeState_) {\n            this.setContextStrokeState_(this.textStrokeState_);\n        }\n        this.setContextTextState_(this.textState_);\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var rotation = this.textRotation_;\n        if (this.textRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (; offset < end; offset += stride) {\n            var x = pixelCoordinates[offset] + this.textOffsetX_;\n            var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n            if (rotation !== 0 ||\n                this.textScale_[0] != 1 ||\n                this.textScale_[1] != 1) {\n                var localTransform = composeTransform(this.tmpLocalTransform_, x, y, 1, 1, rotation, -x, -y);\n                context.setTransform.apply(context, localTransform);\n                context.translate(x, y);\n                context.scale(this.textScale_[0], this.textScale_[1]);\n                if (this.textStrokeState_) {\n                    context.strokeText(this.text_, 0, 0);\n                }\n                if (this.textFillState_) {\n                    context.fillText(this.text_, 0, 0);\n                }\n                context.setTransform(1, 0, 0, 1, 0, 0);\n            }\n            else {\n                if (this.textStrokeState_) {\n                    context.strokeText(this.text_, x, y);\n                }\n                if (this.textFillState_) {\n                    context.fillText(this.text_, x, y);\n                }\n            }\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} close Close.\n     * @private\n     * @return {number} end End.\n     */\n    CanvasImmediateRenderer.prototype.moveToLineTo_ = function (flatCoordinates, offset, end, stride, close) {\n        var context = this.context_;\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n        var length = pixelCoordinates.length;\n        if (close) {\n            length -= 2;\n        }\n        for (var i = 2; i < length; i += 2) {\n            context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n        }\n        if (close) {\n            context.closePath();\n        }\n        return end;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasImmediateRenderer.prototype.drawRings_ = function (flatCoordinates, offset, ends, stride) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n        }\n        return offset;\n    };\n    /**\n     * Render a circle geometry into the canvas.  Rendering is immediate and uses\n     * the current fill and stroke styles.\n     *\n     * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawCircle = function (geometry) {\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.fillState_ || this.strokeState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var pixelCoordinates = transformGeom2D(geometry, this.transform_, this.pixelCoordinates_);\n            var dx = pixelCoordinates[2] - pixelCoordinates[0];\n            var dy = pixelCoordinates[3] - pixelCoordinates[1];\n            var radius = Math.sqrt(dx * dx + dy * dy);\n            var context = this.context_;\n            context.beginPath();\n            context.arc(pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            this.drawText_(geometry.getCenter(), 0, 2, 2);\n        }\n    };\n    /**\n     * Set the rendering style.  Note that since this is an immediate rendering API,\n     * any `zIndex` on the provided style will be ignored.\n     *\n     * @param {import(\"../../style/Style.js\").default} style The rendering style.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.setStyle = function (style) {\n        this.setFillStrokeStyle(style.getFill(), style.getStroke());\n        this.setImageStyle(style.getImage());\n        this.setTextStyle(style.getText());\n    };\n    /**\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     */\n    CanvasImmediateRenderer.prototype.setTransform = function (transform) {\n        this.transform_ = transform;\n    };\n    /**\n     * Render a geometry into the canvas.  Call\n     * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n     *\n     * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawGeometry = function (geometry) {\n        var type = geometry.getType();\n        switch (type) {\n            case 'Point':\n                this.drawPoint(\n                /** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n                break;\n            case 'LineString':\n                this.drawLineString(\n                /** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n                break;\n            case 'Polygon':\n                this.drawPolygon(\n                /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n                break;\n            case 'MultiPoint':\n                this.drawMultiPoint(\n                /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n                break;\n            case 'MultiLineString':\n                this.drawMultiLineString(\n                /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n                break;\n            case 'MultiPolygon':\n                this.drawMultiPolygon(\n                /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n                break;\n            case 'GeometryCollection':\n                this.drawGeometryCollection(\n                /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n                break;\n            case 'Circle':\n                this.drawCircle(\n                /** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n                break;\n            default:\n        }\n    };\n    /**\n     * Render a feature into the canvas.  Note that any `zIndex` on the provided\n     * style will be ignored - features are rendered immediately in the order that\n     * this method is called.  If you need `zIndex` support, you should be using an\n     * {@link module:ol/layer/Vector~VectorLayer VectorLayer} instead.\n     *\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {import(\"../../style/Style.js\").default} style Style.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawFeature = function (feature, style) {\n        var geometry = style.getGeometryFunction()(feature);\n        if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        this.setStyle(style);\n        this.drawGeometry(geometry);\n    };\n    /**\n     * Render a GeometryCollection to the canvas.  Rendering is immediate and\n     * uses the current styles appropriate for each geometry in the collection.\n     *\n     * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n     */\n    CanvasImmediateRenderer.prototype.drawGeometryCollection = function (geometry) {\n        var geometries = geometry.getGeometriesArray();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            this.drawGeometry(geometries[i]);\n        }\n    };\n    /**\n     * Render a Point geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawPoint = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/Point.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n     * uses the current style.\n     *\n     * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPoint = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a LineString into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawLineString = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            context.beginPath();\n            this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length, geometry.getStride(), false);\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoint = geometry.getFlatMidpoint();\n            this.drawText_(flatMidpoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n     * and uses the current style.\n     *\n     * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiLineString = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry =\n                /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var geometryExtent = geometry.getExtent();\n        if (!intersects(this.extent_, geometryExtent)) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            var offset = 0;\n            var ends = /** @type {Array<number>} */ (geometry.getEnds());\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n            }\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoints = geometry.getFlatMidpoints();\n            this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n        }\n    };\n    /**\n     * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawPolygon = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            context.beginPath();\n            this.drawRings_(geometry.getOrientedFlatCoordinates(), 0, \n            /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoint = geometry.getFlatInteriorPoint();\n            this.drawText_(flatInteriorPoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n     * uses the current style.\n     * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPolygon = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            var flatCoordinates = geometry.getOrientedFlatCoordinates();\n            var offset = 0;\n            var endss = geometry.getEndss();\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var ends = endss[i];\n                offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n            }\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoints = geometry.getFlatInteriorPoints();\n            this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextFillState_ = function (fillState) {\n        var context = this.context_;\n        var contextFillState = this.contextFillState_;\n        if (!contextFillState) {\n            context.fillStyle = fillState.fillStyle;\n            this.contextFillState_ = {\n                fillStyle: fillState.fillStyle,\n            };\n        }\n        else {\n            if (contextFillState.fillStyle != fillState.fillStyle) {\n                contextFillState.fillStyle = fillState.fillStyle;\n                context.fillStyle = fillState.fillStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextStrokeState_ = function (strokeState) {\n        var context = this.context_;\n        var contextStrokeState = this.contextStrokeState_;\n        if (!contextStrokeState) {\n            context.lineCap = strokeState.lineCap;\n            if (context.setLineDash) {\n                context.setLineDash(strokeState.lineDash);\n                context.lineDashOffset = strokeState.lineDashOffset;\n            }\n            context.lineJoin = strokeState.lineJoin;\n            context.lineWidth = strokeState.lineWidth;\n            context.miterLimit = strokeState.miterLimit;\n            context.strokeStyle = strokeState.strokeStyle;\n            this.contextStrokeState_ = {\n                lineCap: strokeState.lineCap,\n                lineDash: strokeState.lineDash,\n                lineDashOffset: strokeState.lineDashOffset,\n                lineJoin: strokeState.lineJoin,\n                lineWidth: strokeState.lineWidth,\n                miterLimit: strokeState.miterLimit,\n                strokeStyle: strokeState.strokeStyle,\n            };\n        }\n        else {\n            if (contextStrokeState.lineCap != strokeState.lineCap) {\n                contextStrokeState.lineCap = strokeState.lineCap;\n                context.lineCap = strokeState.lineCap;\n            }\n            if (context.setLineDash) {\n                if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n                    context.setLineDash((contextStrokeState.lineDash = strokeState.lineDash));\n                }\n                if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n                    contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n                    context.lineDashOffset = strokeState.lineDashOffset;\n                }\n            }\n            if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n                contextStrokeState.lineJoin = strokeState.lineJoin;\n                context.lineJoin = strokeState.lineJoin;\n            }\n            if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n                contextStrokeState.lineWidth = strokeState.lineWidth;\n                context.lineWidth = strokeState.lineWidth;\n            }\n            if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n                contextStrokeState.miterLimit = strokeState.miterLimit;\n                context.miterLimit = strokeState.miterLimit;\n            }\n            if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n                contextStrokeState.strokeStyle = strokeState.strokeStyle;\n                context.strokeStyle = strokeState.strokeStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").TextState} textState Text state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextTextState_ = function (textState) {\n        var context = this.context_;\n        var contextTextState = this.contextTextState_;\n        var textAlign = textState.textAlign\n            ? textState.textAlign\n            : defaultTextAlign;\n        if (!contextTextState) {\n            context.font = textState.font;\n            context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            this.contextTextState_ = {\n                font: textState.font,\n                textAlign: textAlign,\n                textBaseline: textState.textBaseline,\n            };\n        }\n        else {\n            if (contextTextState.font != textState.font) {\n                contextTextState.font = textState.font;\n                context.font = textState.font;\n            }\n            if (contextTextState.textAlign != textAlign) {\n                contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n                context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            }\n            if (contextTextState.textBaseline != textState.textBaseline) {\n                contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n                context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            }\n        }\n    };\n    /**\n     * Set the fill and stroke style for subsequent draw operations.  To clear\n     * either fill or stroke styles, pass null for the appropriate parameter.\n     *\n     * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    CanvasImmediateRenderer.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        var _this = this;\n        if (!fillStyle) {\n            this.fillState_ = null;\n        }\n        else {\n            var fillStyleColor = fillStyle.getColor();\n            this.fillState_ = {\n                fillStyle: asColorLike(fillStyleColor ? fillStyleColor : defaultFillStyle),\n            };\n        }\n        if (!strokeStyle) {\n            this.strokeState_ = null;\n        }\n        else {\n            var strokeStyleColor = strokeStyle.getColor();\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            var strokeStyleWidth = strokeStyle.getWidth();\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            var lineDash = strokeStyleLineDash\n                ? strokeStyleLineDash\n                : defaultLineDash;\n            this.strokeState_ = {\n                lineCap: strokeStyleLineCap !== undefined\n                    ? strokeStyleLineCap\n                    : defaultLineCap,\n                lineDash: this.pixelRatio_ === 1\n                    ? lineDash\n                    : lineDash.map(function (n) { return n * _this.pixelRatio_; }),\n                lineDashOffset: (strokeStyleLineDashOffset\n                    ? strokeStyleLineDashOffset\n                    : defaultLineDashOffset) * this.pixelRatio_,\n                lineJoin: strokeStyleLineJoin !== undefined\n                    ? strokeStyleLineJoin\n                    : defaultLineJoin,\n                lineWidth: (strokeStyleWidth !== undefined\n                    ? strokeStyleWidth\n                    : defaultLineWidth) * this.pixelRatio_,\n                miterLimit: strokeStyleMiterLimit !== undefined\n                    ? strokeStyleMiterLimit\n                    : defaultMiterLimit,\n                strokeStyle: asColorLike(strokeStyleColor ? strokeStyleColor : defaultStrokeStyle),\n            };\n        }\n    };\n    /**\n     * Set the image style for subsequent draw operations.  Pass null to remove\n     * the image style.\n     *\n     * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n     */\n    CanvasImmediateRenderer.prototype.setImageStyle = function (imageStyle) {\n        var imageSize;\n        if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n            this.image_ = null;\n            return;\n        }\n        var imageAnchor = imageStyle.getAnchor();\n        var imageOrigin = imageStyle.getOrigin();\n        this.image_ = imageStyle.getImage(this.pixelRatio_);\n        this.imageAnchorX_ = imageAnchor[0] * this.pixelRatio_;\n        this.imageAnchorY_ = imageAnchor[1] * this.pixelRatio_;\n        this.imageHeight_ = imageSize[1] * this.pixelRatio_;\n        this.imageOpacity_ = imageStyle.getOpacity();\n        this.imageOriginX_ = imageOrigin[0];\n        this.imageOriginY_ = imageOrigin[1];\n        this.imageRotateWithView_ = imageStyle.getRotateWithView();\n        this.imageRotation_ = imageStyle.getRotation();\n        this.imageScale_ = imageStyle.getScaleArray();\n        this.imageWidth_ = imageSize[0] * this.pixelRatio_;\n    };\n    /**\n     * Set the text style for subsequent draw operations.  Pass null to\n     * remove the text style.\n     *\n     * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n     */\n    CanvasImmediateRenderer.prototype.setTextStyle = function (textStyle) {\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                this.textFillState_ = null;\n            }\n            else {\n                var textFillStyleColor = textFillStyle.getColor();\n                this.textFillState_ = {\n                    fillStyle: asColorLike(textFillStyleColor ? textFillStyleColor : defaultFillStyle),\n                };\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                this.textStrokeState_ = null;\n            }\n            else {\n                var textStrokeStyleColor = textStrokeStyle.getColor();\n                var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n                var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n                var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n                var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n                var textStrokeStyleWidth = textStrokeStyle.getWidth();\n                var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n                this.textStrokeState_ = {\n                    lineCap: textStrokeStyleLineCap !== undefined\n                        ? textStrokeStyleLineCap\n                        : defaultLineCap,\n                    lineDash: textStrokeStyleLineDash\n                        ? textStrokeStyleLineDash\n                        : defaultLineDash,\n                    lineDashOffset: textStrokeStyleLineDashOffset\n                        ? textStrokeStyleLineDashOffset\n                        : defaultLineDashOffset,\n                    lineJoin: textStrokeStyleLineJoin !== undefined\n                        ? textStrokeStyleLineJoin\n                        : defaultLineJoin,\n                    lineWidth: textStrokeStyleWidth !== undefined\n                        ? textStrokeStyleWidth\n                        : defaultLineWidth,\n                    miterLimit: textStrokeStyleMiterLimit !== undefined\n                        ? textStrokeStyleMiterLimit\n                        : defaultMiterLimit,\n                    strokeStyle: asColorLike(textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle),\n                };\n            }\n            var textFont = textStyle.getFont();\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            var textScale = textStyle.getScaleArray();\n            var textText = textStyle.getText();\n            var textTextAlign = textStyle.getTextAlign();\n            var textTextBaseline = textStyle.getTextBaseline();\n            this.textState_ = {\n                font: textFont !== undefined ? textFont : defaultFont,\n                textAlign: textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n                textBaseline: textTextBaseline !== undefined\n                    ? textTextBaseline\n                    : defaultTextBaseline,\n            };\n            this.text_ =\n                textText !== undefined\n                    ? Array.isArray(textText)\n                        ? textText.reduce(function (acc, t, i) { return (acc += i % 2 ? ' ' : t); }, '')\n                        : textText\n                    : '';\n            this.textOffsetX_ =\n                textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n            this.textOffsetY_ =\n                textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n            this.textRotateWithView_ =\n                textRotateWithView !== undefined ? textRotateWithView : false;\n            this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n            this.textScale_ = [\n                this.pixelRatio_ * textScale[0],\n                this.pixelRatio_ * textScale[1],\n            ];\n        }\n    };\n    return CanvasImmediateRenderer;\n}(VectorContext));\nexport default CanvasImmediateRenderer;\n//# sourceMappingURL=Immediate.js.map","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport { getUid } from '../util.js';\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nvar GEOMETRY_RENDERERS = {\n    'Point': renderPointGeometry,\n    'LineString': renderLineStringGeometry,\n    'Polygon': renderPolygonGeometry,\n    'MultiPoint': renderMultiPointGeometry,\n    'MultiLineString': renderMultiLineStringGeometry,\n    'MultiPolygon': renderMultiPolygonGeometry,\n    'GeometryCollection': renderGeometryCollectionGeometry,\n    'Circle': renderCircleGeometry,\n};\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n    return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n    var tolerance = getTolerance(resolution, pixelRatio);\n    return tolerance * tolerance;\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n    return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n        circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        circleReplay.drawCircle(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), 'Text');\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, opt_transform, opt_declutterBuilderGroup) {\n    var loading = false;\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        var imageState = imageStyle.getImageState();\n        if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n            imageStyle.unlistenImageChange(listener);\n        }\n        else {\n            if (imageState == ImageState.IDLE) {\n                imageStyle.load();\n            }\n            imageStyle.listenImageChange(listener);\n            loading = true;\n        }\n    }\n    renderFeatureInternal(replayGroup, feature, style, squaredTolerance, opt_transform, opt_declutterBuilderGroup);\n    return loading;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance, opt_transform, opt_declutterBuilderGroup) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n        return;\n    }\n    var simplifiedGeometry = geometry.simplifyTransformed(squaredTolerance, opt_transform);\n    var renderer = style.getRenderer();\n    if (renderer) {\n        renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n    }\n    else {\n        var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n        geometryRenderer(replayGroup, simplifiedGeometry, style, feature, opt_declutterBuilderGroup);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n    if (geometry.getType() == 'GeometryCollection') {\n        var geometries = \n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            renderGeometry(replayGroup, geometries[i], style, feature);\n        }\n        return;\n    }\n    var replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n    replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer(), style.getHitDetectionRenderer());\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var geometries = geometry.getGeometriesArray();\n    var i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n        var geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n        geometryRenderer(replayGroup, geometries[i], style, feature, opt_declutterBuilderGroup);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), 'LineString');\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), 'Text');\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), 'LineString');\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawMultiLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), 'Text');\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (strokeStyle || fillStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawMultiPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), 'Text');\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var imageStyle = style.getImage();\n    var textStyle = style.getText();\n    /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n    var declutterImageWithText;\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageBuilderGroup = builderGroup;\n        if (opt_declutterBuilderGroup) {\n            var declutterMode = imageStyle.getDeclutterMode();\n            if (declutterMode !== 'none') {\n                imageBuilderGroup = opt_declutterBuilderGroup;\n                if (declutterMode === 'obstacle') {\n                    // draw in non-declutter group:\n                    var imageReplay_1 = builderGroup.getBuilder(style.getZIndex(), 'Image');\n                    imageReplay_1.setImageStyle(imageStyle, declutterImageWithText);\n                    imageReplay_1.drawPoint(geometry, feature);\n                }\n                else if (textStyle && textStyle.getText()) {\n                    declutterImageWithText = {};\n                }\n            }\n        }\n        var imageReplay = imageBuilderGroup.getBuilder(style.getZIndex(), 'Image');\n        imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n        imageReplay.drawPoint(geometry, feature);\n    }\n    if (textStyle && textStyle.getText()) {\n        var textBuilderGroup = builderGroup;\n        if (opt_declutterBuilderGroup) {\n            textBuilderGroup = opt_declutterBuilderGroup;\n        }\n        var textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n        textReplay.setTextStyle(textStyle, declutterImageWithText);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var imageStyle = style.getImage();\n    var textStyle = style.getText();\n    /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n    var declutterImageWithText;\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageBuilderGroup = builderGroup;\n        if (opt_declutterBuilderGroup) {\n            var declutterMode = imageStyle.getDeclutterMode();\n            if (declutterMode !== 'none') {\n                imageBuilderGroup = opt_declutterBuilderGroup;\n                if (declutterMode === 'obstacle') {\n                    // draw in non-declutter group:\n                    var imageReplay_2 = builderGroup.getBuilder(style.getZIndex(), 'Image');\n                    imageReplay_2.setImageStyle(imageStyle, declutterImageWithText);\n                    imageReplay_2.drawMultiPoint(geometry, feature);\n                }\n                else if (textStyle && textStyle.getText()) {\n                    declutterImageWithText = {};\n                }\n            }\n        }\n        var imageReplay = imageBuilderGroup.getBuilder(style.getZIndex(), 'Image');\n        imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n        imageReplay.drawMultiPoint(geometry, feature);\n    }\n    if (textStyle && textStyle.getText()) {\n        var textBuilderGroup = builderGroup;\n        if (opt_declutterBuilderGroup) {\n            textBuilderGroup = opt_declutterBuilderGroup;\n        }\n        var textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n        textReplay.setTextStyle(textStyle, declutterImageWithText);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), 'Text');\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n//# sourceMappingURL=vector.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { buffer, clone, containsCoordinate, coordinateRelationship, } from '../../extent.js';\nimport { defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, } from '../canvas.js';\nimport { equals, reverseSubArray } from '../../array.js';\nimport { inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray, } from '../../geom/flat/inflate.js';\nvar CanvasBuilder = /** @class */ (function (_super) {\n    __extends(CanvasBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.tolerance = tolerance;\n        /**\n         * @protected\n         * @const\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.maxExtent = maxExtent;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.maxLineWidth = 0;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        _this.resolution = resolution;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction1_ = null;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction2_ = null;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.bufferedMaxExtent_ = null;\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.instructions = [];\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.coordinates = [];\n        /**\n         * @private\n         * @type {import(\"../../coordinate.js\").Coordinate}\n         */\n        _this.tmpCoordinate_ = [];\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.hitDetectionInstructions = [];\n        /**\n         * @protected\n         * @type {import(\"../canvas.js\").FillStrokeState}\n         */\n        _this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {Array<number>} dashArray Dash array.\n     * @return {Array<number>} Dash array with pixel ratio applied\n     */\n    CanvasBuilder.prototype.applyPixelRatio = function (dashArray) {\n        var pixelRatio = this.pixelRatio;\n        return pixelRatio == 1\n            ? dashArray\n            : dashArray.map(function (dash) {\n                return dash * pixelRatio;\n            });\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} stride Stride.\n     * @protected\n     * @return {number} My end\n     */\n    CanvasBuilder.prototype.appendFlatPointCoordinates = function (flatCoordinates, stride) {\n        var extent = this.getBufferedMaxExtent();\n        var tmpCoord = this.tmpCoordinate_;\n        var coordinates = this.coordinates;\n        var myEnd = coordinates.length;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            tmpCoord[0] = flatCoordinates[i];\n            tmpCoord[1] = flatCoordinates[i + 1];\n            if (containsCoordinate(extent, tmpCoord)) {\n                coordinates[myEnd++] = tmpCoord[0];\n                coordinates[myEnd++] = tmpCoord[1];\n            }\n        }\n        return myEnd;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} closed Last input coordinate equals first.\n     * @param {boolean} skipFirst Skip first coordinate.\n     * @protected\n     * @return {number} My end.\n     */\n    CanvasBuilder.prototype.appendFlatLineCoordinates = function (flatCoordinates, offset, end, stride, closed, skipFirst) {\n        var coordinates = this.coordinates;\n        var myEnd = coordinates.length;\n        var extent = this.getBufferedMaxExtent();\n        if (skipFirst) {\n            offset += stride;\n        }\n        var lastXCoord = flatCoordinates[offset];\n        var lastYCoord = flatCoordinates[offset + 1];\n        var nextCoord = this.tmpCoordinate_;\n        var skipped = true;\n        var i, lastRel, nextRel;\n        for (i = offset + stride; i < end; i += stride) {\n            nextCoord[0] = flatCoordinates[i];\n            nextCoord[1] = flatCoordinates[i + 1];\n            nextRel = coordinateRelationship(extent, nextCoord);\n            if (nextRel !== lastRel) {\n                if (skipped) {\n                    coordinates[myEnd++] = lastXCoord;\n                    coordinates[myEnd++] = lastYCoord;\n                    skipped = false;\n                }\n                coordinates[myEnd++] = nextCoord[0];\n                coordinates[myEnd++] = nextCoord[1];\n            }\n            else if (nextRel === Relationship.INTERSECTING) {\n                coordinates[myEnd++] = nextCoord[0];\n                coordinates[myEnd++] = nextCoord[1];\n                skipped = false;\n            }\n            else {\n                skipped = true;\n            }\n            lastXCoord = nextCoord[0];\n            lastYCoord = nextCoord[1];\n            lastRel = nextRel;\n        }\n        // Last coordinate equals first or only one point to append:\n        if ((closed && skipped) || i === offset + stride) {\n            coordinates[myEnd++] = lastXCoord;\n            coordinates[myEnd++] = lastYCoord;\n        }\n        return myEnd;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @param {Array<number>} builderEnds Builder ends.\n     * @return {number} Offset.\n     */\n    CanvasBuilder.prototype.drawCustomCoordinates_ = function (flatCoordinates, offset, ends, stride, builderEnds) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var builderEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, false, false);\n            builderEnds.push(builderEnd);\n            offset = end;\n        }\n        return offset;\n    };\n    /**\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {Function} renderer Renderer.\n     * @param {Function} hitDetectionRenderer Renderer.\n     */\n    CanvasBuilder.prototype.drawCustom = function (geometry, feature, renderer, hitDetectionRenderer) {\n        this.beginGeometry(geometry, feature);\n        var type = geometry.getType();\n        var stride = geometry.getStride();\n        var builderBegin = this.coordinates.length;\n        var flatCoordinates, builderEnd, builderEnds, builderEndss;\n        var offset;\n        switch (type) {\n            case 'MultiPolygon':\n                flatCoordinates =\n                    /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getOrientedFlatCoordinates();\n                builderEndss = [];\n                var endss = \n                /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n                offset = 0;\n                for (var i = 0, ii = endss.length; i < ii; ++i) {\n                    var myEnds = [];\n                    offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n                    builderEndss.push(myEnds);\n                }\n                this.instructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEndss,\n                    geometry,\n                    renderer,\n                    inflateMultiCoordinatesArray,\n                ]);\n                this.hitDetectionInstructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEndss,\n                    geometry,\n                    hitDetectionRenderer || renderer,\n                    inflateMultiCoordinatesArray,\n                ]);\n                break;\n            case 'Polygon':\n            case 'MultiLineString':\n                builderEnds = [];\n                flatCoordinates =\n                    type == 'Polygon'\n                        ? /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates()\n                        : geometry.getFlatCoordinates();\n                offset = this.drawCustomCoordinates_(flatCoordinates, 0, \n                /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(), stride, builderEnds);\n                this.instructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEnds,\n                    geometry,\n                    renderer,\n                    inflateCoordinatesArray,\n                ]);\n                this.hitDetectionInstructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEnds,\n                    geometry,\n                    hitDetectionRenderer || renderer,\n                    inflateCoordinatesArray,\n                ]);\n                break;\n            case 'LineString':\n            case 'Circle':\n                flatCoordinates = geometry.getFlatCoordinates();\n                builderEnd = this.appendFlatLineCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n                this.instructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEnd,\n                    geometry,\n                    renderer,\n                    inflateCoordinates,\n                ]);\n                this.hitDetectionInstructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEnd,\n                    geometry,\n                    hitDetectionRenderer || renderer,\n                    inflateCoordinates,\n                ]);\n                break;\n            case 'MultiPoint':\n                flatCoordinates = geometry.getFlatCoordinates();\n                builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n                if (builderEnd > builderBegin) {\n                    this.instructions.push([\n                        CanvasInstruction.CUSTOM,\n                        builderBegin,\n                        builderEnd,\n                        geometry,\n                        renderer,\n                        inflateCoordinates,\n                    ]);\n                    this.hitDetectionInstructions.push([\n                        CanvasInstruction.CUSTOM,\n                        builderBegin,\n                        builderEnd,\n                        geometry,\n                        hitDetectionRenderer || renderer,\n                        inflateCoordinates,\n                    ]);\n                }\n                break;\n            case 'Point':\n                flatCoordinates = geometry.getFlatCoordinates();\n                this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n                builderEnd = this.coordinates.length;\n                this.instructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEnd,\n                    geometry,\n                    renderer,\n                ]);\n                this.hitDetectionInstructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEnd,\n                    geometry,\n                    hitDetectionRenderer || renderer,\n                ]);\n                break;\n            default:\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @protected\n     * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.beginGeometry = function (geometry, feature) {\n        this.beginGeometryInstruction1_ = [\n            CanvasInstruction.BEGIN_GEOMETRY,\n            feature,\n            0,\n            geometry,\n        ];\n        this.instructions.push(this.beginGeometryInstruction1_);\n        this.beginGeometryInstruction2_ = [\n            CanvasInstruction.BEGIN_GEOMETRY,\n            feature,\n            0,\n            geometry,\n        ];\n        this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n    };\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasBuilder.prototype.finish = function () {\n        return {\n            instructions: this.instructions,\n            hitDetectionInstructions: this.hitDetectionInstructions,\n            coordinates: this.coordinates,\n        };\n    };\n    /**\n     * Reverse the hit detection instructions.\n     */\n    CanvasBuilder.prototype.reverseHitDetectionInstructions = function () {\n        var hitDetectionInstructions = this.hitDetectionInstructions;\n        // step 1 - reverse array\n        hitDetectionInstructions.reverse();\n        // step 2 - reverse instructions within geometry blocks\n        var i;\n        var n = hitDetectionInstructions.length;\n        var instruction;\n        var type;\n        var begin = -1;\n        for (i = 0; i < n; ++i) {\n            instruction = hitDetectionInstructions[i];\n            type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n            if (type == CanvasInstruction.END_GEOMETRY) {\n                begin = i;\n            }\n            else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n                instruction[2] = i;\n                reverseSubArray(this.hitDetectionInstructions, begin, i);\n                begin = -1;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    CanvasBuilder.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        var state = this.state;\n        if (fillStyle) {\n            var fillStyleColor = fillStyle.getColor();\n            state.fillStyle = asColorLike(fillStyleColor ? fillStyleColor : defaultFillStyle);\n        }\n        else {\n            state.fillStyle = undefined;\n        }\n        if (strokeStyle) {\n            var strokeStyleColor = strokeStyle.getColor();\n            state.strokeStyle = asColorLike(strokeStyleColor ? strokeStyleColor : defaultStrokeStyle);\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            state.lineCap =\n                strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            state.lineDash = strokeStyleLineDash\n                ? strokeStyleLineDash.slice()\n                : defaultLineDash;\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            state.lineDashOffset = strokeStyleLineDashOffset\n                ? strokeStyleLineDashOffset\n                : defaultLineDashOffset;\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            state.lineJoin =\n                strokeStyleLineJoin !== undefined\n                    ? strokeStyleLineJoin\n                    : defaultLineJoin;\n            var strokeStyleWidth = strokeStyle.getWidth();\n            state.lineWidth =\n                strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            state.miterLimit =\n                strokeStyleMiterLimit !== undefined\n                    ? strokeStyleMiterLimit\n                    : defaultMiterLimit;\n            if (state.lineWidth > this.maxLineWidth) {\n                this.maxLineWidth = state.lineWidth;\n                // invalidate the buffered max extent cache\n                this.bufferedMaxExtent_ = null;\n            }\n        }\n        else {\n            state.strokeStyle = undefined;\n            state.lineCap = undefined;\n            state.lineDash = null;\n            state.lineDashOffset = undefined;\n            state.lineJoin = undefined;\n            state.lineWidth = undefined;\n            state.miterLimit = undefined;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Fill instruction.\n     */\n    CanvasBuilder.prototype.createFill = function (state) {\n        var fillStyle = state.fillStyle;\n        /** @type {Array<*>} */\n        var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n        if (typeof fillStyle !== 'string') {\n            // Fill is a pattern or gradient - align it!\n            fillInstruction.push(true);\n        }\n        return fillInstruction;\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     */\n    CanvasBuilder.prototype.applyStroke = function (state) {\n        this.instructions.push(this.createStroke(state));\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Stroke instruction.\n     */\n    CanvasBuilder.prototype.createStroke = function (state) {\n        return [\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle,\n            state.lineWidth * this.pixelRatio,\n            state.lineCap,\n            state.lineJoin,\n            state.miterLimit,\n            this.applyPixelRatio(state.lineDash),\n            state.lineDashOffset * this.pixelRatio,\n        ];\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n     */\n    CanvasBuilder.prototype.updateFillStyle = function (state, createFill) {\n        var fillStyle = state.fillStyle;\n        if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n            if (fillStyle !== undefined) {\n                this.instructions.push(createFill.call(this, state));\n            }\n            state.currentFillStyle = fillStyle;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n     */\n    CanvasBuilder.prototype.updateStrokeStyle = function (state, applyStroke) {\n        var strokeStyle = state.strokeStyle;\n        var lineCap = state.lineCap;\n        var lineDash = state.lineDash;\n        var lineDashOffset = state.lineDashOffset;\n        var lineJoin = state.lineJoin;\n        var lineWidth = state.lineWidth;\n        var miterLimit = state.miterLimit;\n        if (state.currentStrokeStyle != strokeStyle ||\n            state.currentLineCap != lineCap ||\n            (lineDash != state.currentLineDash &&\n                !equals(state.currentLineDash, lineDash)) ||\n            state.currentLineDashOffset != lineDashOffset ||\n            state.currentLineJoin != lineJoin ||\n            state.currentLineWidth != lineWidth ||\n            state.currentMiterLimit != miterLimit) {\n            if (strokeStyle !== undefined) {\n                applyStroke.call(this, state);\n            }\n            state.currentStrokeStyle = strokeStyle;\n            state.currentLineCap = lineCap;\n            state.currentLineDash = lineDash;\n            state.currentLineDashOffset = lineDashOffset;\n            state.currentLineJoin = lineJoin;\n            state.currentLineWidth = lineWidth;\n            state.currentMiterLimit = miterLimit;\n        }\n    };\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.endGeometry = function (feature) {\n        this.beginGeometryInstruction1_[2] = this.instructions.length;\n        this.beginGeometryInstruction1_ = null;\n        this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n        this.beginGeometryInstruction2_ = null;\n        var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n        this.instructions.push(endGeometryInstruction);\n        this.hitDetectionInstructions.push(endGeometryInstruction);\n    };\n    /**\n     * Get the buffered rendering extent.  Rendering will be clipped to the extent\n     * provided to the constructor.  To account for symbolizers that may intersect\n     * this extent, we calculate a buffered extent (e.g. based on stroke width).\n     * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n     * @protected\n     */\n    CanvasBuilder.prototype.getBufferedMaxExtent = function () {\n        if (!this.bufferedMaxExtent_) {\n            this.bufferedMaxExtent_ = clone(this.maxExtent);\n            if (this.maxLineWidth > 0) {\n                var width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n                buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n            }\n        }\n        return this.bufferedMaxExtent_;\n    };\n    return CanvasBuilder;\n}(VectorContext));\nexport default CanvasBuilder;\n//# sourceMappingURL=Builder.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n/**\n * @enum {number}\n */\nvar Instruction = {\n    BEGIN_GEOMETRY: 0,\n    BEGIN_PATH: 1,\n    CIRCLE: 2,\n    CLOSE_PATH: 3,\n    CUSTOM: 4,\n    DRAW_CHARS: 5,\n    DRAW_IMAGE: 6,\n    END_GEOMETRY: 7,\n    FILL: 8,\n    MOVE_TO_LINE_TO: 9,\n    SET_FILL_STYLE: 10,\n    SET_STROKE_STYLE: 11,\n    STROKE: 12,\n};\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\nexport default Instruction;\n//# sourceMappingURL=Instruction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nvar CanvasImageBuilder = /** @class */ (function (_super) {\n    __extends(CanvasImageBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasImageBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.imagePixelRatio_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorY_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.height_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.opacity_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originY_ = undefined;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.rotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size|undefined}\n         */\n        _this.scale_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.width_ = undefined;\n        /**\n         * @private\n         * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n         */\n        _this.declutterMode_ = undefined;\n        /**\n         * Data shared with a text builder for combined decluttering.\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterImageWithText}\n         */\n        _this.declutterImageWithText_ = undefined;\n        return _this;\n    }\n    /**\n     * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasImageBuilder.prototype.drawPoint = function (pointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(pointGeometry, feature);\n        var flatCoordinates = pointGeometry.getFlatCoordinates();\n        var stride = pointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_ * this.imagePixelRatio_,\n            this.anchorY_ * this.imagePixelRatio_,\n            Math.ceil(this.height_ * this.imagePixelRatio_),\n            this.opacity_,\n            this.originX_ * this.imagePixelRatio_,\n            this.originY_ * this.imagePixelRatio_,\n            this.rotateWithView_,\n            this.rotation_,\n            [\n                (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n                (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n            ],\n            Math.ceil(this.width_ * this.imagePixelRatio_),\n            this.declutterMode_,\n            this.declutterImageWithText_,\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_,\n            this.anchorY_,\n            this.height_,\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            this.scale_,\n            this.width_,\n            this.declutterMode_,\n            this.declutterImageWithText_,\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasImageBuilder.prototype.drawMultiPoint = function (multiPointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(multiPointGeometry, feature);\n        var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n        var stride = multiPointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_ * this.imagePixelRatio_,\n            this.anchorY_ * this.imagePixelRatio_,\n            Math.ceil(this.height_ * this.imagePixelRatio_),\n            this.opacity_,\n            this.originX_ * this.imagePixelRatio_,\n            this.originY_ * this.imagePixelRatio_,\n            this.rotateWithView_,\n            this.rotation_,\n            [\n                (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n                (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n            ],\n            Math.ceil(this.width_ * this.imagePixelRatio_),\n            this.declutterMode_,\n            this.declutterImageWithText_,\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_,\n            this.anchorY_,\n            this.height_,\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            this.scale_,\n            this.width_,\n            this.declutterMode_,\n            this.declutterImageWithText_,\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasImageBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        // FIXME this doesn't really protect us against further calls to draw*Geometry\n        this.anchorX_ = undefined;\n        this.anchorY_ = undefined;\n        this.hitDetectionImage_ = null;\n        this.image_ = null;\n        this.imagePixelRatio_ = undefined;\n        this.height_ = undefined;\n        this.scale_ = undefined;\n        this.opacity_ = undefined;\n        this.originX_ = undefined;\n        this.originY_ = undefined;\n        this.rotateWithView_ = undefined;\n        this.rotation_ = undefined;\n        this.width_ = undefined;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n     * @param {Object} [opt_sharedData] Shared data.\n     */\n    CanvasImageBuilder.prototype.setImageStyle = function (imageStyle, opt_sharedData) {\n        var anchor = imageStyle.getAnchor();\n        var size = imageStyle.getSize();\n        var origin = imageStyle.getOrigin();\n        this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n        this.anchorX_ = anchor[0];\n        this.anchorY_ = anchor[1];\n        this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n        this.image_ = imageStyle.getImage(this.pixelRatio);\n        this.height_ = size[1];\n        this.opacity_ = imageStyle.getOpacity();\n        this.originX_ = origin[0];\n        this.originY_ = origin[1];\n        this.rotateWithView_ = imageStyle.getRotateWithView();\n        this.rotation_ = imageStyle.getRotation();\n        this.scale_ = imageStyle.getScaleArray();\n        this.width_ = size[0];\n        this.declutterMode_ = imageStyle.getDeclutterMode();\n        this.declutterImageWithText_ = opt_sharedData;\n    };\n    return CanvasImageBuilder;\n}(CanvasBuilder));\nexport default CanvasImageBuilder;\n//# sourceMappingURL=ImageBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, { beginPathInstruction, strokeInstruction, } from './Instruction.js';\nimport { defaultLineDash, defaultLineDashOffset } from '../canvas.js';\nvar CanvasLineStringBuilder = /** @class */ (function (_super) {\n    __extends(CanvasLineStringBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasLineStringBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} end.\n     */\n    CanvasLineStringBuilder.prototype.drawFlatCoordinates_ = function (flatCoordinates, offset, end, stride) {\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, false, false);\n        var moveToLineToInstruction = [\n            CanvasInstruction.MOVE_TO_LINE_TO,\n            myBegin,\n            myEnd,\n        ];\n        this.instructions.push(moveToLineToInstruction);\n        this.hitDetectionInstructions.push(moveToLineToInstruction);\n        return end;\n    };\n    /**\n     * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasLineStringBuilder.prototype.drawLineString = function (lineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(lineStringGeometry, feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle,\n            state.lineWidth,\n            state.lineCap,\n            state.lineJoin,\n            state.miterLimit,\n            defaultLineDash,\n            defaultLineDashOffset,\n        ], beginPathInstruction);\n        var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n        var stride = lineStringGeometry.getStride();\n        this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasLineStringBuilder.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(multiLineStringGeometry, feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle,\n            state.lineWidth,\n            state.lineCap,\n            state.lineJoin,\n            state.miterLimit,\n            state.lineDash,\n            state.lineDashOffset,\n        ], beginPathInstruction);\n        var ends = multiLineStringGeometry.getEnds();\n        var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n        var stride = multiLineStringGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinates_(flatCoordinates, offset, \n            /** @type {number} */ (ends[i]), stride);\n        }\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasLineStringBuilder.prototype.finish = function () {\n        var state = this.state;\n        if (state.lastStroke != undefined &&\n            state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n        }\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     */\n    CanvasLineStringBuilder.prototype.applyStroke = function (state) {\n        if (state.lastStroke != undefined &&\n            state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n            state.lastStroke = this.coordinates.length;\n        }\n        state.lastStroke = 0;\n        _super.prototype.applyStroke.call(this, state);\n        this.instructions.push(beginPathInstruction);\n    };\n    return CanvasLineStringBuilder;\n}(CanvasBuilder));\nexport default CanvasLineStringBuilder;\n//# sourceMappingURL=LineStringBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, { beginPathInstruction, closePathInstruction, fillInstruction, strokeInstruction, } from './Instruction.js';\nimport { defaultFillStyle } from '../canvas.js';\nimport { snap } from '../../geom/flat/simplify.js';\nvar CanvasPolygonBuilder = /** @class */ (function (_super) {\n    __extends(CanvasPolygonBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasPolygonBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasPolygonBuilder.prototype.drawFlatCoordinatess_ = function (flatCoordinates, offset, ends, stride) {\n        var state = this.state;\n        var fill = state.fillStyle !== undefined;\n        var stroke = state.strokeStyle !== undefined;\n        var numEnds = ends.length;\n        this.instructions.push(beginPathInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction);\n        for (var i = 0; i < numEnds; ++i) {\n            var end = ends[i];\n            var myBegin = this.coordinates.length;\n            var myEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n            var moveToLineToInstruction = [\n                CanvasInstruction.MOVE_TO_LINE_TO,\n                myBegin,\n                myEnd,\n            ];\n            this.instructions.push(moveToLineToInstruction);\n            this.hitDetectionInstructions.push(moveToLineToInstruction);\n            if (stroke) {\n                // Performance optimization: only call closePath() when we have a stroke.\n                // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n                this.instructions.push(closePathInstruction);\n                this.hitDetectionInstructions.push(closePathInstruction);\n            }\n            offset = end;\n        }\n        if (fill) {\n            this.instructions.push(fillInstruction);\n            this.hitDetectionInstructions.push(fillInstruction);\n        }\n        if (stroke) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        return offset;\n    };\n    /**\n     * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     */\n    CanvasPolygonBuilder.prototype.drawCircle = function (circleGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(circleGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle,\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle,\n                state.lineWidth,\n                state.lineCap,\n                state.lineJoin,\n                state.miterLimit,\n                state.lineDash,\n                state.lineDashOffset,\n            ]);\n        }\n        var flatCoordinates = circleGeometry.getFlatCoordinates();\n        var stride = circleGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        this.appendFlatLineCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n        var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n        this.instructions.push(beginPathInstruction, circleInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n        if (state.fillStyle !== undefined) {\n            this.instructions.push(fillInstruction);\n            this.hitDetectionInstructions.push(fillInstruction);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasPolygonBuilder.prototype.drawPolygon = function (polygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(polygonGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle,\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle,\n                state.lineWidth,\n                state.lineCap,\n                state.lineJoin,\n                state.miterLimit,\n                state.lineDash,\n                state.lineDashOffset,\n            ]);\n        }\n        var ends = polygonGeometry.getEnds();\n        var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n        var stride = polygonGeometry.getStride();\n        this.drawFlatCoordinatess_(flatCoordinates, 0, \n        /** @type {Array<number>} */ (ends), stride);\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasPolygonBuilder.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(multiPolygonGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle,\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle,\n                state.lineWidth,\n                state.lineCap,\n                state.lineJoin,\n                state.miterLimit,\n                state.lineDash,\n                state.lineDashOffset,\n            ]);\n        }\n        var endss = multiPolygonGeometry.getEndss();\n        var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n        var stride = multiPolygonGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasPolygonBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        // We want to preserve topology when drawing polygons.  Polygons are\n        // simplified using quantization and point elimination. However, we might\n        // have received a mix of quantized and non-quantized geometries, so ensure\n        // that all are quantized by quantizing all coordinates in the batch.\n        var tolerance = this.tolerance;\n        if (tolerance !== 0) {\n            var coordinates = this.coordinates;\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = snap(coordinates[i], tolerance);\n            }\n        }\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @private\n     */\n    CanvasPolygonBuilder.prototype.setFillStrokeStyles_ = function () {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        if (fillStyle !== undefined) {\n            this.updateFillStyle(state, this.createFill);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.updateStrokeStyle(state, this.applyStroke);\n        }\n    };\n    return CanvasPolygonBuilder;\n}(CanvasBuilder));\nexport default CanvasPolygonBuilder;\n//# sourceMappingURL=PolygonBuilder.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n    var chunkStart = offset;\n    var chunkEnd = offset;\n    var chunkM = 0;\n    var m = 0;\n    var start = offset;\n    var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n    for (i = offset; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        if (x1 !== undefined) {\n            x23 = x2 - x1;\n            y23 = y2 - y1;\n            m23 = Math.sqrt(x23 * x23 + y23 * y23);\n            if (x12 !== undefined) {\n                m += m12;\n                acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n                if (acos > maxAngle) {\n                    if (m > chunkM) {\n                        chunkM = m;\n                        chunkStart = start;\n                        chunkEnd = i;\n                    }\n                    m = 0;\n                    start = i - stride;\n                }\n            }\n            m12 = m23;\n            x12 = x23;\n            y12 = y23;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    m += m23;\n    return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n//# sourceMappingURL=straightchunk.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { defaultFillStyle, defaultFont, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultPadding, defaultStrokeStyle, defaultTextAlign, defaultTextBaseline, registerFont, } from '../canvas.js';\nimport { getUid } from '../../util.js';\nimport { intersects } from '../../extent.js';\nimport { matchingChunk } from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {\n    'left': 0,\n    'end': 0,\n    'center': 0.5,\n    'right': 1,\n    'start': 1,\n    'top': 0,\n    'middle': 0.5,\n    'hanging': 0.2,\n    'alphabetic': 0.8,\n    'ideographic': 0.8,\n    'bottom': 1,\n};\nvar CanvasTextBuilder = /** @class */ (function (_super) {\n    __extends(CanvasTextBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasTextBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {Array<HTMLCanvasElement>}\n         */\n        _this.labels_ = null;\n        /**\n         * @private\n         * @type {string|Array<string>}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.textRotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        _this.fillStates = {};\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        _this.strokeStates = {};\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        _this.textStates = {};\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.textKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.fillKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.strokeKey_ = '';\n        /**\n         * Data shared with an image builder for combined decluttering.\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterImageWithText}\n         */\n        _this.declutterImageWithText_ = undefined;\n        return _this;\n    }\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasTextBuilder.prototype.finish = function () {\n        var instructions = _super.prototype.finish.call(this);\n        instructions.textStates = this.textStates;\n        instructions.fillStates = this.fillStates;\n        instructions.strokeStates = this.strokeStates;\n        return instructions;\n    };\n    /**\n     * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasTextBuilder.prototype.drawText = function (geometry, feature) {\n        var fillState = this.textFillState_;\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n            return;\n        }\n        var coordinates = this.coordinates;\n        var begin = coordinates.length;\n        var geometryType = geometry.getType();\n        var flatCoordinates = null;\n        var stride = geometry.getStride();\n        if (textState.placement === TextPlacement.LINE &&\n            (geometryType == 'LineString' ||\n                geometryType == 'MultiLineString' ||\n                geometryType == 'Polygon' ||\n                geometryType == 'MultiPolygon')) {\n            if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n                return;\n            }\n            var ends = void 0;\n            flatCoordinates = geometry.getFlatCoordinates();\n            if (geometryType == 'LineString') {\n                ends = [flatCoordinates.length];\n            }\n            else if (geometryType == 'MultiLineString') {\n                ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds();\n            }\n            else if (geometryType == 'Polygon') {\n                ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n                    .getEnds()\n                    .slice(0, 1);\n            }\n            else if (geometryType == 'MultiPolygon') {\n                var endss = \n                /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n                ends = [];\n                for (var i = 0, ii = endss.length; i < ii; ++i) {\n                    ends.push(endss[i][0]);\n                }\n            }\n            this.beginGeometry(geometry, feature);\n            var textAlign = textState.textAlign;\n            // No `justify` support for line placement.\n            var flatOffset = 0;\n            var flatEnd = void 0;\n            for (var o = 0, oo = ends.length; o < oo; ++o) {\n                if (textAlign == undefined) {\n                    var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n                    flatOffset = range[0];\n                    flatEnd = range[1];\n                }\n                else {\n                    flatEnd = ends[o];\n                }\n                for (var i = flatOffset; i < flatEnd; i += stride) {\n                    coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n                }\n                var end = coordinates.length;\n                flatOffset = ends[o];\n                this.drawChars_(begin, end);\n                begin = end;\n            }\n            this.endGeometry(feature);\n        }\n        else {\n            var geometryWidths = textState.overflow ? null : [];\n            switch (geometryType) {\n                case 'Point':\n                case 'MultiPoint':\n                    flatCoordinates =\n                        /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry).getFlatCoordinates();\n                    break;\n                case 'LineString':\n                    flatCoordinates =\n                        /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n                    break;\n                case 'Circle':\n                    flatCoordinates =\n                        /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n                    break;\n                case 'MultiLineString':\n                    flatCoordinates =\n                        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n                    stride = 2;\n                    break;\n                case 'Polygon':\n                    flatCoordinates =\n                        /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n                    if (!textState.overflow) {\n                        geometryWidths.push(flatCoordinates[2] / this.resolution);\n                    }\n                    stride = 3;\n                    break;\n                case 'MultiPolygon':\n                    var interiorPoints = \n                    /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n                    flatCoordinates = [];\n                    for (var i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n                        if (!textState.overflow) {\n                            geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n                        }\n                        flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n                    }\n                    if (flatCoordinates.length === 0) {\n                        return;\n                    }\n                    stride = 2;\n                    break;\n                default:\n            }\n            var end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n            if (end === begin) {\n                return;\n            }\n            if (geometryWidths &&\n                (end - begin) / 2 !== flatCoordinates.length / stride) {\n                var beg_1 = begin / 2;\n                geometryWidths = geometryWidths.filter(function (w, i) {\n                    var keep = coordinates[(beg_1 + i) * 2] === flatCoordinates[i * stride] &&\n                        coordinates[(beg_1 + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n                    if (!keep) {\n                        --beg_1;\n                    }\n                    return keep;\n                });\n            }\n            this.saveTextStates_();\n            if (textState.backgroundFill || textState.backgroundStroke) {\n                this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n                if (textState.backgroundFill) {\n                    this.updateFillStyle(this.state, this.createFill);\n                    this.hitDetectionInstructions.push(this.createFill(this.state));\n                }\n                if (textState.backgroundStroke) {\n                    this.updateStrokeStyle(this.state, this.applyStroke);\n                    this.hitDetectionInstructions.push(this.createStroke(this.state));\n                }\n            }\n            this.beginGeometry(geometry, feature);\n            // adjust padding for negative scale\n            var padding = textState.padding;\n            if (padding != defaultPadding &&\n                (textState.scale[0] < 0 || textState.scale[1] < 0)) {\n                var p0 = textState.padding[0];\n                var p1 = textState.padding[1];\n                var p2 = textState.padding[2];\n                var p3 = textState.padding[3];\n                if (textState.scale[0] < 0) {\n                    p1 = -p1;\n                    p3 = -p3;\n                }\n                if (textState.scale[1] < 0) {\n                    p0 = -p0;\n                    p2 = -p2;\n                }\n                padding = [p0, p1, p2, p3];\n            }\n            // The image is unknown at this stage so we pass null; it will be computed at render time.\n            // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n            // render time.\n            var pixelRatio_1 = this.pixelRatio;\n            this.instructions.push([\n                CanvasInstruction.DRAW_IMAGE,\n                begin,\n                end,\n                null,\n                NaN,\n                NaN,\n                NaN,\n                1,\n                0,\n                0,\n                this.textRotateWithView_,\n                this.textRotation_,\n                [1, 1],\n                NaN,\n                undefined,\n                this.declutterImageWithText_,\n                padding == defaultPadding\n                    ? defaultPadding\n                    : padding.map(function (p) {\n                        return p * pixelRatio_1;\n                    }),\n                !!textState.backgroundFill,\n                !!textState.backgroundStroke,\n                this.text_,\n                this.textKey_,\n                this.strokeKey_,\n                this.fillKey_,\n                this.textOffsetX_,\n                this.textOffsetY_,\n                geometryWidths,\n            ]);\n            var scale = 1 / pixelRatio_1;\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.DRAW_IMAGE,\n                begin,\n                end,\n                null,\n                NaN,\n                NaN,\n                NaN,\n                1,\n                0,\n                0,\n                this.textRotateWithView_,\n                this.textRotation_,\n                [scale, scale],\n                NaN,\n                undefined,\n                this.declutterImageWithText_,\n                padding,\n                !!textState.backgroundFill,\n                !!textState.backgroundStroke,\n                this.text_,\n                this.textKey_,\n                this.strokeKey_,\n                this.fillKey_,\n                this.textOffsetX_,\n                this.textOffsetY_,\n                geometryWidths,\n            ]);\n            this.endGeometry(feature);\n        }\n    };\n    /**\n     * @private\n     */\n    CanvasTextBuilder.prototype.saveTextStates_ = function () {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var fillState = this.textFillState_;\n        var strokeKey = this.strokeKey_;\n        if (strokeState) {\n            if (!(strokeKey in this.strokeStates)) {\n                this.strokeStates[strokeKey] = {\n                    strokeStyle: strokeState.strokeStyle,\n                    lineCap: strokeState.lineCap,\n                    lineDashOffset: strokeState.lineDashOffset,\n                    lineWidth: strokeState.lineWidth,\n                    lineJoin: strokeState.lineJoin,\n                    miterLimit: strokeState.miterLimit,\n                    lineDash: strokeState.lineDash,\n                };\n            }\n        }\n        var textKey = this.textKey_;\n        if (!(textKey in this.textStates)) {\n            this.textStates[textKey] = {\n                font: textState.font,\n                textAlign: textState.textAlign || defaultTextAlign,\n                justify: textState.justify,\n                textBaseline: textState.textBaseline || defaultTextBaseline,\n                scale: textState.scale,\n            };\n        }\n        var fillKey = this.fillKey_;\n        if (fillState) {\n            if (!(fillKey in this.fillStates)) {\n                this.fillStates[fillKey] = {\n                    fillStyle: fillState.fillStyle,\n                };\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {number} begin Begin.\n     * @param {number} end End.\n     */\n    CanvasTextBuilder.prototype.drawChars_ = function (begin, end) {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var strokeKey = this.strokeKey_;\n        var textKey = this.textKey_;\n        var fillKey = this.fillKey_;\n        this.saveTextStates_();\n        var pixelRatio = this.pixelRatio;\n        var baseline = TEXT_ALIGN[textState.textBaseline];\n        var offsetY = this.textOffsetY_ * pixelRatio;\n        var text = this.text_;\n        var strokeWidth = strokeState\n            ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n            : 0;\n        this.instructions.push([\n            CanvasInstruction.DRAW_CHARS,\n            begin,\n            end,\n            baseline,\n            textState.overflow,\n            fillKey,\n            textState.maxAngle,\n            pixelRatio,\n            offsetY,\n            strokeKey,\n            strokeWidth * pixelRatio,\n            text,\n            textKey,\n            1,\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_CHARS,\n            begin,\n            end,\n            baseline,\n            textState.overflow,\n            fillKey,\n            textState.maxAngle,\n            1,\n            offsetY,\n            strokeKey,\n            strokeWidth,\n            text,\n            textKey,\n            1 / pixelRatio,\n        ]);\n    };\n    /**\n     * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n     * @param {Object} [opt_sharedData] Shared data.\n     */\n    CanvasTextBuilder.prototype.setTextStyle = function (textStyle, opt_sharedData) {\n        var textState, fillState, strokeState;\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                fillState = null;\n                this.textFillState_ = fillState;\n            }\n            else {\n                fillState = this.textFillState_;\n                if (!fillState) {\n                    fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n                    this.textFillState_ = fillState;\n                }\n                fillState.fillStyle = asColorLike(textFillStyle.getColor() || defaultFillStyle);\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                strokeState = null;\n                this.textStrokeState_ = strokeState;\n            }\n            else {\n                strokeState = this.textStrokeState_;\n                if (!strokeState) {\n                    strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n                    this.textStrokeState_ = strokeState;\n                }\n                var lineDash = textStrokeStyle.getLineDash();\n                var lineDashOffset = textStrokeStyle.getLineDashOffset();\n                var lineWidth = textStrokeStyle.getWidth();\n                var miterLimit = textStrokeStyle.getMiterLimit();\n                strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n                strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n                strokeState.lineDashOffset =\n                    lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n                strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n                strokeState.lineWidth =\n                    lineWidth === undefined ? defaultLineWidth : lineWidth;\n                strokeState.miterLimit =\n                    miterLimit === undefined ? defaultMiterLimit : miterLimit;\n                strokeState.strokeStyle = asColorLike(textStrokeStyle.getColor() || defaultStrokeStyle);\n            }\n            textState = this.textState_;\n            var font = textStyle.getFont() || defaultFont;\n            registerFont(font);\n            var textScale = textStyle.getScaleArray();\n            textState.overflow = textStyle.getOverflow();\n            textState.font = font;\n            textState.maxAngle = textStyle.getMaxAngle();\n            textState.placement = textStyle.getPlacement();\n            textState.textAlign = textStyle.getTextAlign();\n            textState.justify = textStyle.getJustify();\n            textState.textBaseline =\n                textStyle.getTextBaseline() || defaultTextBaseline;\n            textState.backgroundFill = textStyle.getBackgroundFill();\n            textState.backgroundStroke = textStyle.getBackgroundStroke();\n            textState.padding = textStyle.getPadding() || defaultPadding;\n            textState.scale = textScale === undefined ? [1, 1] : textScale;\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            this.text_ = textStyle.getText() || '';\n            this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n            this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n            this.textRotateWithView_ =\n                textRotateWithView === undefined ? false : textRotateWithView;\n            this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n            this.strokeKey_ = strokeState\n                ? (typeof strokeState.strokeStyle == 'string'\n                    ? strokeState.strokeStyle\n                    : getUid(strokeState.strokeStyle)) +\n                    strokeState.lineCap +\n                    strokeState.lineDashOffset +\n                    '|' +\n                    strokeState.lineWidth +\n                    strokeState.lineJoin +\n                    strokeState.miterLimit +\n                    '[' +\n                    strokeState.lineDash.join() +\n                    ']'\n                : '';\n            this.textKey_ =\n                textState.font +\n                    textState.scale +\n                    (textState.textAlign || '?') +\n                    (textState.justify || '?') +\n                    (textState.textBaseline || '?');\n            this.fillKey_ = fillState\n                ? typeof fillState.fillStyle == 'string'\n                    ? fillState.fillStyle\n                    : '|' + getUid(fillState.fillStyle)\n                : '';\n        }\n        this.declutterImageWithText_ = opt_sharedData;\n    };\n    return CanvasTextBuilder;\n}(CanvasBuilder));\nexport default CanvasTextBuilder;\n//# sourceMappingURL=TextBuilder.js.map","/**\n * @module ol/render/canvas/BuilderGroup\n */\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nvar BATCH_CONSTRUCTORS = {\n    'Circle': PolygonBuilder,\n    'Default': Builder,\n    'Image': ImageBuilder,\n    'LineString': LineStringBuilder,\n    'Polygon': PolygonBuilder,\n    'Text': TextBuilder,\n};\nvar BuilderGroup = /** @class */ (function () {\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function BuilderGroup(tolerance, maxExtent, resolution, pixelRatio) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.tolerance_ = tolerance;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n         */\n        this.buildersByZIndex_ = {};\n    }\n    /**\n     * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n     */\n    BuilderGroup.prototype.finish = function () {\n        var builderInstructions = {};\n        for (var zKey in this.buildersByZIndex_) {\n            builderInstructions[zKey] = builderInstructions[zKey] || {};\n            var builders = this.buildersByZIndex_[zKey];\n            for (var builderKey in builders) {\n                var builderInstruction = builders[builderKey].finish();\n                builderInstructions[zKey][builderKey] = builderInstruction;\n            }\n        }\n        return builderInstructions;\n    };\n    /**\n     * @param {number|undefined} zIndex Z index.\n     * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n     * @return {import(\"../VectorContext.js\").default} Replay.\n     */\n    BuilderGroup.prototype.getBuilder = function (zIndex, builderType) {\n        var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n        var replays = this.buildersByZIndex_[zIndexKey];\n        if (replays === undefined) {\n            replays = {};\n            this.buildersByZIndex_[zIndexKey] = replays;\n        }\n        var replay = replays[builderType];\n        if (replay === undefined) {\n            var Constructor = BATCH_CONSTRUCTORS[builderType];\n            replay = new Constructor(this.tolerance_, this.maxExtent_, this.resolution_, this.pixelRatio_);\n            replays[builderType] = replay;\n        }\n        return replay;\n    };\n    return BuilderGroup;\n}());\nexport default BuilderGroup;\n//# sourceMappingURL=BuilderGroup.js.map","/**\n * @module ol/geom/flat/textpath\n */\nimport { lerp } from '../../math.js';\nimport { rotate } from './transform.js';\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(flatCoordinates, offset, end, stride, text, startM, maxAngle, scale, measureAndCacheTextWidth, font, cache, rotation) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var x1 = 0;\n    var y1 = 0;\n    var segmentLength = 0;\n    var segmentM = 0;\n    function advance() {\n        x1 = x2;\n        y1 = y2;\n        offset += stride;\n        x2 = flatCoordinates[offset];\n        y2 = flatCoordinates[offset + 1];\n        segmentM += segmentLength;\n        segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    }\n    do {\n        advance();\n    } while (offset < end - stride && segmentM + segmentLength < startM);\n    var interpolate = segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n    var beginX = lerp(x1, x2, interpolate);\n    var beginY = lerp(y1, y2, interpolate);\n    var startOffset = offset - stride;\n    var startLength = segmentM;\n    var endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n    while (offset < end - stride && segmentM + segmentLength < endM) {\n        advance();\n    }\n    interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n    var endX = lerp(x1, x2, interpolate);\n    var endY = lerp(y1, y2, interpolate);\n    // Keep text upright\n    var reverse;\n    if (rotation) {\n        var flat = [beginX, beginY, endX, endY];\n        rotate(flat, 0, 4, 2, rotation, flat, flat);\n        reverse = flat[0] > flat[2];\n    }\n    else {\n        reverse = beginX > endX;\n    }\n    var PI = Math.PI;\n    var result = [];\n    var singleSegment = startOffset + stride === offset;\n    offset = startOffset;\n    segmentLength = 0;\n    segmentM = startLength;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    var previousAngle;\n    // All on the same segment\n    if (singleSegment) {\n        advance();\n        previousAngle = Math.atan2(y2 - y1, x2 - x1);\n        if (reverse) {\n            previousAngle += previousAngle > 0 ? -PI : PI;\n        }\n        var x = (endX + beginX) / 2;\n        var y = (endY + beginY) / 2;\n        result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n        return result;\n    }\n    // rendering across line segments\n    text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n    for (var i = 0, ii = text.length; i < ii;) {\n        advance();\n        var angle = Math.atan2(y2 - y1, x2 - x1);\n        if (reverse) {\n            angle += angle > 0 ? -PI : PI;\n        }\n        if (previousAngle !== undefined) {\n            var delta = angle - previousAngle;\n            delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n            if (Math.abs(delta) > maxAngle) {\n                return null;\n            }\n        }\n        previousAngle = angle;\n        var iStart = i;\n        var charLength = 0;\n        for (; i < ii; ++i) {\n            var index = reverse ? ii - i - 1 : i;\n            var len = scale * measureAndCacheTextWidth(font, text[index], cache);\n            if (offset + stride < end &&\n                segmentM + segmentLength < startM + charLength + len / 2) {\n                break;\n            }\n            charLength += len;\n        }\n        if (i === iStart) {\n            continue;\n        }\n        var chars = reverse\n            ? text.substring(ii - iStart, ii - i)\n            : text.substring(iStart, i);\n        interpolate =\n            segmentLength === 0\n                ? 0\n                : (startM + charLength / 2 - segmentM) / segmentLength;\n        var x = lerp(x1, x2, interpolate);\n        var y = lerp(y1, y2, interpolate);\n        result.push([x, y, charLength / 2, angle, chars]);\n        startM += charLength;\n    }\n    return result;\n}\n//# sourceMappingURL=textpath.js.map","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport { TEXT_ALIGN } from './TextBuilder.js';\nimport { WORKER_OFFSCREEN_CANVAS } from '../../has.js';\nimport { apply as applyTransform, compose as composeTransform, create as createTransform, setFromArray as transformSetFromArray, } from '../../transform.js';\nimport { createEmpty, createOrUpdate, intersects } from '../../extent.js';\nimport { defaultPadding, defaultTextAlign, defaultTextBaseline, drawImageOrLabel, getTextDimensions, measureAndCacheTextWidth, } from '../canvas.js';\nimport { drawTextOnPath } from '../../geom/flat/textpath.js';\nimport { equals } from '../../array.js';\nimport { lineStringLength } from '../../geom/flat/length.js';\nimport { transform2D } from '../../geom/flat/transform.js';\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nvar tmpExtent = createEmpty();\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p4 = [];\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n    return replayImageOrLabelArgs[3].declutterBox;\n}\nvar rtlRegEx = new RegExp(\n/* eslint-disable prettier/prettier */\n'[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n    ']'\n/* eslint-enable prettier/prettier */\n);\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n    if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n        align = align === 'start' ? 'left' : 'right';\n    }\n    return TEXT_ALIGN[align];\n}\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n    if (i > 0) {\n        acc.push('\\n', '');\n    }\n    acc.push(line, '');\n    return acc;\n}\nvar Executor = /** @class */ (function () {\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The replay can have overlapping geometries.\n     * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n     */\n    function Executor(resolution, pixelRatio, overlaps, instructions) {\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        this.overlaps = overlaps;\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        this.resolution = resolution;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.alignFill_;\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        this.instructions = instructions.instructions;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        this.coordinates = instructions.coordinates;\n        /**\n         * @private\n         * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n         */\n        this.coordinateCache_ = {};\n        /**\n         * @private\n         * @type {!import(\"../../transform.js\").Transform}\n         */\n        this.renderedTransform_ = createTransform();\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.pixelCoordinates_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.viewRotation_ = 0;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        this.fillStates = instructions.fillStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        this.strokeStates = instructions.strokeStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        this.textStates = instructions.textStates || {};\n        /**\n         * @private\n         * @type {Object<string, Object<string, number>>}\n         */\n        this.widths_ = {};\n        /**\n         * @private\n         * @type {Object<string, import(\"../canvas.js\").Label>}\n         */\n        this.labels_ = {};\n    }\n    /**\n     * @param {string|Array<string>} text Text.\n     * @param {string} textKey Text style key.\n     * @param {string} fillKey Fill style key.\n     * @param {string} strokeKey Stroke style key.\n     * @return {import(\"../canvas.js\").Label} Label.\n     */\n    Executor.prototype.createLabel = function (text, textKey, fillKey, strokeKey) {\n        var key = text + textKey + fillKey + strokeKey;\n        if (this.labels_[key]) {\n            return this.labels_[key];\n        }\n        var strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n        var fillState = fillKey ? this.fillStates[fillKey] : null;\n        var textState = this.textStates[textKey];\n        var pixelRatio = this.pixelRatio;\n        var scale = [\n            textState.scale[0] * pixelRatio,\n            textState.scale[1] * pixelRatio,\n        ];\n        var textIsArray = Array.isArray(text);\n        var align = textState.justify\n            ? TEXT_ALIGN[textState.justify]\n            : horizontalTextAlign(Array.isArray(text) ? text[0] : text, textState.textAlign || defaultTextAlign);\n        var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n        var chunks = textIsArray\n            ? text\n            : text.split('\\n').reduce(createTextChunks, []);\n        var _a = getTextDimensions(textState, chunks), width = _a.width, height = _a.height, widths = _a.widths, heights = _a.heights, lineWidths = _a.lineWidths;\n        var renderWidth = width + strokeWidth;\n        var contextInstructions = [];\n        // make canvas 2 pixels wider to account for italic text width measurement errors\n        var w = (renderWidth + 2) * scale[0];\n        var h = (height + strokeWidth) * scale[1];\n        /** @type {import(\"../canvas.js\").Label} */\n        var label = {\n            width: w < 0 ? Math.floor(w) : Math.ceil(w),\n            height: h < 0 ? Math.floor(h) : Math.ceil(h),\n            contextInstructions: contextInstructions,\n        };\n        if (scale[0] != 1 || scale[1] != 1) {\n            contextInstructions.push('scale', scale);\n        }\n        if (strokeKey) {\n            contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n            contextInstructions.push('lineWidth', strokeWidth);\n            contextInstructions.push('lineCap', strokeState.lineCap);\n            contextInstructions.push('lineJoin', strokeState.lineJoin);\n            contextInstructions.push('miterLimit', strokeState.miterLimit);\n            // eslint-disable-next-line\n            var Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n            if (Context.prototype.setLineDash) {\n                contextInstructions.push('setLineDash', [strokeState.lineDash]);\n                contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n            }\n        }\n        if (fillKey) {\n            contextInstructions.push('fillStyle', fillState.fillStyle);\n        }\n        contextInstructions.push('textBaseline', 'middle');\n        contextInstructions.push('textAlign', 'center');\n        var leftRight = 0.5 - align;\n        var x = align * renderWidth + leftRight * strokeWidth;\n        var strokeInstructions = [];\n        var fillInstructions = [];\n        var lineHeight = 0;\n        var lineOffset = 0;\n        var widthHeightIndex = 0;\n        var lineWidthIndex = 0;\n        var previousFont;\n        for (var i = 0, ii = chunks.length; i < ii; i += 2) {\n            var text_1 = chunks[i];\n            if (text_1 === '\\n') {\n                lineOffset += lineHeight;\n                lineHeight = 0;\n                x = align * renderWidth + leftRight * strokeWidth;\n                ++lineWidthIndex;\n                continue;\n            }\n            var font = chunks[i + 1] || textState.font;\n            if (font !== previousFont) {\n                if (strokeKey) {\n                    strokeInstructions.push('font', font);\n                }\n                if (fillKey) {\n                    fillInstructions.push('font', font);\n                }\n                previousFont = font;\n            }\n            lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n            var fillStrokeArgs = [\n                text_1,\n                x +\n                    leftRight * widths[widthHeightIndex] +\n                    align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n                0.5 * (strokeWidth + lineHeight) + lineOffset,\n            ];\n            x += widths[widthHeightIndex];\n            if (strokeKey) {\n                strokeInstructions.push('strokeText', fillStrokeArgs);\n            }\n            if (fillKey) {\n                fillInstructions.push('fillText', fillStrokeArgs);\n            }\n            ++widthHeightIndex;\n        }\n        Array.prototype.push.apply(contextInstructions, strokeInstructions);\n        Array.prototype.push.apply(contextInstructions, fillInstructions);\n        this.labels_[key] = label;\n        return label;\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     */\n    Executor.prototype.replayTextBackground_ = function (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n        context.beginPath();\n        context.moveTo.apply(context, p1);\n        context.lineTo.apply(context, p2);\n        context.lineTo.apply(context, p3);\n        context.lineTo.apply(context, p4);\n        context.lineTo.apply(context, p1);\n        if (fillInstruction) {\n            this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n            this.fill_(context);\n        }\n        if (strokeInstruction) {\n            this.setStrokeStyle_(context, \n            /** @type {Array<*>} */ (strokeInstruction));\n            context.stroke();\n        }\n    };\n    /**\n     * @private\n     * @param {number} sheetWidth Width of the sprite sheet.\n     * @param {number} sheetHeight Height of the sprite sheet.\n     * @param {number} centerX X.\n     * @param {number} centerY Y.\n     * @param {number} width Width.\n     * @param {number} height Height.\n     * @param {number} anchorX Anchor X.\n     * @param {number} anchorY Anchor Y.\n     * @param {number} originX Origin X.\n     * @param {number} originY Origin Y.\n     * @param {number} rotation Rotation.\n     * @param {import(\"../../size.js\").Size} scale Scale.\n     * @param {boolean} snapToPixel Snap to pixel.\n     * @param {Array<number>} padding Padding.\n     * @param {boolean} fillStroke Background fill or stroke.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n     */\n    Executor.prototype.calculateImageOrLabelDimensions_ = function (sheetWidth, sheetHeight, centerX, centerY, width, height, anchorX, anchorY, originX, originY, rotation, scale, snapToPixel, padding, fillStroke, feature) {\n        anchorX *= scale[0];\n        anchorY *= scale[1];\n        var x = centerX - anchorX;\n        var y = centerY - anchorY;\n        var w = width + originX > sheetWidth ? sheetWidth - originX : width;\n        var h = height + originY > sheetHeight ? sheetHeight - originY : height;\n        var boxW = padding[3] + w * scale[0] + padding[1];\n        var boxH = padding[0] + h * scale[1] + padding[2];\n        var boxX = x - padding[3];\n        var boxY = y - padding[0];\n        if (fillStroke || rotation !== 0) {\n            p1[0] = boxX;\n            p4[0] = boxX;\n            p1[1] = boxY;\n            p2[1] = boxY;\n            p2[0] = boxX + boxW;\n            p3[0] = p2[0];\n            p3[1] = boxY + boxH;\n            p4[1] = p3[1];\n        }\n        var transform;\n        if (rotation !== 0) {\n            transform = composeTransform(createTransform(), centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n            applyTransform(transform, p1);\n            applyTransform(transform, p2);\n            applyTransform(transform, p3);\n            applyTransform(transform, p4);\n            createOrUpdate(Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1]), tmpExtent);\n        }\n        else {\n            createOrUpdate(Math.min(boxX, boxX + boxW), Math.min(boxY, boxY + boxH), Math.max(boxX, boxX + boxW), Math.max(boxY, boxY + boxH), tmpExtent);\n        }\n        if (snapToPixel) {\n            x = Math.round(x);\n            y = Math.round(y);\n        }\n        return {\n            drawImageX: x,\n            drawImageY: y,\n            drawImageW: w,\n            drawImageH: h,\n            originX: originX,\n            originY: originY,\n            declutterBox: {\n                minX: tmpExtent[0],\n                minY: tmpExtent[1],\n                maxX: tmpExtent[2],\n                maxY: tmpExtent[3],\n                value: feature,\n            },\n            canvasTransform: transform,\n            scale: scale,\n        };\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n     * @param {ImageOrLabelDimensions} dimensions Dimensions.\n     * @param {number} opacity Opacity.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     * @return {boolean} The image or label was rendered.\n     */\n    Executor.prototype.replayImageOrLabel_ = function (context, contextScale, imageOrLabel, dimensions, opacity, fillInstruction, strokeInstruction) {\n        var fillStroke = !!(fillInstruction || strokeInstruction);\n        var box = dimensions.declutterBox;\n        var canvas = context.canvas;\n        var strokePadding = strokeInstruction\n            ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n            : 0;\n        var intersects = box.minX - strokePadding <= canvas.width / contextScale &&\n            box.maxX + strokePadding >= 0 &&\n            box.minY - strokePadding <= canvas.height / contextScale &&\n            box.maxY + strokePadding >= 0;\n        if (intersects) {\n            if (fillStroke) {\n                this.replayTextBackground_(context, p1, p2, p3, p4, \n                /** @type {Array<*>} */ (fillInstruction), \n                /** @type {Array<*>} */ (strokeInstruction));\n            }\n            drawImageOrLabel(context, dimensions.canvasTransform, opacity, imageOrLabel, dimensions.originX, dimensions.originY, dimensions.drawImageW, dimensions.drawImageH, dimensions.drawImageX, dimensions.drawImageY, dimensions.scale);\n        }\n        return true;\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     */\n    Executor.prototype.fill_ = function (context) {\n        if (this.alignFill_) {\n            var origin_1 = applyTransform(this.renderedTransform_, [0, 0]);\n            var repeatSize = 512 * this.pixelRatio;\n            context.save();\n            context.translate(origin_1[0] % repeatSize, origin_1[1] % repeatSize);\n            context.rotate(this.viewRotation_);\n        }\n        context.fill();\n        if (this.alignFill_) {\n            context.restore();\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {Array<*>} instruction Instruction.\n     */\n    Executor.prototype.setStrokeStyle_ = function (context, instruction) {\n        context['strokeStyle'] =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n        context.lineWidth = /** @type {number} */ (instruction[2]);\n        context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n        context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n        context.miterLimit = /** @type {number} */ (instruction[5]);\n        if (context.setLineDash) {\n            context.lineDashOffset = /** @type {number} */ (instruction[7]);\n            context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n        }\n    };\n    /**\n     * @private\n     * @param {string|Array<string>} text The text to draw.\n     * @param {string} textKey The key of the text state.\n     * @param {string} strokeKey The key for the stroke state.\n     * @param {string} fillKey The key for the fill state.\n     * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n     */\n    Executor.prototype.drawLabelWithPointPlacement_ = function (text, textKey, strokeKey, fillKey) {\n        var textState = this.textStates[textKey];\n        var label = this.createLabel(text, textKey, fillKey, strokeKey);\n        var strokeState = this.strokeStates[strokeKey];\n        var pixelRatio = this.pixelRatio;\n        var align = horizontalTextAlign(Array.isArray(text) ? text[0] : text, textState.textAlign || defaultTextAlign);\n        var baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n        var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n        // Remove the 2 pixels we added in createLabel() for the anchor\n        var width = label.width / pixelRatio - 2 * textState.scale[0];\n        var anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n        var anchorY = (baseline * label.height) / pixelRatio +\n            2 * (0.5 - baseline) * strokeWidth;\n        return {\n            label: label,\n            anchorX: anchorX,\n            anchorY: anchorY,\n        };\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {Array<*>} instructions Instructions array.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n     * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n     *     features that intersect this extent.\n     * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.execute_ = function (context, contextScale, transform, instructions, snapToPixel, opt_featureCallback, opt_hitExtent, opt_declutterTree) {\n        /** @type {Array<number>} */\n        var pixelCoordinates;\n        if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n            pixelCoordinates = this.pixelCoordinates_;\n        }\n        else {\n            if (!this.pixelCoordinates_) {\n                this.pixelCoordinates_ = [];\n            }\n            pixelCoordinates = transform2D(this.coordinates, 0, this.coordinates.length, 2, transform, this.pixelCoordinates_);\n            transformSetFromArray(this.renderedTransform_, transform);\n        }\n        var i = 0; // instruction index\n        var ii = instructions.length; // end of instructions\n        var d = 0; // data index\n        var dd; // end of per-instruction data\n        var anchorX, anchorY, prevX, prevY, roundX, roundY, image, text, textKey, strokeKey, fillKey;\n        var pendingFill = 0;\n        var pendingStroke = 0;\n        var lastFillInstruction = null;\n        var lastStrokeInstruction = null;\n        var coordinateCache = this.coordinateCache_;\n        var viewRotation = this.viewRotation_;\n        var viewRotationFromTransform = Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n        var state = /** @type {import(\"../../render.js\").State} */ ({\n            context: context,\n            pixelRatio: this.pixelRatio,\n            resolution: this.resolution,\n            rotation: viewRotation,\n        });\n        // When the batch size gets too big, performance decreases. 200 is a good\n        // balance between batch size and number of fill/stroke instructions.\n        var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n        var /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n        var x, y, currentGeometry;\n        while (i < ii) {\n            var instruction = instructions[i];\n            var type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n            switch (type) {\n                case CanvasInstruction.BEGIN_GEOMETRY:\n                    feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                    currentGeometry = instruction[3];\n                    if (!feature.getGeometry()) {\n                        i = /** @type {number} */ (instruction[2]);\n                    }\n                    else if (opt_hitExtent !== undefined &&\n                        !intersects(opt_hitExtent, currentGeometry.getExtent())) {\n                        i = /** @type {number} */ (instruction[2]) + 1;\n                    }\n                    else {\n                        ++i;\n                    }\n                    break;\n                case CanvasInstruction.BEGIN_PATH:\n                    if (pendingFill > batchSize) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                    }\n                    if (pendingStroke > batchSize) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    if (!pendingFill && !pendingStroke) {\n                        context.beginPath();\n                        prevX = NaN;\n                        prevY = NaN;\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.CIRCLE:\n                    d = /** @type {number} */ (instruction[1]);\n                    var x1 = pixelCoordinates[d];\n                    var y1 = pixelCoordinates[d + 1];\n                    var x2 = pixelCoordinates[d + 2];\n                    var y2 = pixelCoordinates[d + 3];\n                    var dx = x2 - x1;\n                    var dy = y2 - y1;\n                    var r = Math.sqrt(dx * dx + dy * dy);\n                    context.moveTo(x1 + r, y1);\n                    context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n                    ++i;\n                    break;\n                case CanvasInstruction.CLOSE_PATH:\n                    context.closePath();\n                    ++i;\n                    break;\n                case CanvasInstruction.CUSTOM:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = instruction[2];\n                    var geometry = \n                    /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n                    var renderer = instruction[4];\n                    var fn = instruction.length == 6 ? instruction[5] : undefined;\n                    state.geometry = geometry;\n                    state.feature = feature;\n                    if (!(i in coordinateCache)) {\n                        coordinateCache[i] = [];\n                    }\n                    var coords = coordinateCache[i];\n                    if (fn) {\n                        fn(pixelCoordinates, d, dd, 2, coords);\n                    }\n                    else {\n                        coords[0] = pixelCoordinates[d];\n                        coords[1] = pixelCoordinates[d + 1];\n                        coords.length = 2;\n                    }\n                    renderer(coords, state);\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_IMAGE:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    image =\n                        /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\n                    // Remaining arguments in DRAW_IMAGE are in alphabetical order\n                    anchorX = /** @type {number} */ (instruction[4]);\n                    anchorY = /** @type {number} */ (instruction[5]);\n                    var height = /** @type {number} */ (instruction[6]);\n                    var opacity = /** @type {number} */ (instruction[7]);\n                    var originX = /** @type {number} */ (instruction[8]);\n                    var originY = /** @type {number} */ (instruction[9]);\n                    var rotateWithView = /** @type {boolean} */ (instruction[10]);\n                    var rotation = /** @type {number} */ (instruction[11]);\n                    var scale = /** @type {import(\"../../size.js\").Size} */ (instruction[12]);\n                    var width = /** @type {number} */ (instruction[13]);\n                    var declutterMode = \n                    /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (instruction[14]);\n                    var declutterImageWithText = \n                    /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (instruction[15]);\n                    if (!image && instruction.length >= 20) {\n                        // create label images\n                        text = /** @type {string} */ (instruction[19]);\n                        textKey = /** @type {string} */ (instruction[20]);\n                        strokeKey = /** @type {string} */ (instruction[21]);\n                        fillKey = /** @type {string} */ (instruction[22]);\n                        var labelWithAnchor = this.drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey);\n                        image = labelWithAnchor.label;\n                        instruction[3] = image;\n                        var textOffsetX = /** @type {number} */ (instruction[23]);\n                        anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n                        instruction[4] = anchorX;\n                        var textOffsetY = /** @type {number} */ (instruction[24]);\n                        anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n                        instruction[5] = anchorY;\n                        height = image.height;\n                        instruction[6] = height;\n                        width = image.width;\n                        instruction[13] = width;\n                    }\n                    var geometryWidths = void 0;\n                    if (instruction.length > 25) {\n                        geometryWidths = /** @type {number} */ (instruction[25]);\n                    }\n                    var padding = void 0, backgroundFill = void 0, backgroundStroke = void 0;\n                    if (instruction.length > 17) {\n                        padding = /** @type {Array<number>} */ (instruction[16]);\n                        backgroundFill = /** @type {boolean} */ (instruction[17]);\n                        backgroundStroke = /** @type {boolean} */ (instruction[18]);\n                    }\n                    else {\n                        padding = defaultPadding;\n                        backgroundFill = false;\n                        backgroundStroke = false;\n                    }\n                    if (rotateWithView && viewRotationFromTransform) {\n                        // Canvas is expected to be rotated to reverse view rotation.\n                        rotation += viewRotation;\n                    }\n                    else if (!rotateWithView && !viewRotationFromTransform) {\n                        // Canvas is not rotated, images need to be rotated back to be north-up.\n                        rotation -= viewRotation;\n                    }\n                    var widthIndex = 0;\n                    for (; d < dd; d += 2) {\n                        if (geometryWidths &&\n                            geometryWidths[widthIndex++] < width / this.pixelRatio) {\n                            continue;\n                        }\n                        var dimensions = this.calculateImageOrLabelDimensions_(image.width, image.height, pixelCoordinates[d], pixelCoordinates[d + 1], width, height, anchorX, anchorY, originX, originY, rotation, scale, snapToPixel, padding, backgroundFill || backgroundStroke, feature);\n                        /** @type {ReplayImageOrLabelArgs} */\n                        var args = [\n                            context,\n                            contextScale,\n                            image,\n                            dimensions,\n                            opacity,\n                            backgroundFill\n                                ? /** @type {Array<*>} */ (lastFillInstruction)\n                                : null,\n                            backgroundStroke\n                                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                                : null,\n                        ];\n                        if (opt_declutterTree) {\n                            if (declutterMode === 'none') {\n                                // not rendered in declutter group\n                                continue;\n                            }\n                            else if (declutterMode === 'obstacle') {\n                                // will always be drawn, thus no collision detection, but insert as obstacle\n                                opt_declutterTree.insert(dimensions.declutterBox);\n                                continue;\n                            }\n                            else {\n                                var imageArgs = void 0;\n                                var imageDeclutterBox = void 0;\n                                if (declutterImageWithText) {\n                                    var index = dd - d;\n                                    if (!declutterImageWithText[index]) {\n                                        // We now have the image for an image+text combination.\n                                        declutterImageWithText[index] = args;\n                                        // Don't render anything for now, wait for the text.\n                                        continue;\n                                    }\n                                    imageArgs = declutterImageWithText[index];\n                                    delete declutterImageWithText[index];\n                                    imageDeclutterBox = getDeclutterBox(imageArgs);\n                                    if (opt_declutterTree.collides(imageDeclutterBox)) {\n                                        continue;\n                                    }\n                                }\n                                if (opt_declutterTree.collides(dimensions.declutterBox)) {\n                                    continue;\n                                }\n                                if (imageArgs) {\n                                    // We now have image and text for an image+text combination.\n                                    opt_declutterTree.insert(imageDeclutterBox);\n                                    // Render the image before we render the text.\n                                    this.replayImageOrLabel_.apply(this, imageArgs);\n                                }\n                                opt_declutterTree.insert(dimensions.declutterBox);\n                            }\n                        }\n                        this.replayImageOrLabel_.apply(this, args);\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_CHARS:\n                    var begin = /** @type {number} */ (instruction[1]);\n                    var end = /** @type {number} */ (instruction[2]);\n                    var baseline = /** @type {number} */ (instruction[3]);\n                    var overflow = /** @type {number} */ (instruction[4]);\n                    fillKey = /** @type {string} */ (instruction[5]);\n                    var maxAngle = /** @type {number} */ (instruction[6]);\n                    var measurePixelRatio = /** @type {number} */ (instruction[7]);\n                    var offsetY = /** @type {number} */ (instruction[8]);\n                    strokeKey = /** @type {string} */ (instruction[9]);\n                    var strokeWidth = /** @type {number} */ (instruction[10]);\n                    text = /** @type {string} */ (instruction[11]);\n                    textKey = /** @type {string} */ (instruction[12]);\n                    var pixelRatioScale = [\n                        /** @type {number} */ (instruction[13]),\n                        /** @type {number} */ (instruction[13]),\n                    ];\n                    var textState = this.textStates[textKey];\n                    var font = textState.font;\n                    var textScale = [\n                        textState.scale[0] * measurePixelRatio,\n                        textState.scale[1] * measurePixelRatio,\n                    ];\n                    var cachedWidths = void 0;\n                    if (font in this.widths_) {\n                        cachedWidths = this.widths_[font];\n                    }\n                    else {\n                        cachedWidths = {};\n                        this.widths_[font] = cachedWidths;\n                    }\n                    var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n                    var textLength = Math.abs(textScale[0]) *\n                        measureAndCacheTextWidth(font, text, cachedWidths);\n                    if (overflow || textLength <= pathLength) {\n                        var textAlign = this.textStates[textKey].textAlign;\n                        var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n                        var parts = drawTextOnPath(pixelCoordinates, begin, end, 2, text, startM, maxAngle, Math.abs(textScale[0]), measureAndCacheTextWidth, font, cachedWidths, viewRotationFromTransform ? 0 : this.viewRotation_);\n                        drawChars: if (parts) {\n                            /** @type {Array<ReplayImageOrLabelArgs>} */\n                            var replayImageOrLabelArgs = [];\n                            var c = void 0, cc = void 0, chars = void 0, label = void 0, part = void 0;\n                            if (strokeKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.createLabel(chars, textKey, '', strokeKey);\n                                    anchorX =\n                                        /** @type {number} */ (part[2]) +\n                                            (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                                    anchorY =\n                                        baseline * label.height +\n                                            ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                                                textScale[0] -\n                                            offsetY;\n                                    var dimensions = this.calculateImageOrLabelDimensions_(label.width, label.height, part[0], part[1], label.width, label.height, anchorX, anchorY, 0, 0, part[3], pixelRatioScale, false, defaultPadding, false, feature);\n                                    if (opt_declutterTree &&\n                                        opt_declutterTree.collides(dimensions.declutterBox)) {\n                                        break drawChars;\n                                    }\n                                    replayImageOrLabelArgs.push([\n                                        context,\n                                        contextScale,\n                                        label,\n                                        dimensions,\n                                        1,\n                                        null,\n                                        null,\n                                    ]);\n                                }\n                            }\n                            if (fillKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.createLabel(chars, textKey, fillKey, '');\n                                    anchorX = /** @type {number} */ (part[2]);\n                                    anchorY = baseline * label.height - offsetY;\n                                    var dimensions = this.calculateImageOrLabelDimensions_(label.width, label.height, part[0], part[1], label.width, label.height, anchorX, anchorY, 0, 0, part[3], pixelRatioScale, false, defaultPadding, false, feature);\n                                    if (opt_declutterTree &&\n                                        opt_declutterTree.collides(dimensions.declutterBox)) {\n                                        break drawChars;\n                                    }\n                                    replayImageOrLabelArgs.push([\n                                        context,\n                                        contextScale,\n                                        label,\n                                        dimensions,\n                                        1,\n                                        null,\n                                        null,\n                                    ]);\n                                }\n                            }\n                            if (opt_declutterTree) {\n                                opt_declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n                            }\n                            for (var i_1 = 0, ii_1 = replayImageOrLabelArgs.length; i_1 < ii_1; ++i_1) {\n                                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i_1]);\n                            }\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.END_GEOMETRY:\n                    if (opt_featureCallback !== undefined) {\n                        feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                        var result = opt_featureCallback(feature, currentGeometry);\n                        if (result) {\n                            return result;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.FILL:\n                    if (batchSize) {\n                        pendingFill++;\n                    }\n                    else {\n                        this.fill_(context);\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.MOVE_TO_LINE_TO:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    x = pixelCoordinates[d];\n                    y = pixelCoordinates[d + 1];\n                    roundX = (x + 0.5) | 0;\n                    roundY = (y + 0.5) | 0;\n                    if (roundX !== prevX || roundY !== prevY) {\n                        context.moveTo(x, y);\n                        prevX = roundX;\n                        prevY = roundY;\n                    }\n                    for (d += 2; d < dd; d += 2) {\n                        x = pixelCoordinates[d];\n                        y = pixelCoordinates[d + 1];\n                        roundX = (x + 0.5) | 0;\n                        roundY = (y + 0.5) | 0;\n                        if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n                            context.lineTo(x, y);\n                            prevX = roundX;\n                            prevY = roundY;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_FILL_STYLE:\n                    lastFillInstruction = instruction;\n                    this.alignFill_ = instruction[2];\n                    if (pendingFill) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                        if (pendingStroke) {\n                            context.stroke();\n                            pendingStroke = 0;\n                        }\n                    }\n                    context.fillStyle =\n                        /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_STROKE_STYLE:\n                    lastStrokeInstruction = instruction;\n                    if (pendingStroke) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n                    ++i;\n                    break;\n                case CanvasInstruction.STROKE:\n                    if (batchSize) {\n                        pendingStroke++;\n                    }\n                    else {\n                        context.stroke();\n                    }\n                    ++i;\n                    break;\n                default: // consume the instruction anyway, to avoid an infinite loop\n                    ++i;\n                    break;\n            }\n        }\n        if (pendingFill) {\n            this.fill_(context);\n        }\n        if (pendingStroke) {\n            context.stroke();\n        }\n        return undefined;\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n     */\n    Executor.prototype.execute = function (context, contextScale, transform, viewRotation, snapToPixel, opt_declutterTree) {\n        this.viewRotation_ = viewRotation;\n        this.execute_(context, contextScale, transform, this.instructions, snapToPixel, undefined, undefined, opt_declutterTree);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n     * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n     *     features that intersect this extent.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.executeHitDetection = function (context, transform, viewRotation, opt_featureCallback, opt_hitExtent) {\n        this.viewRotation_ = viewRotation;\n        return this.execute_(context, 1, transform, this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n    };\n    return Executor;\n}());\nexport default Executor;\n//# sourceMappingURL=Executor.js.map","/**\n * @module ol/render/canvas/ExecutorGroup\n */\nimport Executor from './Executor.js';\nimport { buffer, createEmpty, extendCoordinate } from '../../extent.js';\nimport { compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { isEmpty } from '../../obj.js';\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { transform2D } from '../../geom/flat/transform.js';\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nvar ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\nvar ExecutorGroup = /** @class */ (function () {\n    /**\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n     * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n     * should be set here, unless the target context does not exceed that extent (which\n     * can be the case when rendering to tiles).\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The executor group can have overlapping geometries.\n     * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n     * The serializable instructions.\n     * @param {number} [opt_renderBuffer] Optional rendering buffer.\n     */\n    function ExecutorGroup(maxExtent, resolution, pixelRatio, overlaps, allInstructions, opt_renderBuffer) {\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.overlaps_ = overlaps;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.renderBuffer_ = opt_renderBuffer;\n        /**\n         * @private\n         * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n         */\n        this.executorsByZIndex_ = {};\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        this.hitDetectionContext_ = null;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        this.hitDetectionTransform_ = createTransform();\n        this.createExecutors_(allInstructions);\n    }\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     */\n    ExecutorGroup.prototype.clip = function (context, transform) {\n        var flatClipCoords = this.getClipCoords(transform);\n        context.beginPath();\n        context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n        context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n        context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n        context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n        context.clip();\n    };\n    /**\n     * Create executors and populate them using the provided instructions.\n     * @private\n     * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n     */\n    ExecutorGroup.prototype.createExecutors_ = function (allInstructions) {\n        for (var zIndex in allInstructions) {\n            var executors = this.executorsByZIndex_[zIndex];\n            if (executors === undefined) {\n                executors = {};\n                this.executorsByZIndex_[zIndex] = executors;\n            }\n            var instructionByZindex = allInstructions[zIndex];\n            for (var builderType in instructionByZindex) {\n                var instructions = instructionByZindex[builderType];\n                executors[builderType] = new Executor(this.resolution_, this.pixelRatio_, this.overlaps_, instructions);\n            }\n        }\n    };\n    /**\n     * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n     * @return {boolean} Has executors of the provided types.\n     */\n    ExecutorGroup.prototype.hasExecutors = function (executors) {\n        for (var zIndex in this.executorsByZIndex_) {\n            var candidates = this.executorsByZIndex_[zIndex];\n            for (var i = 0, ii = executors.length; i < ii; ++i) {\n                if (executors[i] in candidates) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n     * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    ExecutorGroup.prototype.forEachFeatureAtCoordinate = function (coordinate, resolution, rotation, hitTolerance, callback, declutteredFeatures) {\n        hitTolerance = Math.round(hitTolerance);\n        var contextSize = hitTolerance * 2 + 1;\n        var transform = composeTransform(this.hitDetectionTransform_, hitTolerance + 0.5, hitTolerance + 0.5, 1 / resolution, -1 / resolution, -rotation, -coordinate[0], -coordinate[1]);\n        var newContext = !this.hitDetectionContext_;\n        if (newContext) {\n            this.hitDetectionContext_ = createCanvasContext2D(contextSize, contextSize);\n        }\n        var context = this.hitDetectionContext_;\n        if (context.canvas.width !== contextSize ||\n            context.canvas.height !== contextSize) {\n            context.canvas.width = contextSize;\n            context.canvas.height = contextSize;\n        }\n        else if (!newContext) {\n            context.clearRect(0, 0, contextSize, contextSize);\n        }\n        /**\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        var hitExtent;\n        if (this.renderBuffer_ !== undefined) {\n            hitExtent = createEmpty();\n            extendCoordinate(hitExtent, coordinate);\n            buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n        }\n        var indexes = getPixelIndexArray(hitTolerance);\n        var builderType;\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n         * @return {T|undefined} Callback result.\n         */\n        function featureCallback(feature, geometry) {\n            var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n            for (var i_1 = 0, ii = indexes.length; i_1 < ii; i_1++) {\n                if (imageData[indexes[i_1]] > 0) {\n                    if (!declutteredFeatures ||\n                        (builderType !== 'Image' && builderType !== 'Text') ||\n                        declutteredFeatures.indexOf(feature) !== -1) {\n                        var idx = (indexes[i_1] - 3) / 4;\n                        var x = hitTolerance - (idx % contextSize);\n                        var y = hitTolerance - ((idx / contextSize) | 0);\n                        var result_1 = callback(feature, geometry, x * x + y * y);\n                        if (result_1) {\n                            return result_1;\n                        }\n                    }\n                    context.clearRect(0, 0, contextSize, contextSize);\n                    break;\n                }\n            }\n            return undefined;\n        }\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var i, j, executors, executor, result;\n        for (i = zs.length - 1; i >= 0; --i) {\n            var zIndexKey = zs[i].toString();\n            executors = this.executorsByZIndex_[zIndexKey];\n            for (j = ORDER.length - 1; j >= 0; --j) {\n                builderType = ORDER[j];\n                executor = executors[builderType];\n                if (executor !== undefined) {\n                    result = executor.executeHitDetection(context, transform, rotation, featureCallback, hitExtent);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @return {Array<number>|null} Clip coordinates.\n     */\n    ExecutorGroup.prototype.getClipCoords = function (transform) {\n        var maxExtent = this.maxExtent_;\n        if (!maxExtent) {\n            return null;\n        }\n        var minX = maxExtent[0];\n        var minY = maxExtent[1];\n        var maxX = maxExtent[2];\n        var maxY = maxExtent[3];\n        var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n        transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n        return flatClipCoords;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    ExecutorGroup.prototype.isEmpty = function () {\n        return isEmpty(this.executorsByZIndex_);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n     * @param {Array<import(\"../canvas.js\").BuilderType>} [opt_builderTypes] Ordered replay types to replay.\n     *     Default is {@link module:ol/render/replay~ORDER}\n     * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n     */\n    ExecutorGroup.prototype.execute = function (context, contextScale, transform, viewRotation, snapToPixel, opt_builderTypes, opt_declutterTree) {\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        // setup clipping so that the parts of over-simplified geometries are not\n        // visible outside the current extent when panning\n        if (this.maxExtent_) {\n            context.save();\n            this.clip(context, transform);\n        }\n        var builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n        var i, ii, j, jj, replays, replay;\n        if (opt_declutterTree) {\n            zs.reverse();\n        }\n        for (i = 0, ii = zs.length; i < ii; ++i) {\n            var zIndexKey = zs[i].toString();\n            replays = this.executorsByZIndex_[zIndexKey];\n            for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n                var builderType = builderTypes[j];\n                replay = replays[builderType];\n                if (replay !== undefined) {\n                    replay.execute(context, contextScale, transform, viewRotation, snapToPixel, opt_declutterTree);\n                }\n            }\n        }\n        if (this.maxExtent_) {\n            context.restore();\n        }\n    };\n    return ExecutorGroup;\n}());\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nvar circlePixelIndexArrayCache = {};\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n    if (circlePixelIndexArrayCache[radius] !== undefined) {\n        return circlePixelIndexArrayCache[radius];\n    }\n    var size = radius * 2 + 1;\n    var maxDistanceSq = radius * radius;\n    var distances = new Array(maxDistanceSq + 1);\n    for (var i = 0; i <= radius; ++i) {\n        for (var j = 0; j <= radius; ++j) {\n            var distanceSq = i * i + j * j;\n            if (distanceSq > maxDistanceSq) {\n                break;\n            }\n            var distance = distances[distanceSq];\n            if (!distance) {\n                distance = [];\n                distances[distanceSq] = distance;\n            }\n            distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n            if (i > 0) {\n                distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n            }\n            if (j > 0) {\n                distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n                if (i > 0) {\n                    distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n                }\n            }\n        }\n    }\n    var pixelIndex = [];\n    for (var i = 0, ii = distances.length; i < ii; ++i) {\n        if (distances[i]) {\n            pixelIndex.push.apply(pixelIndex, distances[i]);\n        }\n    }\n    circlePixelIndexArrayCache[radius] = pixelIndex;\n    return pixelIndex;\n}\nexport default ExecutorGroup;\n//# sourceMappingURL=ExecutorGroup.js.map","/**\n * @module ol/render/canvas/hitdetect\n */\nimport CanvasImmediateRenderer from './Immediate.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport { Icon } from '../../style.js';\nimport { clamp } from '../../math.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { intersects } from '../../extent.js';\nimport { numberSafeCompareFunction } from '../../array.js';\nexport var HIT_DETECT_RESOLUTION = 0.5;\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(size, transforms, features, styleFunction, extent, resolution, rotation) {\n    var width = size[0] * HIT_DETECT_RESOLUTION;\n    var height = size[1] * HIT_DETECT_RESOLUTION;\n    var context = createCanvasContext2D(width, height);\n    context.imageSmoothingEnabled = false;\n    var canvas = context.canvas;\n    var renderer = new CanvasImmediateRenderer(context, HIT_DETECT_RESOLUTION, extent, null, rotation);\n    var featureCount = features.length;\n    // Stretch hit detection index to use the whole available color range\n    var indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n    var featuresByZIndex = {};\n    for (var i = 1; i <= featureCount; ++i) {\n        var feature = features[i - 1];\n        var featureStyleFunction = feature.getStyleFunction() || styleFunction;\n        if (!styleFunction) {\n            continue;\n        }\n        var styles = featureStyleFunction(feature, resolution);\n        if (!styles) {\n            continue;\n        }\n        if (!Array.isArray(styles)) {\n            styles = [styles];\n        }\n        var index = i * indexFactor;\n        var color = '#' + ('000000' + index.toString(16)).slice(-6);\n        for (var j = 0, jj = styles.length; j < jj; ++j) {\n            var originalStyle = styles[j];\n            var geometry = originalStyle.getGeometryFunction()(feature);\n            if (!geometry || !intersects(extent, geometry.getExtent())) {\n                continue;\n            }\n            var style = originalStyle.clone();\n            var fill = style.getFill();\n            if (fill) {\n                fill.setColor(color);\n            }\n            var stroke = style.getStroke();\n            if (stroke) {\n                stroke.setColor(color);\n                stroke.setLineDash(null);\n            }\n            style.setText(undefined);\n            var image = originalStyle.getImage();\n            if (image && image.getOpacity() !== 0) {\n                var imgSize = image.getImageSize();\n                if (!imgSize) {\n                    continue;\n                }\n                var imgContext = createCanvasContext2D(imgSize[0], imgSize[1], undefined, { alpha: false });\n                var img = imgContext.canvas;\n                imgContext.fillStyle = color;\n                imgContext.fillRect(0, 0, img.width, img.height);\n                style.setImage(new Icon({\n                    img: img,\n                    imgSize: imgSize,\n                    anchor: image.getAnchor(),\n                    anchorXUnits: IconAnchorUnits.PIXELS,\n                    anchorYUnits: IconAnchorUnits.PIXELS,\n                    offset: image.getOrigin(),\n                    opacity: 1,\n                    size: image.getSize(),\n                    scale: image.getScale(),\n                    rotation: image.getRotation(),\n                    rotateWithView: image.getRotateWithView(),\n                }));\n            }\n            var zIndex = style.getZIndex() || 0;\n            var byGeometryType = featuresByZIndex[zIndex];\n            if (!byGeometryType) {\n                byGeometryType = {};\n                featuresByZIndex[zIndex] = byGeometryType;\n                byGeometryType['Polygon'] = [];\n                byGeometryType['Circle'] = [];\n                byGeometryType['LineString'] = [];\n                byGeometryType['Point'] = [];\n            }\n            byGeometryType[geometry.getType().replace('Multi', '')].push(geometry, style);\n        }\n    }\n    var zIndexKeys = Object.keys(featuresByZIndex)\n        .map(Number)\n        .sort(numberSafeCompareFunction);\n    for (var i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n        var byGeometryType = featuresByZIndex[zIndexKeys[i]];\n        for (var type in byGeometryType) {\n            var geomAndStyle = byGeometryType[type];\n            for (var j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n                renderer.setStyle(geomAndStyle[j + 1]);\n                for (var k = 0, kk = transforms.length; k < kk; ++k) {\n                    renderer.setTransform(transforms[k]);\n                    renderer.drawGeometry(geomAndStyle[j]);\n                }\n            }\n        }\n    }\n    return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n    var resultFeatures = [];\n    if (imageData) {\n        var x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n        var y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n        // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n        // for browsers returning coordinates slightly larger than the actual canvas size\n        // due to a non-integer pixel ratio.\n        var index = (clamp(x, 0, imageData.width - 1) +\n            clamp(y, 0, imageData.height - 1) * imageData.width) *\n            4;\n        var r = imageData.data[index];\n        var g = imageData.data[index + 1];\n        var b = imageData.data[index + 2];\n        var i = b + 256 * (g + 256 * r);\n        var indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n        if (i && i % indexFactor === 0) {\n            resultFeatures.push(features[i / indexFactor - 1]);\n        }\n    }\n    return resultFeatures;\n}\n//# sourceMappingURL=hitdetect.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, { canvasPool } from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport { HIT_DETECT_RESOLUTION, createHitDetectionImageData, hitDetect, } from '../../render/canvas/hitdetect.js';\nimport { apply, makeInverse, makeScale, toString as transformToString, } from '../../transform.js';\nimport { buffer, containsExtent, createEmpty, getWidth, intersects as intersectsExtent, wrapX as wrapExtentX, } from '../../extent.js';\nimport { createCanvasContext2D, releaseCanvas } from '../../dom.js';\nimport { defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature, } from '../vector.js';\nimport { equals } from '../../array.js';\nimport { fromUserExtent, getTransformFromProjections, getUserProjection, toUserExtent, toUserResolution, } from '../../proj.js';\nimport { getUid } from '../../util.js';\nimport { wrapX as wrapCoordinateX } from '../../coordinate.js';\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasVectorLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n     */\n    function CanvasVectorLayerRenderer(vectorLayer) {\n        var _this = _super.call(this, vectorLayer) || this;\n        /** @private */\n        _this.boundHandleStyleImageChange_ = _this.handleStyleImageChange_.bind(_this);\n        /**\n         * @type {boolean}\n         */\n        _this.animatingOrInteracting_;\n        /**\n         * @type {ImageData}\n         */\n        _this.hitDetectionImageData_ = null;\n        /**\n         * @type {Array<import(\"../../Feature.js\").default>}\n         */\n        _this.renderedFeatures_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedResolution_ = NaN;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = createEmpty();\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.wrappedRenderedExtent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRotation_;\n        /**\n         * @private\n         * @type {import(\"../../coordinate\").Coordinate}\n         */\n        _this.renderedCenter_ = null;\n        /**\n         * @private\n         * @type {import(\"../../proj/Projection\").default}\n         */\n        _this.renderedProjection_ = null;\n        /**\n         * @private\n         * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n         */\n        _this.renderedRenderOrder_ = null;\n        /**\n         * @private\n         * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n         */\n        _this.replayGroup_ = null;\n        /**\n         * A new replay group had to be created by `prepareFrame()`\n         * @type {boolean}\n         */\n        _this.replayGroupChanged = true;\n        /**\n         * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n         */\n        _this.declutterExecutorGroup = null;\n        /**\n         * Clipping to be performed by `renderFrame()`\n         * @type {boolean}\n         */\n        _this.clipping = true;\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.compositionContext_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.opacity_ = 1;\n        return _this;\n    }\n    /**\n     * @param {ExecutorGroup} executorGroup Executor group.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n     */\n    CanvasVectorLayerRenderer.prototype.renderWorlds = function (executorGroup, frameState, opt_declutterTree) {\n        var extent = frameState.extent;\n        var viewState = frameState.viewState;\n        var center = viewState.center;\n        var resolution = viewState.resolution;\n        var projection = viewState.projection;\n        var rotation = viewState.rotation;\n        var projectionExtent = projection.getExtent();\n        var vectorSource = this.getLayer().getSource();\n        var pixelRatio = frameState.pixelRatio;\n        var viewHints = frameState.viewHints;\n        var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n        var context = this.compositionContext_;\n        var width = Math.round(frameState.size[0] * pixelRatio);\n        var height = Math.round(frameState.size[1] * pixelRatio);\n        var multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n        var worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n        var endWorld = multiWorld\n            ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n            : 1;\n        var world = multiWorld\n            ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n            : 0;\n        do {\n            var transform = this.getRenderTransform(center, resolution, rotation, pixelRatio, width, height, world * worldWidth);\n            executorGroup.execute(context, 1, transform, rotation, snapToPixel, undefined, opt_declutterTree);\n        } while (++world < endWorld);\n    };\n    CanvasVectorLayerRenderer.prototype.setupCompositionContext_ = function () {\n        if (this.opacity_ !== 1) {\n            var compositionContext = createCanvasContext2D(this.context.canvas.width, this.context.canvas.height, canvasPool);\n            this.compositionContext_ = compositionContext;\n        }\n        else {\n            this.compositionContext_ = this.context;\n        }\n    };\n    CanvasVectorLayerRenderer.prototype.releaseCompositionContext_ = function () {\n        if (this.opacity_ !== 1) {\n            var alpha = this.context.globalAlpha;\n            this.context.globalAlpha = this.opacity_;\n            this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n            this.context.globalAlpha = alpha;\n            releaseCanvas(this.compositionContext_);\n            canvasPool.push(this.compositionContext_.canvas);\n            this.compositionContext_ = null;\n        }\n    };\n    /**\n     * Render declutter items for this layer\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CanvasVectorLayerRenderer.prototype.renderDeclutter = function (frameState) {\n        if (this.declutterExecutorGroup) {\n            this.setupCompositionContext_();\n            this.renderWorlds(this.declutterExecutorGroup, frameState, frameState.declutterTree);\n            this.releaseCompositionContext_();\n        }\n    };\n    /**\n     * Render the layer.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    CanvasVectorLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var pixelRatio = frameState.pixelRatio;\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        // set forward and inverse pixel transforms\n        makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        var canvasTransform = transformToString(this.pixelTransform);\n        this.useContainer(target, canvasTransform, this.getBackground(frameState));\n        var context = this.context;\n        var canvas = context.canvas;\n        var replayGroup = this.replayGroup_;\n        var declutterExecutorGroup = this.declutterExecutorGroup;\n        if ((!replayGroup || replayGroup.isEmpty()) &&\n            (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())) {\n            return null;\n        }\n        // resize and clear\n        var width = Math.round(frameState.size[0] * pixelRatio);\n        var height = Math.round(frameState.size[1] * pixelRatio);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n            if (canvas.style.transform !== canvasTransform) {\n                canvas.style.transform = canvasTransform;\n            }\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        this.preRender(context, frameState);\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        this.opacity_ = layerState.opacity;\n        this.setupCompositionContext_();\n        // clipped rendering if layer extent is set\n        var clipped = false;\n        var render = true;\n        if (layerState.extent && this.clipping) {\n            var layerExtent = fromUserExtent(layerState.extent, projection);\n            render = intersectsExtent(layerExtent, frameState.extent);\n            clipped = render && !containsExtent(layerExtent, frameState.extent);\n            if (clipped) {\n                this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n            }\n        }\n        if (render) {\n            this.renderWorlds(replayGroup, frameState);\n        }\n        if (clipped) {\n            this.compositionContext_.restore();\n        }\n        this.releaseCompositionContext_();\n        this.postRender(context, frameState);\n        if (this.renderedRotation_ !== viewState.rotation) {\n            this.renderedRotation_ = viewState.rotation;\n            this.hitDetectionImageData_ = null;\n        }\n        return this.container;\n    };\n    /**\n     * Asynchronous layer level hit detection.\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n     */\n    CanvasVectorLayerRenderer.prototype.getFeatures = function (pixel) {\n        return new Promise(\n        /**\n         * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n         * @this {CanvasVectorLayerRenderer}\n         */\n        function (resolve) {\n            if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n                var size = [this.context.canvas.width, this.context.canvas.height];\n                apply(this.pixelTransform, size);\n                var center = this.renderedCenter_;\n                var resolution = this.renderedResolution_;\n                var rotation = this.renderedRotation_;\n                var projection = this.renderedProjection_;\n                var extent = this.wrappedRenderedExtent_;\n                var layer = this.getLayer();\n                var transforms = [];\n                var width = size[0] * HIT_DETECT_RESOLUTION;\n                var height = size[1] * HIT_DETECT_RESOLUTION;\n                transforms.push(this.getRenderTransform(center, resolution, rotation, HIT_DETECT_RESOLUTION, width, height, 0).slice());\n                var source = layer.getSource();\n                var projectionExtent = projection.getExtent();\n                if (source.getWrapX() &&\n                    projection.canWrapX() &&\n                    !containsExtent(projectionExtent, extent)) {\n                    var startX = extent[0];\n                    var worldWidth = getWidth(projectionExtent);\n                    var world = 0;\n                    var offsetX = void 0;\n                    while (startX < projectionExtent[0]) {\n                        --world;\n                        offsetX = worldWidth * world;\n                        transforms.push(this.getRenderTransform(center, resolution, rotation, HIT_DETECT_RESOLUTION, width, height, offsetX).slice());\n                        startX += worldWidth;\n                    }\n                    world = 0;\n                    startX = extent[2];\n                    while (startX > projectionExtent[2]) {\n                        ++world;\n                        offsetX = worldWidth * world;\n                        transforms.push(this.getRenderTransform(center, resolution, rotation, HIT_DETECT_RESOLUTION, width, height, offsetX).slice());\n                        startX -= worldWidth;\n                    }\n                }\n                this.hitDetectionImageData_ = createHitDetectionImageData(size, transforms, this.renderedFeatures_, layer.getStyleFunction(), extent, resolution, rotation);\n            }\n            resolve(hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_));\n        }.bind(this));\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n     * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, matches) {\n        var _this = this;\n        if (!this.replayGroup_) {\n            return undefined;\n        }\n        var resolution = frameState.viewState.resolution;\n        var rotation = frameState.viewState.rotation;\n        var layer = this.getLayer();\n        /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n        var features = {};\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n         * @param {number} distanceSq The squared distance to the click position\n         * @return {T|undefined} Callback result.\n         */\n        var featureCallback = function (feature, geometry, distanceSq) {\n            var key = getUid(feature);\n            var match = features[key];\n            if (!match) {\n                if (distanceSq === 0) {\n                    features[key] = true;\n                    return callback(feature, layer, geometry);\n                }\n                matches.push((features[key] = {\n                    feature: feature,\n                    layer: layer,\n                    geometry: geometry,\n                    distanceSq: distanceSq,\n                    callback: callback,\n                }));\n            }\n            else if (match !== true && distanceSq < match.distanceSq) {\n                if (distanceSq === 0) {\n                    features[key] = true;\n                    matches.splice(matches.lastIndexOf(match), 1);\n                    return callback(feature, layer, geometry);\n                }\n                match.geometry = geometry;\n                match.distanceSq = distanceSq;\n            }\n            return undefined;\n        };\n        var result;\n        var executorGroups = [this.replayGroup_];\n        if (this.declutterExecutorGroup) {\n            executorGroups.push(this.declutterExecutorGroup);\n        }\n        executorGroups.some(function (executorGroup) {\n            return (result = executorGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, featureCallback, executorGroup === _this.declutterExecutorGroup &&\n                frameState.declutterTree\n                ? frameState.declutterTree.all().map(function (item) { return item.value; })\n                : null));\n        });\n        return result;\n    };\n    /**\n     * Perform action necessary to get the layer rendered after new fonts have loaded\n     */\n    CanvasVectorLayerRenderer.prototype.handleFontsChanged = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && this.replayGroup_) {\n            layer.changed();\n        }\n    };\n    /**\n     * Handle changes in image style state.\n     * @param {import(\"../../events/Event.js\").default} event Image style change event.\n     * @private\n     */\n    CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function (event) {\n        this.renderIfReadyAndVisible();\n    };\n    /**\n     * Determine whether render should be called.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    CanvasVectorLayerRenderer.prototype.prepareFrame = function (frameState) {\n        var vectorLayer = this.getLayer();\n        var vectorSource = vectorLayer.getSource();\n        if (!vectorSource) {\n            return false;\n        }\n        var animating = frameState.viewHints[ViewHint.ANIMATING];\n        var interacting = frameState.viewHints[ViewHint.INTERACTING];\n        var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n        var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n        if ((this.ready && !updateWhileAnimating && animating) ||\n            (!updateWhileInteracting && interacting)) {\n            this.animatingOrInteracting_ = true;\n            return true;\n        }\n        this.animatingOrInteracting_ = false;\n        var frameStateExtent = frameState.extent;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var resolution = viewState.resolution;\n        var pixelRatio = frameState.pixelRatio;\n        var vectorLayerRevision = vectorLayer.getRevision();\n        var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n        var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n        if (vectorLayerRenderOrder === undefined) {\n            vectorLayerRenderOrder = defaultRenderOrder;\n        }\n        var center = viewState.center.slice();\n        var extent = buffer(frameStateExtent, vectorLayerRenderBuffer * resolution);\n        var renderedExtent = extent.slice();\n        var loadExtents = [extent.slice()];\n        var projectionExtent = projection.getExtent();\n        if (vectorSource.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, frameState.extent)) {\n            // For the replay group, we need an extent that intersects the real world\n            // (-180° to +180°). To support geometries in a coordinate range from -540°\n            // to +540°, we add at least 1 world width on each side of the projection\n            // extent. If the viewport is wider than the world, we need to add half of\n            // the viewport width to make sure we cover the whole viewport.\n            var worldWidth = getWidth(projectionExtent);\n            var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n            extent[0] = projectionExtent[0] - gutter;\n            extent[2] = projectionExtent[2] + gutter;\n            wrapCoordinateX(center, projection);\n            var loadExtent = wrapExtentX(loadExtents[0], projection);\n            // If the extent crosses the date line, we load data for both edges of the worlds\n            if (loadExtent[0] < projectionExtent[0] &&\n                loadExtent[2] < projectionExtent[2]) {\n                loadExtents.push([\n                    loadExtent[0] + worldWidth,\n                    loadExtent[1],\n                    loadExtent[2] + worldWidth,\n                    loadExtent[3],\n                ]);\n            }\n            else if (loadExtent[0] > projectionExtent[0] &&\n                loadExtent[2] > projectionExtent[2]) {\n                loadExtents.push([\n                    loadExtent[0] - worldWidth,\n                    loadExtent[1],\n                    loadExtent[2] - worldWidth,\n                    loadExtent[3],\n                ]);\n            }\n        }\n        if (this.ready &&\n            this.renderedResolution_ == resolution &&\n            this.renderedRevision_ == vectorLayerRevision &&\n            this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n            containsExtent(this.wrappedRenderedExtent_, extent)) {\n            if (!equals(this.renderedExtent_, renderedExtent)) {\n                this.hitDetectionImageData_ = null;\n                this.renderedExtent_ = renderedExtent;\n            }\n            this.renderedCenter_ = center;\n            this.replayGroupChanged = false;\n            return true;\n        }\n        this.replayGroup_ = null;\n        var replayGroup = new CanvasBuilderGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio);\n        var declutterBuilderGroup;\n        if (this.getLayer().getDeclutter()) {\n            declutterBuilderGroup = new CanvasBuilderGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio);\n        }\n        var userProjection = getUserProjection();\n        var userTransform;\n        if (userProjection) {\n            for (var i = 0, ii = loadExtents.length; i < ii; ++i) {\n                var extent_1 = loadExtents[i];\n                var userExtent_1 = toUserExtent(extent_1, projection);\n                vectorSource.loadFeatures(userExtent_1, toUserResolution(resolution, projection), userProjection);\n            }\n            userTransform = getTransformFromProjections(userProjection, projection);\n        }\n        else {\n            for (var i = 0, ii = loadExtents.length; i < ii; ++i) {\n                vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n            }\n        }\n        var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n        var ready = true;\n        var render = \n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         * @this {CanvasVectorLayerRenderer}\n         */\n        function (feature) {\n            var styles;\n            var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n            if (styleFunction) {\n                styles = styleFunction(feature, resolution);\n            }\n            if (styles) {\n                var dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup, userTransform, declutterBuilderGroup);\n                ready = ready && !dirty;\n            }\n        }.bind(this);\n        var userExtent = toUserExtent(extent, projection);\n        /** @type {Array<import(\"../../Feature.js\").default>} */\n        var features = vectorSource.getFeaturesInExtent(userExtent);\n        if (vectorLayerRenderOrder) {\n            features.sort(vectorLayerRenderOrder);\n        }\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            render(features[i]);\n        }\n        this.renderedFeatures_ = features;\n        this.ready = ready;\n        var replayGroupInstructions = replayGroup.finish();\n        var executorGroup = new ExecutorGroup(extent, resolution, pixelRatio, vectorSource.getOverlaps(), replayGroupInstructions, vectorLayer.getRenderBuffer());\n        if (declutterBuilderGroup) {\n            this.declutterExecutorGroup = new ExecutorGroup(extent, resolution, pixelRatio, vectorSource.getOverlaps(), declutterBuilderGroup.finish(), vectorLayer.getRenderBuffer());\n        }\n        this.renderedResolution_ = resolution;\n        this.renderedRevision_ = vectorLayerRevision;\n        this.renderedRenderOrder_ = vectorLayerRenderOrder;\n        this.renderedExtent_ = renderedExtent;\n        this.wrappedRenderedExtent_ = extent;\n        this.renderedCenter_ = center;\n        this.renderedProjection_ = projection;\n        this.replayGroup_ = executorGroup;\n        this.hitDetectionImageData_ = null;\n        this.replayGroupChanged = true;\n        return true;\n    };\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {number} squaredTolerance Squared render tolerance.\n     * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n     * @param {import(\"../../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n     * @return {boolean} `true` if an image is loading.\n     */\n    CanvasVectorLayerRenderer.prototype.renderFeature = function (feature, squaredTolerance, styles, builderGroup, opt_transform, opt_declutterBuilderGroup) {\n        if (!styles) {\n            return false;\n        }\n        var loading = false;\n        if (Array.isArray(styles)) {\n            for (var i = 0, ii = styles.length; i < ii; ++i) {\n                loading =\n                    renderFeature(builderGroup, feature, styles[i], squaredTolerance, this.boundHandleStyleImageChange_, opt_transform, opt_declutterBuilderGroup) || loading;\n            }\n        }\n        else {\n            loading = renderFeature(builderGroup, feature, styles, squaredTolerance, this.boundHandleStyleImageChange_, opt_transform, opt_declutterBuilderGroup);\n        }\n        return loading;\n    };\n    return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\nexport default CanvasVectorLayerRenderer;\n//# sourceMappingURL=VectorLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nvar VectorLayer = /** @class */ (function (_super) {\n    __extends(VectorLayer, _super);\n    /**\n     * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [opt_options] Options.\n     */\n    function VectorLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    VectorLayer.prototype.createRenderer = function () {\n        return new CanvasVectorLayerRenderer(this);\n    };\n    return VectorLayer;\n}(BaseVectorLayer));\nexport default VectorLayer;\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/render/VectorContext\n */\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = /** @class */ (function () {\n    function VectorContext() {\n    }\n    /**\n     * Render a geometry with a custom renderer.\n     *\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {Function} renderer Renderer.\n     * @param {Function} hitDetectionRenderer Renderer.\n     */\n    VectorContext.prototype.drawCustom = function (geometry, feature, renderer, hitDetectionRenderer) { };\n    /**\n     * Render a geometry.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n     */\n    VectorContext.prototype.drawGeometry = function (geometry) { };\n    /**\n     * Set the rendering style.\n     *\n     * @param {import(\"../style/Style.js\").default} style The rendering style.\n     */\n    VectorContext.prototype.setStyle = function (style) { };\n    /**\n     * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawCircle = function (circleGeometry, feature) { };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"../style/Style.js\").default} style Style.\n     */\n    VectorContext.prototype.drawFeature = function (feature, style) { };\n    /**\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawGeometryCollection = function (geometryCollectionGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawLineString = function (lineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPoint = function (multiPointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPoint = function (pointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPolygon = function (polygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawText = function (geometry, feature) { };\n    /**\n     * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    VectorContext.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) { };\n    /**\n     * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n     * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with a text style.\n     */\n    VectorContext.prototype.setImageStyle = function (imageStyle, opt_declutterImageWithText) { };\n    /**\n     * @param {import(\"../style/Text.js\").default} textStyle Text style.\n     * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with an image style.\n     */\n    VectorContext.prototype.setTextStyle = function (textStyle, opt_declutterImageWithText) { };\n    return VectorContext;\n}());\nexport default VectorContext;\n//# sourceMappingURL=VectorContext.js.map"],"sourceRoot":""}