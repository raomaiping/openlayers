{"version":3,"sources":["webpack:///./src/hooks/updateMapSize.js","webpack:///./src/views/map-marker/add-text/tools.js","webpack:///./src/views/map-marker/add-text/index.vue","webpack:///./src/views/map-marker/add-text/index.vue?ea7c","webpack:///./src/views/map-marker/add-text/index.vue?9ef8","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/style/Text.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/control/FullScreen.js"],"names":["map","targetNode","document","querySelector","observer","MutationObserver","mutationsList","mutation","type","attributeName","i","length","updateSize","observe","attributes","childList","subtree","onBeforeUnmount","disconnect","createLabelStyle","feature","Style","text","Text","textAlign","textBaseline","font","get","fill","Fill","color","stroke","Stroke","width","state","reactive","input","vectorSource","raster","TileLayer","source","XYZ","attributions","ATTRIBUTIONS","url","MAPURL","maxZoom","onMounted","initMap","Map","target","layers","view","View","projection","center","SHENZHEN","zoom","controls","defaults","extend","FullScreen","updateMapSize","iconFeature","Feature","geometry","Point","name","setStyle","VectorSource","features","vectorLayer","VectorLayer","addLayer","on","evt","ElMessage","message","addVectorLabel","coordinate","newFeature","addFeature","__exports__","opt_options","options","this","font_","rotation_","rotation","rotateWithView_","rotateWithView","scale_","scale","scaleArray_","undefined","text_","textAlign_","justify_","justify","textBaseline_","fill_","maxAngle_","maxAngle","Math","PI","placement_","placement","POINT","overflow_","overflow","stroke_","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","prototype","clone","getScale","getFont","getPlacement","getMaxAngle","getOverflow","getRotation","getRotateWithView","Array","isArray","slice","getText","getTextAlign","getJustify","getTextBaseline","getFill","getStroke","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","getScaleArray","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRotateWithView","setFill","setRotation","setScale","setStroke","setText","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","extendStatics","__extends","d","b","Object","setPrototypeOf","__proto__","p","hasOwnProperty","call","TypeError","String","__","constructor","create","events","FullScreenEventType","_super","_this","element","createElement","once","un","keys_","keys","source_","isInFullscreen_","boundHandleMapTargetChange_","handleMapTargetChange_","bind","cssClassName_","className","documentListeners_","activeClassName_","activeClassName","split","inactiveClassName_","inactiveClassName","label","labelNode_","createTextNode","labelActive","labelActiveNode_","tipLabel","button_","title","setAttribute","appendChild","addEventListener","CLICK","handleClick_","setClassName_","concat","event","preventDefault","handleFullScreen_","getMap","doc","getOwnerDocument","isFullScreenSupported","isFullScreen","exitFullscreen","exitFullScreen","getElementById","getTargetElement","requestFullScreen","requestFullScreenWithKeys","handleFullScreenChange_","wasInFullscreen","dispatchEvent","fullscreen","_a","_b","_c","_d","classList","remove","apply","add","setMap","oldMap","removeChangeListener","TARGET","addChangeListener","listeners","ii","push","body","requestFullscreen","fullscreenEnabled","fullscreenElement"],"mappings":"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","file":"js/chunk-0e8c79ce.4dd2fc05.js","sourcesContent":["import { onBeforeUnmount } from \"vue\";\n\n/**\n * 监听侧边栏，侧边栏发生变化更新地图\n * @param {ol.Map} map 地图实例\n */\nexport default (...map) => {\n  // 选择需要观察变动的节点\n  const targetNode = document.querySelector(\n    \".el-aside .menu .el-scrollbar__view\"\n  );\n  // 观察器的配置（需要观察什么变动）\n  const config = { attributes: true, childList: true, subtree: true };\n  // 当观察到变动时执行的回调函数\n  const callback = function (mutationsList) {\n    // Use traditional 'for loops' for IE 11\n    for (let mutation of mutationsList) {\n      if (mutation.type === \"childList\") {\n        // console.log(\"已添加或删除子节点。\");\n      } else if (\n        mutation.type === \"attributes\" &&\n        mutation.attributeName === \"style\"\n      ) {\n        for (let i = 0; i < map.length; i++) {\n          map[i].updateSize();\n        }\n\n        // console.log(\"这个 \" + mutation.attributeName + \" 属性被修改。\");\n      }\n    }\n  };\n  // 创建一个观察器实例并传入回调函数\n  const observer = new MutationObserver(callback);\n\n  // 以上述配置开始观察目标节点\n  observer.observe(targetNode, config);\n\n  //卸载前\n  onBeforeUnmount(() => {\n    observer.disconnect();\n  });\n};\n","import { Style, Text, Fill, Stroke } from \"ol/style\";\nimport { Feature } from \"ol\";\nimport { Point } from \"ol/geom\";\n\n/**\n * 创建矢量标注样式函数,设置image为图标ol.style.Icon\n * @param {ol.Feature} feature 要素\n */\nexport const createLabelStyle = (feature) =>\n  new Style({\n    text: new Text({\n      //位置\n      textAlign: \"center\",\n      //基准线\n      textBaseline: \"middle\",\n      //文字样式\n      font: \"normal 14px 微软雅黑\",\n      //文本内容\n      text: feature.get(\"name\"),\n      //文本填充样式（即文字颜色）\n      fill: new Fill({ color: \"#aa3300\" }),\n      stroke: new Stroke({ color: \"#ffcc33\", width: 2 }),\n    }),\n  });\n\n/**\n * 添加一个新的标注（矢量要素）\n * @param {ol.Coordinate} coordinate 坐标点\n * @param {ol.source.Vector} vectorSource 矢量标注的数据源\n * @param {String} name 标注名\n */\nexport const addVectorLabel = ({\n  coordinate,\n  vectorSource,\n  name = \"标注点\",\n}) => {\n  //新建一个要素 ol.Feature\n  var newFeature = new Feature({\n    //几何信息\n    geometry: new Point(coordinate),\n    //名称属性\n    name,\n  });\n  //设置要素的样式\n  newFeature.setStyle(createLabelStyle(newFeature));\n  //将新要素添加到数据源中\n  vectorSource.addFeature(newFeature);\n};\n","<template>\n  <div id=\"top\">\n    <el-input\n      v-model=\"state.input\"\n      placeholder=\"输入文字后点击地图方可添加文字标注\"\n      clearable\n    />\n  </div>\n  <div id=\"map\"></div>\n</template>\n\n<script setup>\n  import \"ol/ol.css\";\n  import { onMounted, reactive } from \"vue\";\n  import { Map, View, Feature } from \"ol\";\n  import { Tile as TileLayer, Vector as VectorLayer } from \"ol/layer\";\n  import { defaults, FullScreen } from \"ol/control\";\n  import { XYZ, Vector as VectorSource } from \"ol/source\";\n  import { Point } from \"ol/geom\";\n  import { ATTRIBUTIONS, SHENZHEN, MAPURL } from \"@/constants\";\n  import { ElMessage } from \"element-plus\";\n  import { createLabelStyle, addVectorLabel } from \"./tools\";\n  import updateMapSize from \"@/hooks/updateMapSize\";\n\n  const state = reactive({\n    input: \"\",\n    map: null,\n    vectorSource: null,\n  });\n  const raster = new TileLayer({\n    source: new XYZ({\n      attributions: ATTRIBUTIONS,\n      url: MAPURL,\n      maxZoom: 20,\n    }),\n  });\n  const initMap = () => {\n    state.map = new Map({\n      //初始化map\n      target: \"map\",\n      //地图容器中加载的图层\n      layers: [\n        //加载瓦片图层数据\n        raster,\n      ],\n      view: new View({\n        projection: \"EPSG:4326\", // 坐标系，有EPSG:4326和EPSG:3 857\n        center: SHENZHEN, // 深圳坐标\n        //地图初始显示级别\n        zoom: 5,\n      }),\n      //加载控件到地图容器中\n      controls: defaults().extend([\n        new FullScreen(), //加载全屏显示控件（目前支持非IE内核浏览器）\n      ]),\n    });\n    // 侧边栏变化更新地图\n    updateMapSize(state.map);\n    //实例化Vector要素，通过矢量图层添加到地图容器中\n    const iconFeature = new Feature({\n      geometry: new Point(SHENZHEN),\n      //名称属性\n      name: \"深圳市\",\n    });\n    iconFeature.setStyle(createLabelStyle(iconFeature));\n    //矢量标注的数据源\n    state.vectorSource = new VectorSource({\n      features: [iconFeature],\n    });\n    //矢量标注图层\n    const vectorLayer = new VectorLayer({\n      source: state.vectorSource,\n    });\n    state.map.addLayer(vectorLayer);\n  };\n\n  onMounted(() => {\n    initMap();\n    state.map.on(\"click\", (evt) => {\n      if (!state.input) {\n        ElMessage({\n          message: \"请先添加标注名\",\n          type: \"warning\",\n        });\n        return;\n      }\n      //鼠标单击点坐标\n      const coordinate = evt.coordinate;\n      //添加一个新的标注（矢量要素）\n      addVectorLabel({\n        coordinate,\n        vectorSource: state.vectorSource,\n        name: state.input,\n      });\n    });\n  });\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n  #map {\n    position: absolute;\n    top: 50px;\n    bottom: 0;\n    left: 0;\n    right: 0;\n  }\n  #top {\n    text-align: center;\n    height: 50px;\n    line-height: 50px;\n  }\n  .el-input {\n    width: 600px;\n  }\n  .mobile #top {\n    font-size: 12px;\n  }\n  .mobile .el-input {\n    width: 300px;\n  }\n</style>\n","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=7094eaae&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/openlayers/openlayers/node_modules/.pnpm/vue-loader@16.8.3_@vue+compiler-sfc@3.4.6_vue@3.4.6_webpack@4.47.0/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7094eaae\"]])\n\nexport default __exports__","export * from \"-!../../../../node_modules/.pnpm/mini-css-extract-plugin@0.9.0_webpack@4.47.0/node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../../node_modules/.pnpm/css-loader@3.6.0_webpack@4.47.0/node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/.pnpm/vue-loader@16.8.3_@vue+compiler-sfc@3.4.6_vue@3.4.6_webpack@4.47.0/node_modules/vue-loader/dist/stylePostLoader.js!../../../../node_modules/.pnpm/postcss-loader@3.0.0/node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/.pnpm/cache-loader@4.1.0_webpack@4.47.0/node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/.pnpm/vue-loader@16.8.3_@vue+compiler-sfc@3.4.6_vue@3.4.6_webpack@4.47.0/node_modules/vue-loader/dist/index.js??ref--1-1!./index.vue?vue&type=style&index=0&id=7094eaae&scoped=true&lang=css\"","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\nimport { toSize } from '../size.js';\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nvar DEFAULT_FILL_COLOR = '#333';\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nvar Text = /** @class */ (function () {\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function Text(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.font_ = options.font;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size|undefined}\n         */\n        this.scale_ = options.scale;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n        /**\n         * @private\n         * @type {string|Array<string>|undefined}\n         */\n        this.text_ = options.text;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textAlign_ = options.textAlign;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.justify_ = options.justify;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textBaseline_ = options.textBaseline;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ =\n            options.fill !== undefined\n                ? options.fill\n                : new Fill({ color: DEFAULT_FILL_COLOR });\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxAngle_ =\n            options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n        /**\n         * @private\n         * @type {import(\"./TextPlacement.js\").default|string}\n         */\n        this.placement_ =\n            options.placement !== undefined ? options.placement : TextPlacement.POINT;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.overflow_ = !!options.overflow;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.backgroundFill_ = options.backgroundFill\n            ? options.backgroundFill\n            : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.backgroundStroke_ = options.backgroundStroke\n            ? options.backgroundStroke\n            : null;\n        /**\n         * @private\n         * @type {Array<number>|null}\n         */\n        this.padding_ = options.padding === undefined ? null : options.padding;\n    }\n    /**\n     * Clones the style.\n     * @return {Text} The cloned style.\n     * @api\n     */\n    Text.prototype.clone = function () {\n        var scale = this.getScale();\n        return new Text({\n            font: this.getFont(),\n            placement: this.getPlacement(),\n            maxAngle: this.getMaxAngle(),\n            overflow: this.getOverflow(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            text: this.getText(),\n            textAlign: this.getTextAlign(),\n            justify: this.getJustify(),\n            textBaseline: this.getTextBaseline(),\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            offsetX: this.getOffsetX(),\n            offsetY: this.getOffsetY(),\n            backgroundFill: this.getBackgroundFill()\n                ? this.getBackgroundFill().clone()\n                : undefined,\n            backgroundStroke: this.getBackgroundStroke()\n                ? this.getBackgroundStroke().clone()\n                : undefined,\n            padding: this.getPadding() || undefined,\n        });\n    };\n    /**\n     * Get the `overflow` configuration.\n     * @return {boolean} Let text overflow the length of the path they follow.\n     * @api\n     */\n    Text.prototype.getOverflow = function () {\n        return this.overflow_;\n    };\n    /**\n     * Get the font name.\n     * @return {string|undefined} Font.\n     * @api\n     */\n    Text.prototype.getFont = function () {\n        return this.font_;\n    };\n    /**\n     * Get the maximum angle between adjacent characters.\n     * @return {number} Angle in radians.\n     * @api\n     */\n    Text.prototype.getMaxAngle = function () {\n        return this.maxAngle_;\n    };\n    /**\n     * Get the label placement.\n     * @return {import(\"./TextPlacement.js\").default|string} Text placement.\n     * @api\n     */\n    Text.prototype.getPlacement = function () {\n        return this.placement_;\n    };\n    /**\n     * Get the x-offset for the text.\n     * @return {number} Horizontal text offset.\n     * @api\n     */\n    Text.prototype.getOffsetX = function () {\n        return this.offsetX_;\n    };\n    /**\n     * Get the y-offset for the text.\n     * @return {number} Vertical text offset.\n     * @api\n     */\n    Text.prototype.getOffsetY = function () {\n        return this.offsetY_;\n    };\n    /**\n     * Get the fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Determine whether the text rotates with the map.\n     * @return {boolean|undefined} Rotate with map.\n     * @api\n     */\n    Text.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the text rotation.\n     * @return {number|undefined} Rotation.\n     * @api\n     */\n    Text.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the text scale.\n     * @return {number|import(\"../size.js\").Size|undefined} Scale.\n     * @api\n     */\n    Text.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the symbolizer scale array.\n     * @return {import(\"../size.js\").Size} Scale array.\n     */\n    Text.prototype.getScaleArray = function () {\n        return this.scaleArray_;\n    };\n    /**\n     * Get the stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Get the text to be rendered.\n     * @return {string|Array<string>|undefined} Text.\n     * @api\n     */\n    Text.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Get the text alignment.\n     * @return {string|undefined} Text align.\n     * @api\n     */\n    Text.prototype.getTextAlign = function () {\n        return this.textAlign_;\n    };\n    /**\n     * Get the justification.\n     * @return {string|undefined} Justification.\n     * @api\n     */\n    Text.prototype.getJustify = function () {\n        return this.justify_;\n    };\n    /**\n     * Get the text baseline.\n     * @return {string|undefined} Text baseline.\n     * @api\n     */\n    Text.prototype.getTextBaseline = function () {\n        return this.textBaseline_;\n    };\n    /**\n     * Get the background fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getBackgroundFill = function () {\n        return this.backgroundFill_;\n    };\n    /**\n     * Get the background stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getBackgroundStroke = function () {\n        return this.backgroundStroke_;\n    };\n    /**\n     * Get the padding for the text.\n     * @return {Array<number>|null} Padding.\n     * @api\n     */\n    Text.prototype.getPadding = function () {\n        return this.padding_;\n    };\n    /**\n     * Set the `overflow` property.\n     *\n     * @param {boolean} overflow Let text overflow the path that it follows.\n     * @api\n     */\n    Text.prototype.setOverflow = function (overflow) {\n        this.overflow_ = overflow;\n    };\n    /**\n     * Set the font.\n     *\n     * @param {string|undefined} font Font.\n     * @api\n     */\n    Text.prototype.setFont = function (font) {\n        this.font_ = font;\n    };\n    /**\n     * Set the maximum angle between adjacent characters.\n     *\n     * @param {number} maxAngle Angle in radians.\n     * @api\n     */\n    Text.prototype.setMaxAngle = function (maxAngle) {\n        this.maxAngle_ = maxAngle;\n    };\n    /**\n     * Set the x offset.\n     *\n     * @param {number} offsetX Horizontal text offset.\n     * @api\n     */\n    Text.prototype.setOffsetX = function (offsetX) {\n        this.offsetX_ = offsetX;\n    };\n    /**\n     * Set the y offset.\n     *\n     * @param {number} offsetY Vertical text offset.\n     * @api\n     */\n    Text.prototype.setOffsetY = function (offsetY) {\n        this.offsetY_ = offsetY;\n    };\n    /**\n     * Set the text placement.\n     *\n     * @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n     * @api\n     */\n    Text.prototype.setPlacement = function (placement) {\n        this.placement_ = placement;\n    };\n    /**\n     * Set whether to rotate the text with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    Text.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number|undefined} rotation Rotation.\n     * @api\n     */\n    Text.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n     * @api\n     */\n    Text.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n        this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n    };\n    /**\n     * Set the stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Set the text.\n     *\n     * @param {string|Array<string>|undefined} text Text.\n     * @api\n     */\n    Text.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Set the text alignment.\n     *\n     * @param {string|undefined} textAlign Text align.\n     * @api\n     */\n    Text.prototype.setTextAlign = function (textAlign) {\n        this.textAlign_ = textAlign;\n    };\n    /**\n     * Set the justification.\n     *\n     * @param {string|undefined} justify Justification.\n     * @api\n     */\n    Text.prototype.setJustify = function (justify) {\n        this.justify_ = justify;\n    };\n    /**\n     * Set the text baseline.\n     *\n     * @param {string|undefined} textBaseline Text baseline.\n     * @api\n     */\n    Text.prototype.setTextBaseline = function (textBaseline) {\n        this.textBaseline_ = textBaseline;\n    };\n    /**\n     * Set the background fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setBackgroundFill = function (fill) {\n        this.backgroundFill_ = fill;\n    };\n    /**\n     * Set the background stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setBackgroundStroke = function (stroke) {\n        this.backgroundStroke_ = stroke;\n    };\n    /**\n     * Set the padding (`[top, right, bottom, left]`).\n     *\n     * @param {Array<number>|null} padding Padding.\n     * @api\n     */\n    Text.prototype.setPadding = function (padding) {\n        this.padding_ = padding;\n    };\n    return Text;\n}());\nexport default Text;\n//# sourceMappingURL=Text.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/FullScreen\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport MapProperty from '../MapProperty.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED } from '../css.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { replaceNode } from '../dom.js';\nvar events = [\n    'fullscreenchange',\n    'webkitfullscreenchange',\n    'MSFullscreenChange',\n];\n/**\n * @enum {string}\n */\nvar FullScreenEventType = {\n    /**\n     * Triggered after the map entered fullscreen.\n     * @event FullScreenEventType#enterfullscreen\n     * @api\n     */\n    ENTERFULLSCREEN: 'enterfullscreen',\n    /**\n     * Triggered after the map leave fullscreen.\n     * @event FullScreenEventType#leavefullscreen\n     * @api\n     */\n    LEAVEFULLSCREEN: 'leavefullscreen',\n};\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen', import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen'|import(\"../ObjectEventType\").Types, Return>} FullScreenOnSignature\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text|HTMLElement} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text|HTMLElement} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [activeClassName=className + '-true'] CSS class name for the button\n * when full-screen is active.\n * @property {string} [inactiveClassName=className + '-false'] CSS class name for the button\n * when full-screen is inactive.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](https://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @fires FullScreenEventType#enterfullscreen\n * @fires FullScreenEventType#leavefullscreen\n * @api\n */\nvar FullScreen = /** @class */ (function (_super) {\n    __extends(FullScreen, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function FullScreen(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target,\n        }) || this;\n        /***\n         * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {FullScreenOnSignature<void>}\n         */\n        _this.un;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.keys_ = options.keys !== undefined ? options.keys : false;\n        /**\n         * @private\n         * @type {HTMLElement|string|undefined}\n         */\n        _this.source_ = options.source;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.isInFullscreen_ = false;\n        /**\n         * @private\n         */\n        _this.boundHandleMapTargetChange_ = _this.handleMapTargetChange_.bind(_this);\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.cssClassName_ =\n            options.className !== undefined ? options.className : 'ol-full-screen';\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.documentListeners_ = [];\n        /**\n         * @private\n         * @type {Array<string>}\n         */\n        _this.activeClassName_ =\n            options.activeClassName !== undefined\n                ? options.activeClassName.split(' ')\n                : [_this.cssClassName_ + '-true'];\n        /**\n         * @private\n         * @type {Array<string>}\n         */\n        _this.inactiveClassName_ =\n            options.inactiveClassName !== undefined\n                ? options.inactiveClassName.split(' ')\n                : [_this.cssClassName_ + '-false'];\n        var label = options.label !== undefined ? options.label : '\\u2922';\n        /**\n         * @private\n         * @type {Text|HTMLElement}\n         */\n        _this.labelNode_ =\n            typeof label === 'string' ? document.createTextNode(label) : label;\n        var labelActive = options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n        /**\n         * @private\n         * @type {Text|HTMLElement}\n         */\n        _this.labelActiveNode_ =\n            typeof labelActive === 'string'\n                ? document.createTextNode(labelActive)\n                : labelActive;\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.button_ = document.createElement('button');\n        _this.button_.title = tipLabel;\n        _this.button_.setAttribute('type', 'button');\n        _this.button_.appendChild(_this.labelNode_);\n        _this.button_.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        _this.setClassName_(_this.button_, _this.isInFullscreen_);\n        _this.element.className = \"\".concat(_this.cssClassName_, \" \").concat(CLASS_UNSELECTABLE, \" \").concat(CLASS_CONTROL);\n        _this.element.appendChild(_this.button_);\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    FullScreen.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleFullScreen_();\n    };\n    /**\n     * @private\n     */\n    FullScreen.prototype.handleFullScreen_ = function () {\n        var map = this.getMap();\n        if (!map) {\n            return;\n        }\n        var doc = map.getOwnerDocument();\n        if (!isFullScreenSupported(doc)) {\n            return;\n        }\n        if (isFullScreen(doc)) {\n            exitFullScreen(doc);\n        }\n        else {\n            var element = void 0;\n            if (this.source_) {\n                element =\n                    typeof this.source_ === 'string'\n                        ? doc.getElementById(this.source_)\n                        : this.source_;\n            }\n            else {\n                element = map.getTargetElement();\n            }\n            if (this.keys_) {\n                requestFullScreenWithKeys(element);\n            }\n            else {\n                requestFullScreen(element);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    FullScreen.prototype.handleFullScreenChange_ = function () {\n        var map = this.getMap();\n        if (!map) {\n            return;\n        }\n        var wasInFullscreen = this.isInFullscreen_;\n        this.isInFullscreen_ = isFullScreen(map.getOwnerDocument());\n        if (wasInFullscreen !== this.isInFullscreen_) {\n            this.setClassName_(this.button_, this.isInFullscreen_);\n            if (this.isInFullscreen_) {\n                replaceNode(this.labelActiveNode_, this.labelNode_);\n                this.dispatchEvent(FullScreenEventType.ENTERFULLSCREEN);\n            }\n            else {\n                replaceNode(this.labelNode_, this.labelActiveNode_);\n                this.dispatchEvent(FullScreenEventType.LEAVEFULLSCREEN);\n            }\n            map.updateSize();\n        }\n    };\n    /**\n     * @param {HTMLElement} element Target element\n     * @param {boolean} fullscreen True if fullscreen class name should be active\n     * @private\n     */\n    FullScreen.prototype.setClassName_ = function (element, fullscreen) {\n        var _a, _b, _c, _d;\n        if (fullscreen) {\n            (_a = element.classList).remove.apply(_a, this.inactiveClassName_);\n            (_b = element.classList).add.apply(_b, this.activeClassName_);\n        }\n        else {\n            (_c = element.classList).remove.apply(_c, this.activeClassName_);\n            (_d = element.classList).add.apply(_d, this.inactiveClassName_);\n        }\n    };\n    /**\n     * Remove the control from its current map and attach it to the new map.\n     * Pass `null` to just remove the control from the current map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default|null} map Map.\n     * @api\n     */\n    FullScreen.prototype.setMap = function (map) {\n        var oldMap = this.getMap();\n        if (oldMap) {\n            oldMap.removeChangeListener(MapProperty.TARGET, this.boundHandleMapTargetChange_);\n        }\n        _super.prototype.setMap.call(this, map);\n        this.handleMapTargetChange_();\n        if (map) {\n            map.addChangeListener(MapProperty.TARGET, this.boundHandleMapTargetChange_);\n        }\n    };\n    /**\n     * @private\n     */\n    FullScreen.prototype.handleMapTargetChange_ = function () {\n        var listeners = this.documentListeners_;\n        for (var i = 0, ii = listeners.length; i < ii; ++i) {\n            unlistenByKey(listeners[i]);\n        }\n        listeners.length = 0;\n        var map = this.getMap();\n        if (map) {\n            var doc = map.getOwnerDocument();\n            if (isFullScreenSupported(doc)) {\n                this.element.classList.remove(CLASS_UNSUPPORTED);\n            }\n            else {\n                this.element.classList.add(CLASS_UNSUPPORTED);\n            }\n            for (var i = 0, ii = events.length; i < ii; ++i) {\n                listeners.push(listen(doc, events[i], this.handleFullScreenChange_, this));\n            }\n            this.handleFullScreenChange_();\n        }\n    };\n    return FullScreen;\n}(Control));\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported(doc) {\n    var body = doc.body;\n    return !!(body['webkitRequestFullscreen'] ||\n        (body['msRequestFullscreen'] && doc['msFullscreenEnabled']) ||\n        (body.requestFullscreen && doc.fullscreenEnabled));\n}\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen(doc) {\n    return !!(doc['webkitIsFullScreen'] ||\n        doc['msFullscreenElement'] ||\n        doc.fullscreenElement);\n}\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n    if (element.requestFullscreen) {\n        element.requestFullscreen();\n    }\n    else if (element['msRequestFullscreen']) {\n        element['msRequestFullscreen']();\n    }\n    else if (element['webkitRequestFullscreen']) {\n        element['webkitRequestFullscreen']();\n    }\n}\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n    if (element['webkitRequestFullscreen']) {\n        element['webkitRequestFullscreen']();\n    }\n    else {\n        requestFullScreen(element);\n    }\n}\n/**\n * Exit fullscreen.\n * @param {Document} doc The document to exit fullscren from\n */\nfunction exitFullScreen(doc) {\n    if (doc.exitFullscreen) {\n        doc.exitFullscreen();\n    }\n    else if (doc['msExitFullscreen']) {\n        doc['msExitFullscreen']();\n    }\n    else if (doc['webkitExitFullscreen']) {\n        doc['webkitExitFullscreen']();\n    }\n}\nexport default FullScreen;\n//# sourceMappingURL=FullScreen.js.map"],"sourceRoot":""}