{"version":3,"sources":["webpack:///./src/hooks/updateMapSize.js","webpack:///./node_modules/.pnpm/core-js@3.35.0/node_modules/core-js/internals/does-not-exceed-safe-integer.js","webpack:///./src/views/third-party-map-display/kml/index.vue","webpack:///./src/views/third-party-map-display/kml/index.vue?a5f7","webpack:///./node_modules/.pnpm/core-js@3.35.0/node_modules/core-js/internals/is-array.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/format/KML.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/geom/MultiPoint.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/format/XMLFeature.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/geom/GeometryCollection.js","webpack:///./node_modules/.pnpm/core-js@3.35.0/node_modules/core-js/internals/array-set-length.js","webpack:///./src/views/third-party-map-display/kml/index.vue?656a","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/format/xsd.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/geom/flat/interpolate.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/geom/MultiPolygon.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/geom/flat/center.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/geom/MultiLineString.js","webpack:///./node_modules/.pnpm/core-js@3.35.0/node_modules/core-js/modules/es.array.push.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/style/Text.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/format/Feature.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/xml.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/geom/LineString.js"],"names":["map","targetNode","document","querySelector","observer","MutationObserver","mutationsList","mutation","type","attributeName","i","length","updateSize","observe","attributes","childList","subtree","onBeforeUnmount","disconnect","$TypeError","TypeError","module","exports","it","raster","TileLayer","source","XYZ","attributions","ATTRIBUTIONS","url","MAPURL","maxZoom","vector","VectorLayer","VectorSource","format","KML","onMounted","Map","layers","target","getElementById","view","View","center","projection","zoom","updateMapSize","displayFeatureInfo","pixel","features","forEachFeatureAtPixel","feature","push","info","ii","get","innerHTML","join","getTarget","style","cursor","on","evt","dragging","getEventPixel","originalEvent","__exports__","classof","Array","isArray","argument","extendStatics","DEFAULT_COLOR","DEFAULT_IMAGE_STYLE_ANCHOR","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS","DEFAULT_IMAGE_STYLE_SIZE","DEFAULT_IMAGE_STYLE_SRC","__extends","d","b","Object","setPrototypeOf","__proto__","p","prototype","hasOwnProperty","call","String","__","this","constructor","create","GX_NAMESPACE_URIS","NAMESPACE_URIS","ICON_ANCHOR_UNITS_MAP","FRACTION","PIXELS","PLACEMARK_PARSERS","extendedDataParser","regionParser","readMultiGeometry","readLineString","readLinearRing","readPoint","readPolygon","readStyle","node","objectStack","styleMapValue","readStyleMapValue","placemarkObject","readStyleURL","lineStrings","GX_MULTITRACK_GEOMETRY_PARSERS","readGxTrack","NETWORK_LINK_PARSERS","LINK_PARSERS","readURI","REGION_PARSERS","object","LAT_LON_ALT_BOX_PARSERS","regionObject","extent","parseFloat","LOD_PARSERS","lodObject","KML_SEQUENCE","KML_SERIALIZERS","context","DOCUMENT_SERIALIZERS","DOCUMENT_NODE_FACTORY","undefined","writePlacemark","DEFAULT_FILL_STYLE","DEFAULT_NO_IMAGE_STYLE","DEFAULT_IMAGE_STYLE","DEFAULT_TEXT_STROKE_STYLE","DEFAULT_STROKE_STYLE","DEFAULT_TEXT_STYLE","DEFAULT_STYLE","TEXTAREA","DEFAULT_STYLE_ARRAY","scaleForSize","size","Math","min","defaultIconUrlFunction","href","_super","opt_options","_this","options","color","anchor","anchorOrigin","BOTTOM_LEFT","anchorXUnits","anchorYUnits","crossOrigin","rotation","scale","src","width","font","fill","stroke","image","text","zIndex","dataProjection","defaultStyle_","defaultStyle","extractStyles_","extractStyles","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","crossOrigin_","iconUrlFunction_","iconUrlFunction","supportedMediaTypes","readDocumentOrFolder_","parsersNS","readPlacemark_","readSharedStyle_","bind","readSharedStyleMap_","id","getAttribute","setId","geometry","setGeometry","styleFunction","styleUrl","sharedStyles","resolution","drawName","name","multiGeometryPoints","getGeometry","getGeometriesArrayRecursive","filter","getType","search","createElement","value","featureStyle","findStyle","nameStyle","foundStyle","textOffset","textAlign","imageStyle","getImage","imageSize","getSize","imageScale","getScaleArray","getAnchor","textStyle","getText","clone","setFont","getFont","setScale","getScale","setFill","getFill","setStroke","getStroke","setText","setOffsetX","setOffsetY","setTextAlign","createNameStyleFunction","concat","slice","createFeatureStyleFunction","setStyle","setProperties","styleUri","baseURI","window","location","URL","readFeatureFromNode","namespaceURI","getReadOptions","readFeaturesFromNode","localName","n","firstElementChild","nextElementSibling","fs","readName","doc","readNameFromDocument","readNameFromNode","nextSibling","nodeType","Node","ELEMENT_NODE","name_1","name_2","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","obj","readRegion","regions","readRegionFromDocument","readRegionFromNode","writeFeaturesNode","adaptOptions","kml","xmlnsUri","setAttributeNS","properties","orderedKeys","values","styleValue","readColor","s","m","exec","hexColor","parseInt","substr","readFlatCoordinates","flatCoordinates","replace","re","x","y","z","trim","readScale","STYLE_MAP_PARSERS","pairObject","PAIR_PARSERS","key","ICON_STYLE_PARSERS","iconObject","ICON_PARSERS","origin","xunits","yunits","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","LABEL_STYLE_PARSERS","LINE_STYLE_PARSERS","POLY_STYLE_PARSERS","FLAT_LINEAR_RING_PARSERS","readFlatLinearRing","GX_TRACK_PARSERS","whens","when","Date","parse","isNaN","coordinates","gxTrackObject","XYZM","GEOMETRY_FLAT_COORDINATES_PARSERS","readFlatCoordinatesFromNode","EXTRUDE_AND_ALTITUDE_MODE_PARSERS","lineString","polygon","MULTI_GEOMETRY_PARSERS","multiGeometry","geometries","homogeneous","layout","point","getLayout","getFlatCoordinates","setCommonGeometryProperties","FLAT_LINEAR_RINGS_PARSERS","innerBoundaryFlatLinearRings","INNER_BOUNDARY_IS_PARSERS","flatLinearRings","apply","flatLinearRing","OUTER_BOUNDARY_IS_PARSERS","ends","STYLE_PARSERS","styleObject","IconObject","drawIcon","keys","offset","hotSpot","test","w","h","heading","imageStyle_1","offsetOrigin","imageScale_1","imageState","getImageState","IDLE","LOADING","listener_1","imageSize_1","resizeScale","unlistenImageChange","listenImageChange","load","strokeStyle","fillStyle","outline","collection","hasExtrude","hasTessellate","hasAltitudeMode","extrudes","tessellates","altitudeModes","set","DATA_PARSERS","EXTENDED_DATA_PARSERS","featureObject","displayName","toString","SCHEMA_DATA_PARSERS","data","writeColorTextNode","rgba","abgr","hex","floor","EXTENDEDDATA_NODE_SERIALIZERS","pair","setAttribute","opt_nodeName","parentNode","DATA_NODE_FACTORY","ICON_SEQUENCE","ICON_SERIALIZERS","GX_NODE_FACTORY","ICON_STYLE_SEQUENCE","ICON_STYLE_SERIALIZERS","icon","vec2","writeScaleTextNode","LABEL_STYLE_SEQUENCE","LABEL_STYLE_SERIALIZERS","LINE_STYLE_SEQUENCE","LINE_STYLE_SERIALIZERS","GEOMETRY_TYPE_TO_NODENAME","GEOMETRY_NODE_FACTORY","POINT_NODE_FACTORY","LINE_STRING_NODE_FACTORY","LINEAR_RING_NODE_FACTORY","POLYGON_NODE_FACTORY","MULTI_GEOMETRY_SERIALIZERS","writePrimitiveGeometry","writePolygon","writeMultiGeometry","factory","forEach","getPoints","getLineStrings","getPolygons","BOUNDARY_IS_SERIALIZERS","writeBoundaryIs","linearRing","PLACEMARK_SERIALIZERS","namesAndValues","names","styles","pointStyles","lineStyles","polyStyles","STYLE_SEQUENCE","STYLE_SERIALIZERS","PLACEMARK_SEQUENCE","EXTENDEDDATA_NODE_FACTORY","getId","getProperties","getGeometryName","sort","v","getStyleFunction","styleArray","getGeometryFunction","PRIMITIVE_GEOMETRY_SEQUENCE","PRIMITIVE_GEOMETRY_SERIALIZERS","dimension","stride","XY","XYM","getStride","POLY_STYLE_SEQUENCE","POLYGON_SERIALIZERS","INNER_BOUNDARY_NODE_FACTORY","OUTER_BOUNDARY_NODE_FACTORY","linearRings","getLinearRings","outerRing","shift","POLY_STYLE_SERIALIZERS","round","getSrc","iconImageSize","getImageSize","iconProperties","origin_1","getOrigin","getRotation","getColor","Number","getWidth","MultiPoint","opt_layout","setFlatCoordinates","setCoordinates","appendPoint","changed","multiPoint","applyProperties","closestPointXY","closestPoint","minSquaredDistance","getExtent","squaredDistance","j","getCoordinates","getPoint","index","points","intersectsExtent","setLayout","XMLFeature","xmlSerializer_","readFeature","readFeatureFromDocument","readFeaturesFromDocument","readFeatures","firstChild","readGeometry","readGeometryFromDocument","readGeometryFromNode","readProjection","readProjectionFromDocument","readProjectionFromNode","writeFeature","writeFeatureNode","serializeToString","writeFeatures","writeGeometry","writeGeometryNode","GeometryCollection","opt_geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","CHANGE","geometryCollection","setGeometries","containsXY","computeExtent","getGeometries","cloneGeometries","getGeometriesArray","geometriesArray","getSimplifiedGeometry","squaredTolerance","simplifiedGeometryRevision","getRevision","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","isEmpty","rotate","angle","sx","opt_sy","opt_anchor","applyTransform","transformFn","translate","deltaX","deltaY","disposeInternal","clonedGeometries","DESCRIPTORS","getOwnPropertyDescriptor","SILENT_ON_NON_WRITABLE_LENGTH_SET","defineProperty","writable","error","O","readBoolean","readDateTime","dateTime","readDecimal","readPositiveInteger","readString","writeBooleanTextNode","bool","writeStringTextNode","writeCDATASection","string","appendChild","createCDATASection","writeDateTimeTextNode","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","createTextNode","writeDecimalTextNode","decimal","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","interpolatePoint","end","fraction","opt_dest","opt_dimension","o","t","x1","y1","length_1","cumulativeLengths","x2","y2","sqrt","dest","NaN","lineStringCoordinateAtM","extrapolate","coordinate","lo","hi","mid","m0","lineStringsCoordinateAtM","interpolate","MultiPolygon","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","maxDelta_","maxDeltaRevision_","orientedRevision_","orientedFlatCoordinates_","polygons","endss","getEnds","jj","appendPolygon","len","newEndss","multiPolygon","getOrientedFlatCoordinates","getArea","opt_right","orient","inflate","getEndss","getFlatInteriorPoints","flatCenters","linearRingss","getInteriorPoints","GeometryLayout","getSimplifiedGeometryInternal","simplifiedFlatCoordinates","simplifiedEndss","getPolygon","prevEnds","Polygon","deflate","lastEnds","SimpleGeometry","MultiLineString","opt_ends","ends_","appendLineString","multiLineString","getCoordinateAtM","opt_extrapolate","opt_interpolate","getLineString","getFlatMidpoints","midpoints","midpoint","simplifiedEnds","$","toObject","lengthOfArrayLike","setArrayLength","doesNotExceedSafeInteger","proto","arity","forced","fails","properErrorOnNonWritableLength","item","argCount","arguments","Text","font_","rotation_","rotateWithView_","rotateWithView","scale_","scaleArray_","text_","textAlign_","justify_","justify","textBaseline_","textBaseline","fill_","maxAngle_","maxAngle","PI","placement_","placement","POINT","overflow_","overflow","stroke_","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getPlacement","getMaxAngle","getOverflow","getRotateWithView","getTextAlign","getJustify","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setMaxAngle","setPlacement","setRotateWithView","setRotation","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","FeatureFormat","defaultFeatureProjection","getUnits","TILE_PIXELS","setWorldExtent","featureProjection","transformGeometryWithOptions","write","transformed","transform","decimals","power_1","pow","XML_SCHEMA_INSTANCE_URI","createElementNS","qualifiedName","getDocument","getAllTextContent","normalizeWhitespace","getAllTextContent_","accumulator","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","isDocument","xml","DOMParser","parseFromString","makeArrayExtender","valueReader","opt_this","array","makeArrayPusher","makeReplacer","makeObjectPropertySetter","opt_property","makeChildAppender","nodeWriter","makeArraySerializer","serializersNS","nodeFactory","serializers","makeSimpleNodeFactory","serialize","opt_namespaceURI","fixedNodeName","nodeName","OBJECT_PROPERTY_NODE_FACTORY","makeSequence","sequence","makeStructureNS","namespaceURIs","structure","opt_structureNS","structureNS","parseNode","parsers","parser","pushParseAndPop","pop","opt_keys","pushSerializeAndPop","getXMLSerializer","XMLSerializer","document_","implementation","createDocument","LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","forEachSegment","callback","getCoordinateAt","getLength","getFlatMidpoint"],"mappings":"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","file":"js/chunk-209394e6.cf91d948.js","sourcesContent":["import { onBeforeUnmount } from \"vue\";\n\n/**\n * 监听侧边栏，侧边栏发生变化更新地图\n * @param {ol.Map} map 地图实例\n */\nexport default (...map) => {\n  // 选择需要观察变动的节点\n  const targetNode = document.querySelector(\n    \".el-aside .menu .el-scrollbar__view\"\n  );\n  // 观察器的配置（需要观察什么变动）\n  const config = { attributes: true, childList: true, subtree: true };\n  // 当观察到变动时执行的回调函数\n  const callback = function (mutationsList) {\n    // Use traditional 'for loops' for IE 11\n    for (let mutation of mutationsList) {\n      if (mutation.type === \"childList\") {\n        // console.log(\"已添加或删除子节点。\");\n      } else if (\n        mutation.type === \"attributes\" &&\n        mutation.attributeName === \"style\"\n      ) {\n        for (let i = 0; i < map.length; i++) {\n          map[i].updateSize();\n        }\n\n        // console.log(\"这个 \" + mutation.attributeName + \" 属性被修改。\");\n      }\n    }\n  };\n  // 创建一个观察器实例并传入回调函数\n  const observer = new MutationObserver(callback);\n\n  // 以上述配置开始观察目标节点\n  observer.observe(targetNode, config);\n\n  //卸载前\n  onBeforeUnmount(() => {\n    observer.disconnect();\n  });\n};\n","'use strict';\nvar $TypeError = TypeError;\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF; // 2 ** 53 - 1 == 9007199254740991\n\nmodule.exports = function (it) {\n  if (it > MAX_SAFE_INTEGER) throw $TypeError('Maximum allowed index exceeded');\n  return it;\n};\n","<template>\n  <div id=\"map\" class=\"map\"></div>\n  <div id=\"info\">&nbsp;</div>\n</template>\n\n<script setup>\n  import \"ol/ol.css\";\n  import KML from \"ol/format/KML\";\n  import Map from \"ol/Map\";\n  import VectorSource from \"ol/source/Vector\";\n  import View from \"ol/View\";\n  import XYZ from \"ol/source/XYZ\";\n  import { Tile as TileLayer, Vector as VectorLayer } from \"ol/layer\";\n  import { onMounted } from \"vue\";\n  import { MAPURL, ATTRIBUTIONS } from \"@/constants\";\n  import updateMapSize from \"@/hooks/updateMapSize\";\n\n  const raster = new TileLayer({\n    source: new XYZ({\n      attributions: ATTRIBUTIONS,\n      url: MAPURL,\n      maxZoom: 20,\n    }),\n  });\n\n  const vector = new VectorLayer({\n    source: new VectorSource({\n      url: \"data/kml/2012-02-10.kml\",\n      format: new KML(),\n    }),\n  });\n\n  onMounted(() => {\n    const map = new Map({\n      layers: [raster, vector],\n      target: document.getElementById(\"map\"),\n      view: new View({\n        center: [876970.8463461736, 5859807.853963373],\n        projection: \"EPSG:3857\",\n        zoom: 10,\n      }),\n    });\n    // 侧边栏变化更新地图\n    updateMapSize(map);\n    const displayFeatureInfo = (pixel) => {\n      const features = [];\n\n      map.forEachFeatureAtPixel(pixel, function (feature) {\n        features.push(feature);\n      });\n      if (features.length > 0) {\n        const info = [];\n        let i, ii;\n        for (i = 0, ii = features.length; i < ii; ++i) {\n          info.push(features[i].get(\"name\"));\n        }\n        document.getElementById(\"info\").innerHTML =\n          info.join(\", \") || \"(unknown)\";\n        map.getTarget().style.cursor = \"pointer\";\n      } else {\n        document.getElementById(\"info\").innerHTML = \"&nbsp;\";\n        map.getTarget().style.cursor = \"\";\n      }\n    };\n\n    map.on(\"pointermove\", function (evt) {\n      if (evt.dragging) {\n        return;\n      }\n      const pixel = map.getEventPixel(evt.originalEvent);\n      displayFeatureInfo(pixel);\n    });\n\n    map.on(\"click\", function (evt) {\n      displayFeatureInfo(evt.pixel);\n    });\n  });\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n  #map {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n  }\n</style>\n","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=830405d8&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/openlayers/openlayers/node_modules/.pnpm/vue-loader@16.8.3_@vue+compiler-sfc@3.4.6_vue@3.4.6_webpack@4.47.0/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-830405d8\"]])\n\nexport default __exports__","'use strict';\nvar classof = require('../internals/classof-raw');\n\n// `IsArray` abstract operation\n// https://tc39.es/ecma262/#sec-isarray\n// eslint-disable-next-line es/no-array-isarray -- safe\nmodule.exports = Array.isArray || function isArray(argument) {\n  return classof(argument) === 'Array';\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/KML\n */\nimport Feature from '../Feature.js';\nimport Fill from '../style/Fill.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport Icon from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport XMLFeature from './XMLFeature.js';\nimport { OBJECT_PROPERTY_NODE_FACTORY, XML_SCHEMA_INSTANCE_URI, createElementNS, getAllTextContent, isDocument, makeArrayExtender, makeArrayPusher, makeChildAppender, makeObjectPropertySetter, makeReplacer, makeSequence, makeSimpleNodeFactory, makeStructureNS, parse, parseNode, pushParseAndPop, pushSerializeAndPop, } from '../xml.js';\nimport { asArray } from '../color.js';\nimport { assert } from '../asserts.js';\nimport { extend, includes } from '../array.js';\nimport { get as getProjection } from '../proj.js';\nimport { readBoolean, readDecimal, readString, writeBooleanTextNode, writeCDATASection, writeDecimalTextNode, writeStringTextNode, } from './xsd.js';\nimport { toRadians } from '../math.js';\nimport { transformGeometryWithOptions } from './Feature.js';\n/**\n * @typedef {Object} Vec2\n * @property {number} x X coordinate.\n * @property {import(\"../style/IconAnchorUnits\").default} xunits Units of x.\n * @property {number} y Y coordinate.\n * @property {import(\"../style/IconAnchorUnits\").default} yunits Units of Y.\n * @property {import(\"../style/IconOrigin.js\").default} [origin] Origin.\n */\n/**\n * @typedef {Object} GxTrackObject\n * @property {Array<Array<number>>} coordinates Coordinates.\n * @property {Array<number>} whens Whens.\n */\n/**\n * @const\n * @type {Array<string>}\n */\nvar GX_NAMESPACE_URIS = ['http://www.google.com/kml/ext/2.2'];\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n    null,\n    'http://earth.google.com/kml/2.0',\n    'http://earth.google.com/kml/2.1',\n    'http://earth.google.com/kml/2.2',\n    'http://www.opengis.net/kml/2.2',\n];\n/**\n * @const\n * @type {string}\n */\nvar SCHEMA_LOCATION = 'http://www.opengis.net/kml/2.2 ' +\n    'https://developers.google.com/kml/schema/kml22gx.xsd';\n/**\n * @type {Object<string, import(\"../style/IconAnchorUnits\").default>}\n */\nvar ICON_ANCHOR_UNITS_MAP = {\n    'fraction': IconAnchorUnits.FRACTION,\n    'pixels': IconAnchorUnits.PIXELS,\n    'insetPixels': IconAnchorUnits.PIXELS,\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar PLACEMARK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'MultiGeometry': makeObjectPropertySetter(readMultiGeometry, 'geometry'),\n    'LineString': makeObjectPropertySetter(readLineString, 'geometry'),\n    'LinearRing': makeObjectPropertySetter(readLinearRing, 'geometry'),\n    'Point': makeObjectPropertySetter(readPoint, 'geometry'),\n    'Polygon': makeObjectPropertySetter(readPolygon, 'geometry'),\n    'Style': makeObjectPropertySetter(readStyle),\n    'StyleMap': placemarkStyleMapParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readStyleURL),\n    'visibility': makeObjectPropertySetter(readBoolean),\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n    'MultiTrack': makeObjectPropertySetter(readGxMultiTrack, 'geometry'),\n    'Track': makeObjectPropertySetter(readGxTrack, 'geometry'),\n}));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar NETWORK_LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'Link': linkParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'visibility': makeObjectPropertySetter(readBoolean),\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'href': makeObjectPropertySetter(readURI),\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar REGION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'LatLonAltBox': latLonAltBoxParser,\n    'Lod': lodParser,\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar KML_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['Document', 'Placemark']);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar KML_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'Document': makeChildAppender(writeDocument),\n    'Placemark': makeChildAppender(writePlacemark),\n});\n/**\n * @type {import(\"../color.js\").Color}\n */\nvar DEFAULT_COLOR;\n/**\n * @type {Fill|null}\n */\nvar DEFAULT_FILL_STYLE = null;\n/**\n * Get the default fill style (or null if not yet set).\n * @return {Fill|null} The default fill style.\n */\nexport function getDefaultFillStyle() {\n    return DEFAULT_FILL_STYLE;\n}\n/**\n * @type {import(\"../size.js\").Size}\n */\nvar DEFAULT_IMAGE_STYLE_ANCHOR;\n/**\n * @type {import(\"../style/IconAnchorUnits\").default}\n */\nvar DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n/**\n * @type {import(\"../style/IconAnchorUnits\").default}\n */\nvar DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n/**\n * @type {import(\"../size.js\").Size}\n */\nvar DEFAULT_IMAGE_STYLE_SIZE;\n/**\n * @type {string}\n */\nvar DEFAULT_IMAGE_STYLE_SRC;\n/**\n * @type {import(\"../style/Image.js\").default|null}\n */\nvar DEFAULT_IMAGE_STYLE = null;\n/**\n * Get the default image style (or null if not yet set).\n * @return {import(\"../style/Image.js\").default|null} The default image style.\n */\nexport function getDefaultImageStyle() {\n    return DEFAULT_IMAGE_STYLE;\n}\n/**\n * @type {string}\n */\nvar DEFAULT_NO_IMAGE_STYLE;\n/**\n * @type {Stroke|null}\n */\nvar DEFAULT_STROKE_STYLE = null;\n/**\n * Get the default stroke style (or null if not yet set).\n * @return {Stroke|null} The default stroke style.\n */\nexport function getDefaultStrokeStyle() {\n    return DEFAULT_STROKE_STYLE;\n}\n/**\n * @type {Stroke}\n */\nvar DEFAULT_TEXT_STROKE_STYLE;\n/**\n * @type {Text|null}\n */\nvar DEFAULT_TEXT_STYLE = null;\n/**\n * Get the default text style (or null if not yet set).\n * @return {Text|null} The default text style.\n */\nexport function getDefaultTextStyle() {\n    return DEFAULT_TEXT_STYLE;\n}\n/**\n * @type {Style|null}\n */\nvar DEFAULT_STYLE = null;\n/**\n * Get the default style (or null if not yet set).\n * @return {Style|null} The default style.\n */\nexport function getDefaultStyle() {\n    return DEFAULT_STYLE;\n}\n/**\n * @type {Array<Style>|null}\n */\nvar DEFAULT_STYLE_ARRAY = null;\n/**\n * Get the default style array (or null if not yet set).\n * @return {Array<Style>|null} The default style.\n */\nexport function getDefaultStyleArray() {\n    return DEFAULT_STYLE_ARRAY;\n}\n/**\n * Function that returns the scale needed to normalize an icon image to 32 pixels.\n * @param {import(\"../size.js\").Size} size Image size.\n * @return {number} Scale.\n */\nfunction scaleForSize(size) {\n    return 32 / Math.min(size[0], size[1]);\n}\nfunction createStyleDefaults() {\n    DEFAULT_COLOR = [255, 255, 255, 1];\n    DEFAULT_FILL_STYLE = new Fill({\n        color: DEFAULT_COLOR,\n    });\n    DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2];\n    DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = IconAnchorUnits.PIXELS;\n    DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = IconAnchorUnits.PIXELS;\n    DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\n    DEFAULT_IMAGE_STYLE_SRC =\n        'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n    DEFAULT_IMAGE_STYLE = new Icon({\n        anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\n        anchorOrigin: IconOrigin.BOTTOM_LEFT,\n        anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n        anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n        crossOrigin: 'anonymous',\n        rotation: 0,\n        scale: scaleForSize(DEFAULT_IMAGE_STYLE_SIZE),\n        size: DEFAULT_IMAGE_STYLE_SIZE,\n        src: DEFAULT_IMAGE_STYLE_SRC,\n    });\n    DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n    DEFAULT_STROKE_STYLE = new Stroke({\n        color: DEFAULT_COLOR,\n        width: 1,\n    });\n    DEFAULT_TEXT_STROKE_STYLE = new Stroke({\n        color: [51, 51, 51, 1],\n        width: 2,\n    });\n    DEFAULT_TEXT_STYLE = new Text({\n        font: 'bold 16px Helvetica',\n        fill: DEFAULT_FILL_STYLE,\n        stroke: DEFAULT_TEXT_STROKE_STYLE,\n        scale: 0.8,\n    });\n    DEFAULT_STYLE = new Style({\n        fill: DEFAULT_FILL_STYLE,\n        image: DEFAULT_IMAGE_STYLE,\n        text: DEFAULT_TEXT_STYLE,\n        stroke: DEFAULT_STROKE_STYLE,\n        zIndex: 0,\n    });\n    DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\n}\n/**\n * @type {HTMLTextAreaElement}\n */\nvar TEXTAREA;\n/**\n * A function that takes a url `{string}` and returns a url `{string}`.\n * Might be used to change an icon path or to substitute a\n * data url obtained from a KMZ array buffer.\n *\n * @typedef {function(string):string} IconUrlFunction\n * @api\n */\n/**\n * Function that returns a url unchanged.\n * @param {string} href Input url.\n * @return {string} Output url.\n */\nfunction defaultIconUrlFunction(href) {\n    return href;\n}\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array<Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * @property {IconUrlFunction} [iconUrlFunction] Function that takes a url string and returns a url string.\n * Might be used to change an icon path or to substitute a data url obtained from a KMZ array buffer.\n */\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\n * a KML source.\n *\n * MultiGeometries are converted into GeometryCollections if they are a mix of\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\n * all of the same type.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @api\n */\nvar KML = /** @class */ (function (_super) {\n    __extends(KML, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function KML(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        if (!DEFAULT_STYLE_ARRAY) {\n            createStyleDefaults();\n        }\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.dataProjection = getProjection('EPSG:4326');\n        /**\n         * @private\n         * @type {Array<Style>}\n         */\n        _this.defaultStyle_ = options.defaultStyle\n            ? options.defaultStyle\n            : DEFAULT_STYLE_ARRAY;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.extractStyles_ =\n            options.extractStyles !== undefined ? options.extractStyles : true;\n        /**\n         * @type {boolean}\n         */\n        _this.writeStyles_ =\n            options.writeStyles !== undefined ? options.writeStyles : true;\n        /**\n         * @private\n         * @type {!Object<string, (Array<Style>|string)>}\n         */\n        _this.sharedStyles_ = {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.showPointNames_ =\n            options.showPointNames !== undefined ? options.showPointNames : true;\n        /**\n         * @type {null|string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n        /**\n         * @type {IconUrlFunction}\n         */\n        _this.iconUrlFunction_ = options.iconUrlFunction\n            ? options.iconUrlFunction\n            : defaultIconUrlFunction;\n        _this.supportedMediaTypes = ['application/vnd.google-earth.kml+xml'];\n        return _this;\n    }\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<Feature>|undefined} Features.\n     */\n    KML.prototype.readDocumentOrFolder_ = function (node, objectStack) {\n        // FIXME use scope somehow\n        var parsersNS = makeStructureNS(NAMESPACE_URIS, {\n            'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\n            'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\n            'Placemark': makeArrayPusher(this.readPlacemark_, this),\n            'Style': this.readSharedStyle_.bind(this),\n            'StyleMap': this.readSharedStyleMap_.bind(this),\n        });\n        /** @type {Array<Feature>} */\n        // @ts-ignore\n        var features = pushParseAndPop([], parsersNS, node, objectStack, this);\n        if (features) {\n            return features;\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Feature|undefined} Feature.\n     */\n    KML.prototype.readPlacemark_ = function (node, objectStack) {\n        var object = pushParseAndPop({ 'geometry': null }, PLACEMARK_PARSERS, node, objectStack, this);\n        if (!object) {\n            return undefined;\n        }\n        var feature = new Feature();\n        var id = node.getAttribute('id');\n        if (id !== null) {\n            feature.setId(id);\n        }\n        var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n        var geometry = object['geometry'];\n        if (geometry) {\n            transformGeometryWithOptions(geometry, false, options);\n        }\n        feature.setGeometry(geometry);\n        delete object['geometry'];\n        if (this.extractStyles_) {\n            var style = object['Style'];\n            var styleUrl = object['styleUrl'];\n            var styleFunction = createFeatureStyleFunction(style, styleUrl, this.defaultStyle_, this.sharedStyles_, this.showPointNames_);\n            feature.setStyle(styleFunction);\n        }\n        delete object['Style'];\n        // we do not remove the styleUrl property from the object, so it\n        // gets stored on feature when setProperties is called\n        feature.setProperties(object, true);\n        return feature;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    KML.prototype.readSharedStyle_ = function (node, objectStack) {\n        var id = node.getAttribute('id');\n        if (id !== null) {\n            var style = readStyle.call(this, node, objectStack);\n            if (style) {\n                var styleUri = void 0;\n                var baseURI = node.baseURI;\n                if (!baseURI || baseURI == 'about:blank') {\n                    baseURI = window.location.href;\n                }\n                if (baseURI) {\n                    var url = new URL('#' + id, baseURI);\n                    styleUri = url.href;\n                }\n                else {\n                    styleUri = '#' + id;\n                }\n                this.sharedStyles_[styleUri] = style;\n            }\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    KML.prototype.readSharedStyleMap_ = function (node, objectStack) {\n        var id = node.getAttribute('id');\n        if (id === null) {\n            return;\n        }\n        var styleMapValue = readStyleMapValue.call(this, node, objectStack);\n        if (!styleMapValue) {\n            return;\n        }\n        var styleUri;\n        var baseURI = node.baseURI;\n        if (!baseURI || baseURI == 'about:blank') {\n            baseURI = window.location.href;\n        }\n        if (baseURI) {\n            var url = new URL('#' + id, baseURI);\n            styleUri = url.href;\n        }\n        else {\n            styleUri = '#' + id;\n        }\n        this.sharedStyles_[styleUri] = styleMapValue;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    KML.prototype.readFeatureFromNode = function (node, opt_options) {\n        if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n            return null;\n        }\n        var feature = this.readPlacemark_(node, [\n            this.getReadOptions(node, opt_options),\n        ]);\n        if (feature) {\n            return feature;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @protected\n     * @param {Element} node Node.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    KML.prototype.readFeaturesFromNode = function (node, opt_options) {\n        if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n            return [];\n        }\n        var features;\n        var localName = node.localName;\n        if (localName == 'Document' || localName == 'Folder') {\n            features = this.readDocumentOrFolder_(node, [\n                this.getReadOptions(node, opt_options),\n            ]);\n            if (features) {\n                return features;\n            }\n            else {\n                return [];\n            }\n        }\n        else if (localName == 'Placemark') {\n            var feature = this.readPlacemark_(node, [\n                this.getReadOptions(node, opt_options),\n            ]);\n            if (feature) {\n                return [feature];\n            }\n            else {\n                return [];\n            }\n        }\n        else if (localName == 'kml') {\n            features = [];\n            for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n                var fs = this.readFeaturesFromNode(n, opt_options);\n                if (fs) {\n                    extend(features, fs);\n                }\n            }\n            return features;\n        }\n        else {\n            return [];\n        }\n    };\n    /**\n     * Read the name of the KML.\n     *\n     * @param {Document|Element|string} source Source.\n     * @return {string|undefined} Name.\n     * @api\n     */\n    KML.prototype.readName = function (source) {\n        if (!source) {\n            return undefined;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readNameFromDocument(doc);\n        }\n        else if (isDocument(source)) {\n            return this.readNameFromDocument(/** @type {Document} */ (source));\n        }\n        else {\n            return this.readNameFromNode(/** @type {Element} */ (source));\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @return {string|undefined} Name.\n     */\n    KML.prototype.readNameFromDocument = function (doc) {\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                var name_1 = this.readNameFromNode(/** @type {Element} */ (n));\n                if (name_1) {\n                    return name_1;\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {Element} node Node.\n     * @return {string|undefined} Name.\n     */\n    KML.prototype.readNameFromNode = function (node) {\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            if (includes(NAMESPACE_URIS, n.namespaceURI) && n.localName == 'name') {\n                return readString(n);\n            }\n        }\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            var localName = n.localName;\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                (localName == 'Document' ||\n                    localName == 'Folder' ||\n                    localName == 'Placemark' ||\n                    localName == 'kml')) {\n                var name_2 = this.readNameFromNode(n);\n                if (name_2) {\n                    return name_2;\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Read the network links of the KML.\n     *\n     * @param {Document|Element|string} source Source.\n     * @return {Array<Object>} Network links.\n     * @api\n     */\n    KML.prototype.readNetworkLinks = function (source) {\n        var networkLinks = [];\n        if (typeof source === 'string') {\n            var doc = parse(source);\n            extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n        }\n        else if (isDocument(source)) {\n            extend(networkLinks, this.readNetworkLinksFromDocument(/** @type {Document} */ (source)));\n        }\n        else {\n            extend(networkLinks, this.readNetworkLinksFromNode(/** @type {Element} */ (source)));\n        }\n        return networkLinks;\n    };\n    /**\n     * @param {Document} doc Document.\n     * @return {Array<Object>} Network links.\n     */\n    KML.prototype.readNetworkLinksFromDocument = function (doc) {\n        var networkLinks = [];\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                extend(networkLinks, this.readNetworkLinksFromNode(/** @type {Element} */ (n)));\n            }\n        }\n        return networkLinks;\n    };\n    /**\n     * @param {Element} node Node.\n     * @return {Array<Object>} Network links.\n     */\n    KML.prototype.readNetworkLinksFromNode = function (node) {\n        var networkLinks = [];\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                n.localName == 'NetworkLink') {\n                var obj = pushParseAndPop({}, NETWORK_LINK_PARSERS, n, []);\n                networkLinks.push(obj);\n            }\n        }\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            var localName = n.localName;\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                (localName == 'Document' || localName == 'Folder' || localName == 'kml')) {\n                extend(networkLinks, this.readNetworkLinksFromNode(n));\n            }\n        }\n        return networkLinks;\n    };\n    /**\n     * Read the regions of the KML.\n     *\n     * @param {Document|Element|string} source Source.\n     * @return {Array<Object>} Regions.\n     * @api\n     */\n    KML.prototype.readRegion = function (source) {\n        var regions = [];\n        if (typeof source === 'string') {\n            var doc = parse(source);\n            extend(regions, this.readRegionFromDocument(doc));\n        }\n        else if (isDocument(source)) {\n            extend(regions, this.readRegionFromDocument(/** @type {Document} */ (source)));\n        }\n        else {\n            extend(regions, this.readRegionFromNode(/** @type {Element} */ (source)));\n        }\n        return regions;\n    };\n    /**\n     * @param {Document} doc Document.\n     * @return {Array<Object>} Region.\n     */\n    KML.prototype.readRegionFromDocument = function (doc) {\n        var regions = [];\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                extend(regions, this.readRegionFromNode(/** @type {Element} */ (n)));\n            }\n        }\n        return regions;\n    };\n    /**\n     * @param {Element} node Node.\n     * @return {Array<Object>} Region.\n     * @api\n     */\n    KML.prototype.readRegionFromNode = function (node) {\n        var regions = [];\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            if (includes(NAMESPACE_URIS, n.namespaceURI) && n.localName == 'Region') {\n                var obj = pushParseAndPop({}, REGION_PARSERS, n, []);\n                regions.push(obj);\n            }\n        }\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            var localName = n.localName;\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                (localName == 'Document' || localName == 'Folder' || localName == 'kml')) {\n                extend(regions, this.readRegionFromNode(n));\n            }\n        }\n        return regions;\n    };\n    /**\n     * Encode an array of features in the KML format as an XML node. GeometryCollections,\n     * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n     *\n     * @param {Array<Feature>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Options.\n     * @return {Node} Node.\n     * @api\n     */\n    KML.prototype.writeFeaturesNode = function (features, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        var kml = createElementNS(NAMESPACE_URIS[4], 'kml');\n        var xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n        kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\n        kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n        kml.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\n        var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {\n            node: kml,\n        };\n        /** @type {!Object<string, (Array<Feature>|Feature|undefined)>} */\n        var properties = {};\n        if (features.length > 1) {\n            properties['Document'] = features;\n        }\n        else if (features.length == 1) {\n            properties['Placemark'] = features[0];\n        }\n        var orderedKeys = KML_SEQUENCE[kml.namespaceURI];\n        var values = makeSequence(properties, orderedKeys);\n        pushSerializeAndPop(context, KML_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, [opt_options], orderedKeys, this);\n        return kml;\n    };\n    return KML;\n}(XMLFeature));\n/**\n * @param {Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {Style} style Style.\n */\nfunction createNameStyleFunction(foundStyle, name) {\n    var textOffset = [0, 0];\n    var textAlign = 'start';\n    var imageStyle = foundStyle.getImage();\n    if (imageStyle) {\n        var imageSize = imageStyle.getSize();\n        if (imageSize && imageSize.length == 2) {\n            var imageScale = imageStyle.getScaleArray();\n            var anchor = imageStyle.getAnchor();\n            // Offset the label to be centered to the right of the icon,\n            // if there is one.\n            textOffset[0] = imageScale[0] * (imageSize[0] - anchor[0]);\n            textOffset[1] = imageScale[1] * (imageSize[1] / 2 - anchor[1]);\n            textAlign = 'left';\n        }\n    }\n    var textStyle = foundStyle.getText();\n    if (textStyle) {\n        // clone the text style, customizing it with name, alignments and offset.\n        // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n        textStyle = textStyle.clone();\n        textStyle.setFont(textStyle.getFont() || DEFAULT_TEXT_STYLE.getFont());\n        textStyle.setScale(textStyle.getScale() || DEFAULT_TEXT_STYLE.getScale());\n        textStyle.setFill(textStyle.getFill() || DEFAULT_TEXT_STYLE.getFill());\n        textStyle.setStroke(textStyle.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\n    }\n    else {\n        textStyle = DEFAULT_TEXT_STYLE.clone();\n    }\n    textStyle.setText(name);\n    textStyle.setOffsetX(textOffset[0]);\n    textStyle.setOffsetY(textOffset[1]);\n    textStyle.setTextAlign(textAlign);\n    var nameStyle = new Style({\n        image: imageStyle,\n        text: textStyle,\n    });\n    return nameStyle;\n}\n/**\n * @param {Array<Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {import(\"../style/Style.js\").StyleFunction} Feature style function.\n */\nfunction createFeatureStyleFunction(style, styleUrl, defaultStyle, sharedStyles, showPointNames) {\n    return (\n    /**\n     * @param {Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array<Style>|Style} Style.\n     */\n    function (feature, resolution) {\n        var drawName = showPointNames;\n        var name = '';\n        var multiGeometryPoints = [];\n        if (drawName) {\n            var geometry = feature.getGeometry();\n            if (geometry) {\n                if (geometry instanceof GeometryCollection) {\n                    multiGeometryPoints = geometry\n                        .getGeometriesArrayRecursive()\n                        .filter(function (geometry) {\n                        var type = geometry.getType();\n                        return type === 'Point' || type === 'MultiPoint';\n                    });\n                    drawName = multiGeometryPoints.length > 0;\n                }\n                else {\n                    var type = geometry.getType();\n                    drawName = type === 'Point' || type === 'MultiPoint';\n                }\n            }\n        }\n        if (drawName) {\n            name = /** @type {string} */ (feature.get('name'));\n            drawName = drawName && !!name;\n            // convert any html character codes\n            if (drawName && name.search(/&[^&]+;/) > -1) {\n                if (!TEXTAREA) {\n                    TEXTAREA = document.createElement('textarea');\n                }\n                TEXTAREA.innerHTML = name;\n                name = TEXTAREA.value;\n            }\n        }\n        var featureStyle = defaultStyle;\n        if (style) {\n            featureStyle = style;\n        }\n        else if (styleUrl) {\n            featureStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\n        }\n        if (drawName) {\n            var nameStyle = createNameStyleFunction(featureStyle[0], name);\n            if (multiGeometryPoints.length > 0) {\n                // in multigeometries restrict the name style to points and create a\n                // style without image or text for geometries requiring fill or stroke\n                // including any polygon specific style if there is one\n                nameStyle.setGeometry(new GeometryCollection(multiGeometryPoints));\n                var baseStyle = new Style({\n                    geometry: featureStyle[0].getGeometry(),\n                    image: null,\n                    fill: featureStyle[0].getFill(),\n                    stroke: featureStyle[0].getStroke(),\n                    text: null,\n                });\n                return [nameStyle, baseStyle].concat(featureStyle.slice(1));\n            }\n            return nameStyle;\n        }\n        return featureStyle;\n    });\n}\n/**\n * @param {Array<Style>|string|undefined} styleValue Style value.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array<Style>} Style.\n */\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\n    if (Array.isArray(styleValue)) {\n        return styleValue;\n    }\n    else if (typeof styleValue === 'string') {\n        return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n    }\n    else {\n        return defaultStyle;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {import(\"../color.js\").Color|undefined} Color.\n */\nfunction readColor(node) {\n    var s = getAllTextContent(node, false);\n    // The KML specification states that colors should not include a leading `#`\n    // but we tolerate them.\n    var m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n    if (m) {\n        var hexColor = m[1];\n        return [\n            parseInt(hexColor.substr(6, 2), 16),\n            parseInt(hexColor.substr(4, 2), 16),\n            parseInt(hexColor.substr(2, 2), 16),\n            parseInt(hexColor.substr(0, 2), 16) / 255,\n        ];\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {Array<number>|undefined} Flat coordinates.\n */\nexport function readFlatCoordinates(node) {\n    var s = getAllTextContent(node, false);\n    var flatCoordinates = [];\n    // The KML specification states that coordinate tuples should not include\n    // spaces, but we tolerate them.\n    s = s.replace(/\\s*,\\s*/g, ',');\n    var re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?),([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|,|$)(?:([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s+|$))?\\s*/i;\n    var m;\n    while ((m = re.exec(s))) {\n        var x = parseFloat(m[1]);\n        var y = parseFloat(m[2]);\n        var z = m[3] ? parseFloat(m[3]) : 0;\n        flatCoordinates.push(x, y, z);\n        s = s.substr(m[0].length);\n    }\n    if (s !== '') {\n        return undefined;\n    }\n    return flatCoordinates;\n}\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readURI(node) {\n    var s = getAllTextContent(node, false).trim();\n    var baseURI = node.baseURI;\n    if (!baseURI || baseURI == 'about:blank') {\n        baseURI = window.location.href;\n    }\n    if (baseURI) {\n        var url = new URL(s, baseURI);\n        return url.href;\n    }\n    else {\n        return s;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readStyleURL(node) {\n    // KML files in the wild occasionally forget the leading\n    // `#` on styleUrlsdefined in the same document.\n    var s = getAllTextContent(node, false)\n        .trim()\n        .replace(/^(?!.*#)/, '#');\n    var baseURI = node.baseURI;\n    if (!baseURI || baseURI == 'about:blank') {\n        baseURI = window.location.href;\n    }\n    if (baseURI) {\n        var url = new URL(s, baseURI);\n        return url.href;\n    }\n    else {\n        return s;\n    }\n}\n/**\n * @param {Element} node Node.\n * @return {Vec2} Vec2.\n */\nfunction readVec2(node) {\n    var xunits = node.getAttribute('xunits');\n    var yunits = node.getAttribute('yunits');\n    var origin;\n    if (xunits !== 'insetPixels') {\n        if (yunits !== 'insetPixels') {\n            origin = IconOrigin.BOTTOM_LEFT;\n        }\n        else {\n            origin = IconOrigin.TOP_LEFT;\n        }\n    }\n    else {\n        if (yunits !== 'insetPixels') {\n            origin = IconOrigin.BOTTOM_RIGHT;\n        }\n        else {\n            origin = IconOrigin.TOP_RIGHT;\n        }\n    }\n    return {\n        x: parseFloat(node.getAttribute('x')),\n        xunits: ICON_ANCHOR_UNITS_MAP[xunits],\n        y: parseFloat(node.getAttribute('y')),\n        yunits: ICON_ANCHOR_UNITS_MAP[yunits],\n        origin: origin,\n    };\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */\nfunction readScale(node) {\n    return readDecimal(node);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar STYLE_MAP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Pair': pairDataParser,\n});\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>|string|undefined} StyleMap.\n */\nfunction readStyleMapValue(node, objectStack) {\n    return pushParseAndPop(undefined, STYLE_MAP_PARSERS, node, objectStack, this);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar ICON_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Icon': makeObjectPropertySetter(readIcon),\n    'color': makeObjectPropertySetter(readColor),\n    'heading': makeObjectPropertySetter(readDecimal),\n    'hotSpot': makeObjectPropertySetter(readVec2),\n    'scale': makeObjectPropertySetter(readScale),\n});\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction iconStyleParser(node, objectStack) {\n    // FIXME refreshMode\n    // FIXME refreshInterval\n    // FIXME viewRefreshTime\n    // FIXME viewBoundScale\n    // FIXME viewFormat\n    // FIXME httpQuery\n    var object = pushParseAndPop({}, ICON_STYLE_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var styleObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var IconObject = 'Icon' in object ? object['Icon'] : {};\n    var drawIcon = !('Icon' in object) || Object.keys(IconObject).length > 0;\n    var src;\n    var href = /** @type {string|undefined} */ (IconObject['href']);\n    if (href) {\n        src = href;\n    }\n    else if (drawIcon) {\n        src = DEFAULT_IMAGE_STYLE_SRC;\n    }\n    var anchor, anchorXUnits, anchorYUnits;\n    var anchorOrigin = IconOrigin.BOTTOM_LEFT;\n    var hotSpot = /** @type {Vec2|undefined} */ (object['hotSpot']);\n    if (hotSpot) {\n        anchor = [hotSpot.x, hotSpot.y];\n        anchorXUnits = hotSpot.xunits;\n        anchorYUnits = hotSpot.yunits;\n        anchorOrigin = hotSpot.origin;\n    }\n    else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n        // Google hotspots from https://kml4earth.appspot.com/icons.html#notes\n        if (/pushpin/.test(src)) {\n            anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\n            anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n            anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n        }\n        else if (/arrow-reverse/.test(src)) {\n            anchor = [54, 42];\n            anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n            anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n        }\n        else if (/paddle/.test(src)) {\n            anchor = [32, 1];\n            anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n            anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n        }\n    }\n    var offset;\n    var x = /** @type {number|undefined} */ (IconObject['x']);\n    var y = /** @type {number|undefined} */ (IconObject['y']);\n    if (x !== undefined && y !== undefined) {\n        offset = [x, y];\n    }\n    var size;\n    var w = /** @type {number|undefined} */ (IconObject['w']);\n    var h = /** @type {number|undefined} */ (IconObject['h']);\n    if (w !== undefined && h !== undefined) {\n        size = [w, h];\n    }\n    var rotation;\n    var heading = /** @type {number} */ (object['heading']);\n    if (heading !== undefined) {\n        rotation = toRadians(heading);\n    }\n    var scale = /** @type {number|undefined} */ (object['scale']);\n    var color = /** @type {Array<number>|undefined} */ (object['color']);\n    if (drawIcon) {\n        if (src == DEFAULT_IMAGE_STYLE_SRC) {\n            size = DEFAULT_IMAGE_STYLE_SIZE;\n        }\n        var imageStyle_1 = new Icon({\n            anchor: anchor,\n            anchorOrigin: anchorOrigin,\n            anchorXUnits: anchorXUnits,\n            anchorYUnits: anchorYUnits,\n            crossOrigin: this.crossOrigin_,\n            offset: offset,\n            offsetOrigin: IconOrigin.BOTTOM_LEFT,\n            rotation: rotation,\n            scale: scale,\n            size: size,\n            src: this.iconUrlFunction_(src),\n            color: color,\n        });\n        var imageScale_1 = imageStyle_1.getScaleArray()[0];\n        var imageSize = imageStyle_1.getSize();\n        if (imageSize === null) {\n            var imageState = imageStyle_1.getImageState();\n            if (imageState === ImageState.IDLE || imageState === ImageState.LOADING) {\n                var listener_1 = function () {\n                    var imageState = imageStyle_1.getImageState();\n                    if (!(imageState === ImageState.IDLE ||\n                        imageState === ImageState.LOADING)) {\n                        var imageSize_1 = imageStyle_1.getSize();\n                        if (imageSize_1 && imageSize_1.length == 2) {\n                            var resizeScale = scaleForSize(imageSize_1);\n                            imageStyle_1.setScale(imageScale_1 * resizeScale);\n                        }\n                        imageStyle_1.unlistenImageChange(listener_1);\n                    }\n                };\n                imageStyle_1.listenImageChange(listener_1);\n                if (imageState === ImageState.IDLE) {\n                    imageStyle_1.load();\n                }\n            }\n        }\n        else if (imageSize.length == 2) {\n            var resizeScale = scaleForSize(imageSize);\n            imageStyle_1.setScale(imageScale_1 * resizeScale);\n        }\n        styleObject['imageStyle'] = imageStyle_1;\n    }\n    else {\n        // handle the case when we explicitly want to draw no icon.\n        styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar LABEL_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'scale': makeObjectPropertySetter(readScale),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction labelStyleParser(node, objectStack) {\n    // FIXME colorMode\n    var object = pushParseAndPop({}, LABEL_STYLE_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var styleObject = objectStack[objectStack.length - 1];\n    var textStyle = new Text({\n        fill: new Fill({\n            color: \n            /** @type {import(\"../color.js\").Color} */\n            ('color' in object ? object['color'] : DEFAULT_COLOR),\n        }),\n        scale: /** @type {number|undefined} */ (object['scale']),\n    });\n    styleObject['textStyle'] = textStyle;\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar LINE_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'width': makeObjectPropertySetter(readDecimal),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lineStyleParser(node, objectStack) {\n    // FIXME colorMode\n    // FIXME gx:outerColor\n    // FIXME gx:outerWidth\n    // FIXME gx:physicalWidth\n    // FIXME gx:labelVisibility\n    var object = pushParseAndPop({}, LINE_STYLE_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var styleObject = objectStack[objectStack.length - 1];\n    var strokeStyle = new Stroke({\n        color: \n        /** @type {import(\"../color.js\").Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR),\n        width: /** @type {number} */ ('width' in object ? object['width'] : 1),\n    });\n    styleObject['strokeStyle'] = strokeStyle;\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar POLY_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'fill': makeObjectPropertySetter(readBoolean),\n    'outline': makeObjectPropertySetter(readBoolean),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction polyStyleParser(node, objectStack) {\n    // FIXME colorMode\n    var object = pushParseAndPop({}, POLY_STYLE_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var styleObject = objectStack[objectStack.length - 1];\n    var fillStyle = new Fill({\n        color: \n        /** @type {import(\"../color.js\").Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR),\n    });\n    styleObject['fillStyle'] = fillStyle;\n    var fill = /** @type {boolean|undefined} */ (object['fill']);\n    if (fill !== undefined) {\n        styleObject['fill'] = fill;\n    }\n    var outline = /** @type {boolean|undefined} */ (object['outline']);\n    if (outline !== undefined) {\n        styleObject['outline'] = outline;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar FLAT_LINEAR_RING_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'coordinates': makeReplacer(readFlatCoordinates),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} LinearRing flat coordinates.\n */\nfunction readFlatLinearRing(node, objectStack) {\n    return pushParseAndPop(null, FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction gxCoordParser(node, objectStack) {\n    var gxTrackObject = \n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n    var coordinates = gxTrackObject.coordinates;\n    var s = getAllTextContent(node, false);\n    var re = /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n    var m = re.exec(s);\n    if (m) {\n        var x = parseFloat(m[1]);\n        var y = parseFloat(m[2]);\n        var z = parseFloat(m[3]);\n        coordinates.push([x, y, z]);\n    }\n    else {\n        coordinates.push([]);\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(GX_NAMESPACE_URIS, {\n    'Track': makeArrayPusher(readGxTrack),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {MultiLineString|undefined} MultiLineString.\n */\nfunction readGxMultiTrack(node, objectStack) {\n    var lineStrings = pushParseAndPop([], GX_MULTITRACK_GEOMETRY_PARSERS, node, objectStack);\n    if (!lineStrings) {\n        return undefined;\n    }\n    return new MultiLineString(lineStrings);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar GX_TRACK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'when': whenParser,\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n    'coord': gxCoordParser,\n}));\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readGxTrack(node, objectStack) {\n    var gxTrackObject = pushParseAndPop(\n    /** @type {GxTrackObject} */ ({\n        coordinates: [],\n        whens: [],\n    }), GX_TRACK_PARSERS, node, objectStack);\n    if (!gxTrackObject) {\n        return undefined;\n    }\n    var flatCoordinates = [];\n    var coordinates = gxTrackObject.coordinates;\n    var whens = gxTrackObject.whens;\n    for (var i = 0, ii = Math.min(coordinates.length, whens.length); i < ii; ++i) {\n        if (coordinates[i].length == 3) {\n            flatCoordinates.push(coordinates[i][0], coordinates[i][1], coordinates[i][2], whens[i]);\n        }\n    }\n    return new LineString(flatCoordinates, GeometryLayout.XYZM);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar ICON_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'href': makeObjectPropertySetter(readURI),\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeObjectPropertySetter(readDecimal),\n    'y': makeObjectPropertySetter(readDecimal),\n    'w': makeObjectPropertySetter(readDecimal),\n    'h': makeObjectPropertySetter(readDecimal),\n}));\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */\nfunction readIcon(node, objectStack) {\n    var iconObject = pushParseAndPop({}, ICON_PARSERS, node, objectStack);\n    if (iconObject) {\n        return iconObject;\n    }\n    else {\n        return null;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'coordinates': makeReplacer(readFlatCoordinates),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} Flat coordinates.\n */\nfunction readFlatCoordinatesFromNode(node, objectStack) {\n    return pushParseAndPop(null, GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'extrude': makeObjectPropertySetter(readBoolean),\n    'tessellate': makeObjectPropertySetter(readBoolean),\n    'altitudeMode': makeObjectPropertySetter(readString),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readLineString(node, objectStack) {\n    var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n    var flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n        var lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n        lineString.setProperties(properties, true);\n        return lineString;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readLinearRing(node, objectStack) {\n    var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n    var flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n        var polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, [\n            flatCoordinates.length,\n        ]);\n        polygon.setProperties(properties, true);\n        return polygon;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar MULTI_GEOMETRY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'LineString': makeArrayPusher(readLineString),\n    'LinearRing': makeArrayPusher(readLinearRing),\n    'MultiGeometry': makeArrayPusher(readMultiGeometry),\n    'Point': makeArrayPusher(readPoint),\n    'Polygon': makeArrayPusher(readPolygon),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readMultiGeometry(node, objectStack) {\n    var geometries = pushParseAndPop([], MULTI_GEOMETRY_PARSERS, node, objectStack);\n    if (!geometries) {\n        return null;\n    }\n    if (geometries.length === 0) {\n        return new GeometryCollection(geometries);\n    }\n    var multiGeometry;\n    var homogeneous = true;\n    var type = geometries[0].getType();\n    var geometry;\n    for (var i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        if (geometry.getType() != type) {\n            homogeneous = false;\n            break;\n        }\n    }\n    if (homogeneous) {\n        var layout = void 0;\n        var flatCoordinates = void 0;\n        if (type == 'Point') {\n            var point = geometries[0];\n            layout = point.getLayout();\n            flatCoordinates = point.getFlatCoordinates();\n            for (var i = 1, ii = geometries.length; i < ii; ++i) {\n                geometry = geometries[i];\n                extend(flatCoordinates, geometry.getFlatCoordinates());\n            }\n            multiGeometry = new MultiPoint(flatCoordinates, layout);\n            setCommonGeometryProperties(multiGeometry, geometries);\n        }\n        else if (type == 'LineString') {\n            multiGeometry = new MultiLineString(geometries);\n            setCommonGeometryProperties(multiGeometry, geometries);\n        }\n        else if (type == 'Polygon') {\n            multiGeometry = new MultiPolygon(geometries);\n            setCommonGeometryProperties(multiGeometry, geometries);\n        }\n        else if (type == 'GeometryCollection') {\n            multiGeometry = new GeometryCollection(geometries);\n        }\n        else {\n            assert(false, 37); // Unknown geometry type found\n        }\n    }\n    else {\n        multiGeometry = new GeometryCollection(geometries);\n    }\n    return /** @type {import(\"../geom/Geometry.js\").default} */ (multiGeometry);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Point|undefined} Point.\n */\nfunction readPoint(node, objectStack) {\n    var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n    var flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n        var point = new Point(flatCoordinates, GeometryLayout.XYZ);\n        point.setProperties(properties, true);\n        return point;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'innerBoundaryIs': innerBoundaryIsParser,\n    'outerBoundaryIs': outerBoundaryIsParser,\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readPolygon(node, objectStack) {\n    var properties = pushParseAndPop(\n    /** @type {Object<string,*>} */ ({}), EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n    var flatLinearRings = pushParseAndPop([null], FLAT_LINEAR_RINGS_PARSERS, node, objectStack);\n    if (flatLinearRings && flatLinearRings[0]) {\n        var flatCoordinates = flatLinearRings[0];\n        var ends = [flatCoordinates.length];\n        for (var i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n            extend(flatCoordinates, flatLinearRings[i]);\n            ends.push(flatCoordinates.length);\n        }\n        var polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n        polygon.setProperties(properties, true);\n        return polygon;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'IconStyle': iconStyleParser,\n    'LabelStyle': labelStyleParser,\n    'LineStyle': lineStyleParser,\n    'PolyStyle': polyStyleParser,\n});\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>} Style.\n */\nfunction readStyle(node, objectStack) {\n    var styleObject = pushParseAndPop({}, STYLE_PARSERS, node, objectStack, this);\n    if (!styleObject) {\n        return null;\n    }\n    var fillStyle = \n    /** @type {Fill} */\n    ('fillStyle' in styleObject ? styleObject['fillStyle'] : DEFAULT_FILL_STYLE);\n    var fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n    if (fill !== undefined && !fill) {\n        fillStyle = null;\n    }\n    var imageStyle;\n    if ('imageStyle' in styleObject) {\n        if (styleObject['imageStyle'] != DEFAULT_NO_IMAGE_STYLE) {\n            imageStyle = styleObject['imageStyle'];\n        }\n    }\n    else {\n        imageStyle = DEFAULT_IMAGE_STYLE;\n    }\n    var textStyle = \n    /** @type {Text} */\n    ('textStyle' in styleObject ? styleObject['textStyle'] : DEFAULT_TEXT_STYLE);\n    var strokeStyle = \n    /** @type {Stroke} */\n    ('strokeStyle' in styleObject\n        ? styleObject['strokeStyle']\n        : DEFAULT_STROKE_STYLE);\n    var outline = /** @type {boolean|undefined} */ (styleObject['outline']);\n    if (outline !== undefined && !outline) {\n        // if the polystyle specifies no outline two styles are needed,\n        // one for non-polygon geometries where linestrings require a stroke\n        // and one for polygons where there should be no stroke\n        return [\n            new Style({\n                geometry: function (feature) {\n                    var geometry = feature.getGeometry();\n                    var type = geometry.getType();\n                    if (type === 'GeometryCollection') {\n                        var collection = \n                        /** @type {import(\"../geom/GeometryCollection\").default} */ (geometry);\n                        return new GeometryCollection(collection\n                            .getGeometriesArrayRecursive()\n                            .filter(function (geometry) {\n                            var type = geometry.getType();\n                            return type !== 'Polygon' && type !== 'MultiPolygon';\n                        }));\n                    }\n                    else if (type !== 'Polygon' && type !== 'MultiPolygon') {\n                        return geometry;\n                    }\n                },\n                fill: fillStyle,\n                image: imageStyle,\n                stroke: strokeStyle,\n                text: textStyle,\n                zIndex: undefined, // FIXME\n            }),\n            new Style({\n                geometry: function (feature) {\n                    var geometry = feature.getGeometry();\n                    var type = geometry.getType();\n                    if (type === 'GeometryCollection') {\n                        var collection = \n                        /** @type {import(\"../geom/GeometryCollection\").default} */ (geometry);\n                        return new GeometryCollection(collection\n                            .getGeometriesArrayRecursive()\n                            .filter(function (geometry) {\n                            var type = geometry.getType();\n                            return type === 'Polygon' || type === 'MultiPolygon';\n                        }));\n                    }\n                    else if (type === 'Polygon' || type === 'MultiPolygon') {\n                        return geometry;\n                    }\n                },\n                fill: fillStyle,\n                stroke: null,\n                zIndex: undefined, // FIXME\n            }),\n        ];\n    }\n    return [\n        new Style({\n            fill: fillStyle,\n            image: imageStyle,\n            stroke: strokeStyle,\n            text: textStyle,\n            zIndex: undefined, // FIXME\n        }),\n    ];\n}\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {MultiPoint|MultiLineString|MultiPolygon} multiGeometry A multi-geometry.\n * @param {Array<import(\"../geom/Geometry.js\").default>} geometries List of geometries.\n */\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\n    var ii = geometries.length;\n    var extrudes = new Array(geometries.length);\n    var tessellates = new Array(geometries.length);\n    var altitudeModes = new Array(geometries.length);\n    var hasExtrude, hasTessellate, hasAltitudeMode;\n    hasExtrude = false;\n    hasTessellate = false;\n    hasAltitudeMode = false;\n    for (var i = 0; i < ii; ++i) {\n        var geometry = geometries[i];\n        extrudes[i] = geometry.get('extrude');\n        tessellates[i] = geometry.get('tessellate');\n        altitudeModes[i] = geometry.get('altitudeMode');\n        hasExtrude = hasExtrude || extrudes[i] !== undefined;\n        hasTessellate = hasTessellate || tessellates[i] !== undefined;\n        hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n    }\n    if (hasExtrude) {\n        multiGeometry.set('extrude', extrudes);\n    }\n    if (hasTessellate) {\n        multiGeometry.set('tessellate', tessellates);\n    }\n    if (hasAltitudeMode) {\n        multiGeometry.set('altitudeMode', altitudeModes);\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'displayName': makeObjectPropertySetter(readString),\n    'value': makeObjectPropertySetter(readString),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction dataParser(node, objectStack) {\n    var name = node.getAttribute('name');\n    parseNode(DATA_PARSERS, node, objectStack);\n    var featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    if (name && featureObject.displayName) {\n        featureObject[name] = {\n            value: featureObject.value,\n            displayName: featureObject.displayName,\n            toString: function () {\n                return featureObject.value;\n            },\n        };\n    }\n    else if (name !== null) {\n        featureObject[name] = featureObject.value;\n    }\n    else if (featureObject.displayName !== null) {\n        featureObject[featureObject.displayName] = featureObject.value;\n    }\n    delete featureObject['value'];\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar EXTENDED_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Data': dataParser,\n    'SchemaData': schemaDataParser,\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction extendedDataParser(node, objectStack) {\n    parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction regionParser(node, objectStack) {\n    parseNode(REGION_PARSERS, node, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar PAIR_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Style': makeObjectPropertySetter(readStyle),\n    'key': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readStyleURL),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction pairDataParser(node, objectStack) {\n    var pairObject = pushParseAndPop({}, PAIR_PARSERS, node, objectStack, this);\n    if (!pairObject) {\n        return;\n    }\n    var key = /** @type {string|undefined} */ (pairObject['key']);\n    if (key && key == 'normal') {\n        var styleUrl = /** @type {string|undefined} */ (pairObject['styleUrl']);\n        if (styleUrl) {\n            objectStack[objectStack.length - 1] = styleUrl;\n        }\n        var style = /** @type {Style} */ (pairObject['Style']);\n        if (style) {\n            objectStack[objectStack.length - 1] = style;\n        }\n    }\n}\n/**\n * @this {KML}\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction placemarkStyleMapParser(node, objectStack) {\n    var styleMapValue = readStyleMapValue.call(this, node, objectStack);\n    if (!styleMapValue) {\n        return;\n    }\n    var placemarkObject = objectStack[objectStack.length - 1];\n    if (Array.isArray(styleMapValue)) {\n        placemarkObject['Style'] = styleMapValue;\n    }\n    else if (typeof styleMapValue === 'string') {\n        placemarkObject['styleUrl'] = styleMapValue;\n    }\n    else {\n        assert(false, 38); // `styleMapValue` has an unknown type\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar SCHEMA_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'SimpleData': simpleDataParser,\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction schemaDataParser(node, objectStack) {\n    parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction simpleDataParser(node, objectStack) {\n    var name = node.getAttribute('name');\n    if (name !== null) {\n        var data = readString(node);\n        var featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n        featureObject[name] = data;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar LAT_LON_ALT_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'altitudeMode': makeObjectPropertySetter(readString),\n    'minAltitude': makeObjectPropertySetter(readDecimal),\n    'maxAltitude': makeObjectPropertySetter(readDecimal),\n    'north': makeObjectPropertySetter(readDecimal),\n    'south': makeObjectPropertySetter(readDecimal),\n    'east': makeObjectPropertySetter(readDecimal),\n    'west': makeObjectPropertySetter(readDecimal),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction latLonAltBoxParser(node, objectStack) {\n    var object = pushParseAndPop({}, LAT_LON_ALT_BOX_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var regionObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var extent = [\n        parseFloat(object['west']),\n        parseFloat(object['south']),\n        parseFloat(object['east']),\n        parseFloat(object['north']),\n    ];\n    regionObject['extent'] = extent;\n    regionObject['altitudeMode'] = object['altitudeMode'];\n    regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n    regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar LOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'minLodPixels': makeObjectPropertySetter(readDecimal),\n    'maxLodPixels': makeObjectPropertySetter(readDecimal),\n    'minFadeExtent': makeObjectPropertySetter(readDecimal),\n    'maxFadeExtent': makeObjectPropertySetter(readDecimal),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lodParser(node, objectStack) {\n    var object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n    lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n    lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n    lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar INNER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    // KML spec only allows one LinearRing  per innerBoundaryIs, but Google Earth\n    // allows multiple, so we parse multiple here too.\n    'LinearRing': makeArrayPusher(readFlatLinearRing),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction innerBoundaryIsParser(node, objectStack) {\n    var innerBoundaryFlatLinearRings = pushParseAndPop(\n    /** @type {Array<Array<number>>} */ ([]), INNER_BOUNDARY_IS_PARSERS, node, objectStack);\n    if (innerBoundaryFlatLinearRings.length > 0) {\n        var flatLinearRings = \n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n        flatLinearRings.push.apply(flatLinearRings, innerBoundaryFlatLinearRings);\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nvar OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'LinearRing': makeReplacer(readFlatLinearRing),\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction outerBoundaryIsParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    var flatLinearRing = pushParseAndPop(undefined, OUTER_BOUNDARY_IS_PARSERS, node, objectStack);\n    if (flatLinearRing) {\n        var flatLinearRings = \n        /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n        flatLinearRings[0] = flatLinearRing;\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction linkParser(node, objectStack) {\n    parseNode(LINK_PARSERS, node, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction whenParser(node, objectStack) {\n    var gxTrackObject = \n    /** @type {GxTrackObject} */\n    (objectStack[objectStack.length - 1]);\n    var whens = gxTrackObject.whens;\n    var s = getAllTextContent(node, false);\n    var when = Date.parse(s);\n    whens.push(isNaN(when) ? 0 : when);\n}\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {import(\"../color.js\").Color|string} color Color.\n */\nfunction writeColorTextNode(node, color) {\n    var rgba = asArray(color);\n    var opacity = rgba.length == 4 ? rgba[3] : 1;\n    /** @type {Array<string|number>} */\n    var abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n    for (var i = 0; i < 4; ++i) {\n        var hex = Math.floor(/** @type {number} */ (abgr[i])).toString(16);\n        abgr[i] = hex.length == 1 ? '0' + hex : hex;\n    }\n    writeStringTextNode(node, abgr.join(''));\n}\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array<number>} coordinates Coordinates.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var layout = context['layout'];\n    var stride = context['stride'];\n    var dimension;\n    if (layout == GeometryLayout.XY || layout == GeometryLayout.XYM) {\n        dimension = 2;\n    }\n    else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYZM) {\n        dimension = 3;\n    }\n    else {\n        assert(false, 34); // Invalid geometry layout\n    }\n    var ii = coordinates.length;\n    var text = '';\n    if (ii > 0) {\n        text += coordinates[0];\n        for (var d = 1; d < dimension; ++d) {\n            text += ',' + coordinates[d];\n        }\n        for (var i = stride; i < ii; i += stride) {\n            text += ' ' + coordinates[i];\n            for (var d = 1; d < dimension; ++d) {\n                text += ',' + coordinates[i + d];\n            }\n        }\n    }\n    writeStringTextNode(node, text);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'Data': makeChildAppender(writeDataNode),\n    'value': makeChildAppender(writeDataNodeValue),\n    'displayName': makeChildAppender(writeDataNodeName),\n});\n/**\n * @param {Element} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeDataNode(node, pair, objectStack) {\n    node.setAttribute('name', pair.name);\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var value = pair.value;\n    if (typeof value == 'object') {\n        if (value !== null && value.displayName) {\n            pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\n        }\n        if (value !== null && value.value) {\n            pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\n        }\n    }\n    else {\n        pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\n    }\n}\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */\nfunction writeDataNodeName(node, name) {\n    writeCDATASection(node, name);\n}\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */\nfunction writeDataNodeValue(node, value) {\n    writeStringTextNode(node, value);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar DOCUMENT_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'Placemark': makeChildAppender(writePlacemark),\n});\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [opt_nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nvar DOCUMENT_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n    var parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n/**\n * @param {Element} node Node.\n * @param {Array<Feature>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writeDocument(node, features, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    pushSerializeAndPop(context, DOCUMENT_SERIALIZERS, DOCUMENT_NODE_FACTORY, features, objectStack, undefined, this);\n}\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nvar DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\n/**\n * @param {Element} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeExtendedData(node, namesAndValues, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var names = namesAndValues.names;\n    var values = namesAndValues.values;\n    var length = names.length;\n    for (var i = 0; i < length; i++) {\n        pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, DATA_NODE_FACTORY, [{ name: names[i], value: values[i] }], objectStack);\n    }\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar ICON_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['href'], makeStructureNS(GX_NAMESPACE_URIS, ['x', 'y', 'w', 'h']));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar ICON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'href': makeChildAppender(writeStringTextNode),\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeChildAppender(writeDecimalTextNode),\n    'y': makeChildAppender(writeDecimalTextNode),\n    'w': makeChildAppender(writeDecimalTextNode),\n    'h': makeChildAppender(writeDecimalTextNode),\n}));\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [opt_nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nvar GX_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n    return createElementNS(GX_NAMESPACE_URIS[0], 'gx:' + opt_nodeName);\n};\n/**\n * @param {Element} node Node.\n * @param {Object} icon Icon object.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIcon(node, icon, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(icon, orderedKeys);\n    pushSerializeAndPop(context, ICON_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n    orderedKeys = ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\n    values = makeSequence(icon, orderedKeys);\n    pushSerializeAndPop(context, ICON_SERIALIZERS, GX_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar ICON_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'scale',\n    'heading',\n    'Icon',\n    'color',\n    'hotSpot',\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar ICON_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'Icon': makeChildAppender(writeIcon),\n    'color': makeChildAppender(writeColorTextNode),\n    'heading': makeChildAppender(writeDecimalTextNode),\n    'hotSpot': makeChildAppender(writeVec2),\n    'scale': makeChildAppender(writeScaleTextNode),\n});\n/**\n * @param {Element} node Node.\n * @param {import(\"../style/Icon.js\").default} style Icon style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIconStyle(node, style, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var /** @type {Object<string, any>} */ properties = {};\n    var src = style.getSrc();\n    var size = style.getSize();\n    var iconImageSize = style.getImageSize();\n    var iconProperties = {\n        'href': src,\n    };\n    if (size) {\n        iconProperties['w'] = size[0];\n        iconProperties['h'] = size[1];\n        var anchor = style.getAnchor(); // top-left\n        var origin_1 = style.getOrigin(); // top-left\n        if (origin_1 && iconImageSize && origin_1[0] !== 0 && origin_1[1] !== size[1]) {\n            iconProperties['x'] = origin_1[0];\n            iconProperties['y'] = iconImageSize[1] - (origin_1[1] + size[1]);\n        }\n        if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n            var /** @type {Vec2} */ hotSpot = {\n                x: anchor[0],\n                xunits: IconAnchorUnits.PIXELS,\n                y: size[1] - anchor[1],\n                yunits: IconAnchorUnits.PIXELS,\n            };\n            properties['hotSpot'] = hotSpot;\n        }\n    }\n    properties['Icon'] = iconProperties;\n    var scale = style.getScaleArray()[0];\n    var imageSize = size;\n    if (imageSize === null) {\n        imageSize = DEFAULT_IMAGE_STYLE_SIZE;\n    }\n    if (imageSize.length == 2) {\n        var resizeScale = scaleForSize(imageSize);\n        scale = scale / resizeScale;\n    }\n    if (scale !== 1) {\n        properties['scale'] = scale;\n    }\n    var rotation = style.getRotation();\n    if (rotation !== 0) {\n        properties['heading'] = rotation; // 0-360\n    }\n    var color = style.getColor();\n    if (color) {\n        properties['color'] = color;\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, ICON_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar LABEL_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'color',\n    'scale',\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar LABEL_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode),\n    'scale': makeChildAppender(writeScaleTextNode),\n});\n/**\n * @param {Element} node Node.\n * @param {Text} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLabelStyle(node, style, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var properties = {};\n    var fill = style.getFill();\n    if (fill) {\n        properties['color'] = fill.getColor();\n    }\n    var scale = style.getScale();\n    if (scale && scale !== 1) {\n        properties['scale'] = scale;\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, LABEL_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar LINE_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, ['color', 'width']);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar LINE_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode),\n    'width': makeChildAppender(writeDecimalTextNode),\n});\n/**\n * @param {Element} node Node.\n * @param {Stroke} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLineStyle(node, style, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var properties = {\n        'color': style.getColor(),\n        'width': Number(style.getWidth()) || 1,\n    };\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, LINE_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar GEOMETRY_TYPE_TO_NODENAME = {\n    'Point': 'Point',\n    'LineString': 'LineString',\n    'LinearRing': 'LinearRing',\n    'Polygon': 'Polygon',\n    'MultiPoint': 'MultiGeometry',\n    'MultiLineString': 'MultiGeometry',\n    'MultiPolygon': 'MultiGeometry',\n    'GeometryCollection': 'MultiGeometry',\n};\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string} [opt_nodeName] Node name.\n * @return {Node|undefined} Node.\n */\nvar GEOMETRY_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n    if (value) {\n        var parentNode = objectStack[objectStack.length - 1].node;\n        return createElementNS(parentNode.namespaceURI, GEOMETRY_TYPE_TO_NODENAME[\n        /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType()]);\n    }\n};\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'LineString': makeChildAppender(writePrimitiveGeometry),\n    'Point': makeChildAppender(writePrimitiveGeometry),\n    'Polygon': makeChildAppender(writePolygon),\n    'GeometryCollection': makeChildAppender(writeMultiGeometry),\n});\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeMultiGeometry(node, geometry, objectStack) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var context = { node: node };\n    var type = geometry.getType();\n    /** @type {Array<import(\"../geom/Geometry.js\").default>} */\n    var geometries = [];\n    /** @type {function(*, Array<*>, string=): (Node|undefined)} */\n    var factory;\n    if (type === 'GeometryCollection') {\n        /** @type {GeometryCollection} */ (geometry)\n            .getGeometriesArrayRecursive()\n            .forEach(function (geometry) {\n            var type = geometry.getType();\n            if (type === 'MultiPoint') {\n                geometries = geometries.concat(\n                /** @type {MultiPoint} */ (geometry).getPoints());\n            }\n            else if (type === 'MultiLineString') {\n                geometries = geometries.concat(\n                /** @type {MultiLineString} */ (geometry).getLineStrings());\n            }\n            else if (type === 'MultiPolygon') {\n                geometries = geometries.concat(\n                /** @type {MultiPolygon} */ (geometry).getPolygons());\n            }\n            else if (type === 'Point' ||\n                type === 'LineString' ||\n                type === 'Polygon') {\n                geometries.push(geometry);\n            }\n            else {\n                assert(false, 39); // Unknown geometry type\n            }\n        });\n        factory = GEOMETRY_NODE_FACTORY;\n    }\n    else if (type === 'MultiPoint') {\n        geometries = /** @type {MultiPoint} */ (geometry).getPoints();\n        factory = POINT_NODE_FACTORY;\n    }\n    else if (type === 'MultiLineString') {\n        geometries = /** @type {MultiLineString} */ (geometry).getLineStrings();\n        factory = LINE_STRING_NODE_FACTORY;\n    }\n    else if (type === 'MultiPolygon') {\n        geometries = /** @type {MultiPolygon} */ (geometry).getPolygons();\n        factory = POLYGON_NODE_FACTORY;\n    }\n    else {\n        assert(false, 39); // Unknown geometry type\n    }\n    pushSerializeAndPop(context, MULTI_GEOMETRY_SERIALIZERS, factory, geometries, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar BOUNDARY_IS_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'LinearRing': makeChildAppender(writePrimitiveGeometry),\n});\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/LinearRing.js\").default} linearRing Linear ring.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeBoundaryIs(node, linearRing, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    pushSerializeAndPop(context, BOUNDARY_IS_SERIALIZERS, LINEAR_RING_NODE_FACTORY, [linearRing], objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar PLACEMARK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'ExtendedData': makeChildAppender(writeExtendedData),\n    'MultiGeometry': makeChildAppender(writeMultiGeometry),\n    'LineString': makeChildAppender(writePrimitiveGeometry),\n    'LinearRing': makeChildAppender(writePrimitiveGeometry),\n    'Point': makeChildAppender(writePrimitiveGeometry),\n    'Polygon': makeChildAppender(writePolygon),\n    'Style': makeChildAppender(writeStyle),\n    'address': makeChildAppender(writeStringTextNode),\n    'description': makeChildAppender(writeStringTextNode),\n    'name': makeChildAppender(writeStringTextNode),\n    'open': makeChildAppender(writeBooleanTextNode),\n    'phoneNumber': makeChildAppender(writeStringTextNode),\n    'styleUrl': makeChildAppender(writeStringTextNode),\n    'visibility': makeChildAppender(writeBooleanTextNode),\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar PLACEMARK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'name',\n    'open',\n    'visibility',\n    'address',\n    'phoneNumber',\n    'description',\n    'styleUrl',\n    'Style',\n]);\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nvar EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writePlacemark(node, feature, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    // set id\n    if (feature.getId()) {\n        node.setAttribute('id', /** @type {string} */ (feature.getId()));\n    }\n    // serialize properties (properties unknown to KML are not serialized)\n    var properties = feature.getProperties();\n    // don't export these to ExtendedData\n    var filter = {\n        'address': 1,\n        'description': 1,\n        'name': 1,\n        'open': 1,\n        'phoneNumber': 1,\n        'styleUrl': 1,\n        'visibility': 1,\n    };\n    filter[feature.getGeometryName()] = 1;\n    var keys = Object.keys(properties || {})\n        .sort()\n        .filter(function (v) {\n        return !filter[v];\n    });\n    var styleFunction = feature.getStyleFunction();\n    if (styleFunction) {\n        // FIXME the styles returned by the style function are supposed to be\n        // resolution-independent here\n        var styles = styleFunction(feature, 0);\n        if (styles) {\n            var styleArray = Array.isArray(styles) ? styles : [styles];\n            var pointStyles = styleArray;\n            if (feature.getGeometry()) {\n                pointStyles = styleArray.filter(function (style) {\n                    var geometry = style.getGeometryFunction()(feature);\n                    if (geometry) {\n                        var type = geometry.getType();\n                        if (type === 'GeometryCollection') {\n                            return /** @type {GeometryCollection} */ (geometry)\n                                .getGeometriesArrayRecursive()\n                                .filter(function (geometry) {\n                                var type = geometry.getType();\n                                return type === 'Point' || type === 'MultiPoint';\n                            }).length;\n                        }\n                        return type === 'Point' || type === 'MultiPoint';\n                    }\n                });\n                ('Point');\n            }\n            if (this.writeStyles_) {\n                var lineStyles = styleArray;\n                var polyStyles = styleArray;\n                if (feature.getGeometry()) {\n                    lineStyles = styleArray.filter(function (style) {\n                        var geometry = style.getGeometryFunction()(feature);\n                        if (geometry) {\n                            var type = geometry.getType();\n                            if (type === 'GeometryCollection') {\n                                return /** @type {GeometryCollection} */ (geometry)\n                                    .getGeometriesArrayRecursive()\n                                    .filter(function (geometry) {\n                                    var type = geometry.getType();\n                                    return type === 'LineString' || type === 'MultiLineString';\n                                }).length;\n                            }\n                            return type === 'LineString' || type === 'MultiLineString';\n                        }\n                    });\n                    polyStyles = styleArray.filter(function (style) {\n                        var geometry = style.getGeometryFunction()(feature);\n                        if (geometry) {\n                            var type = geometry.getType();\n                            if (type === 'GeometryCollection') {\n                                return /** @type {GeometryCollection} */ (geometry)\n                                    .getGeometriesArrayRecursive()\n                                    .filter(function (geometry) {\n                                    var type = geometry.getType();\n                                    return type === 'Polygon' || type === 'MultiPolygon';\n                                }).length;\n                            }\n                            return type === 'Polygon' || type === 'MultiPolygon';\n                        }\n                    });\n                }\n                properties['Style'] = {\n                    pointStyles: pointStyles,\n                    lineStyles: lineStyles,\n                    polyStyles: polyStyles,\n                };\n            }\n            if (pointStyles.length && properties['name'] === undefined) {\n                var textStyle = pointStyles[0].getText();\n                if (textStyle) {\n                    properties['name'] = textStyle.getText();\n                }\n            }\n        }\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, PLACEMARK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n    if (keys.length > 0) {\n        var sequence = makeSequence(properties, keys);\n        var namesAndValues = { names: keys, values: sequence };\n        pushSerializeAndPop(context, PLACEMARK_SERIALIZERS, EXTENDEDDATA_NODE_FACTORY, [namesAndValues], objectStack);\n    }\n    // serialize geometry\n    var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n    var geometry = feature.getGeometry();\n    if (geometry) {\n        geometry = transformGeometryWithOptions(geometry, true, options);\n    }\n    pushSerializeAndPop(context, PLACEMARK_SERIALIZERS, GEOMETRY_NODE_FACTORY, [geometry], objectStack);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'extrude',\n    'tessellate',\n    'altitudeMode',\n    'coordinates',\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'extrude': makeChildAppender(writeBooleanTextNode),\n    'tessellate': makeChildAppender(writeBooleanTextNode),\n    'altitudeMode': makeChildAppender(writeStringTextNode),\n    'coordinates': makeChildAppender(writeCoordinatesTextNode),\n});\n/**\n * @param {Element} node Node.\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    context['layout'] = geometry.getLayout();\n    context['stride'] = geometry.getStride();\n    // serialize properties (properties unknown to KML are not serialized)\n    var properties = geometry.getProperties();\n    properties.coordinates = flatCoordinates;\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, PRIMITIVE_GEOMETRY_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar POLY_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'color',\n    'fill',\n    'outline',\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar POLYGON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'outerBoundaryIs': makeChildAppender(writeBoundaryIs),\n    'innerBoundaryIs': makeChildAppender(writeBoundaryIs),\n});\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\n/**\n * @param {Element} node Node.\n * @param {Polygon} polygon Polygon.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolygon(node, polygon, objectStack) {\n    var linearRings = polygon.getLinearRings();\n    var outerRing = linearRings.shift();\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    // inner rings\n    pushSerializeAndPop(context, POLYGON_SERIALIZERS, INNER_BOUNDARY_NODE_FACTORY, linearRings, objectStack);\n    // outer ring\n    pushSerializeAndPop(context, POLYGON_SERIALIZERS, OUTER_BOUNDARY_NODE_FACTORY, [outerRing], objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar POLY_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode),\n    'fill': makeChildAppender(writeBooleanTextNode),\n    'outline': makeChildAppender(writeBooleanTextNode),\n});\n/**\n * @param {Element} node Node.\n * @param {Style} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolyStyle(node, style, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var fill = style.getFill();\n    var stroke = style.getStroke();\n    var properties = {\n        'color': fill ? fill.getColor() : undefined,\n        'fill': fill ? undefined : false,\n        'outline': stroke ? undefined : false,\n    };\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = POLY_STYLE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, POLY_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */\nfunction writeScaleTextNode(node, scale) {\n    // the Math is to remove any excess decimals created by float arithmetic\n    writeDecimalTextNode(node, Math.round(scale * 1e6) / 1e6);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\n// @ts-ignore\nvar STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'IconStyle',\n    'LabelStyle',\n    'LineStyle',\n    'PolyStyle',\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\n// @ts-ignore\nvar STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'IconStyle': makeChildAppender(writeIconStyle),\n    'LabelStyle': makeChildAppender(writeLabelStyle),\n    'LineStyle': makeChildAppender(writeLineStyle),\n    'PolyStyle': makeChildAppender(writePolyStyle),\n});\n/**\n * @param {Element} node Node.\n * @param {Object<string, Array<Style>>} styles Styles.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeStyle(node, styles, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var properties = {};\n    if (styles.pointStyles.length) {\n        var textStyle = styles.pointStyles[0].getText();\n        if (textStyle) {\n            properties['LabelStyle'] = textStyle;\n        }\n        var imageStyle = styles.pointStyles[0].getImage();\n        if (imageStyle &&\n            typeof ( /** @type {?} */(imageStyle).getSrc) === 'function') {\n            properties['IconStyle'] = imageStyle;\n        }\n    }\n    if (styles.lineStyles.length) {\n        var strokeStyle = styles.lineStyles[0].getStroke();\n        if (strokeStyle) {\n            properties['LineStyle'] = strokeStyle;\n        }\n    }\n    if (styles.polyStyles.length) {\n        var strokeStyle = styles.polyStyles[0].getStroke();\n        if (strokeStyle && !properties['LineStyle']) {\n            properties['LineStyle'] = strokeStyle;\n        }\n        properties['PolyStyle'] = styles.polyStyles[0];\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @param {Element} node Node to append a TextNode with the Vec2 to.\n * @param {Vec2} vec2 Vec2.\n */\nfunction writeVec2(node, vec2) {\n    node.setAttribute('x', String(vec2.x));\n    node.setAttribute('y', String(vec2.y));\n    node.setAttribute('xunits', vec2.xunits);\n    node.setAttribute('yunits', vec2.yunits);\n}\nexport default KML;\n//# sourceMappingURL=KML.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { closestSquaredDistanceXY, containsXY } from '../extent.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { extend } from '../array.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nvar MultiPoint = /** @class */ (function (_super) {\n    __extends(MultiPoint, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     */\n    function MultiPoint(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        if (opt_layout && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed point to this multipoint.\n     * @param {Point} point Point.\n     * @api\n     */\n    MultiPoint.prototype.appendPoint = function (point) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = point.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, point.getFlatCoordinates());\n        }\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiPoint} Clone.\n     * @api\n     */\n    MultiPoint.prototype.clone = function () {\n        var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n        multiPoint.applyProperties(this);\n        return multiPoint;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    MultiPoint.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        var flatCoordinates = this.flatCoordinates;\n        var stride = this.stride;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var squaredDistance = squaredDx(x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n            if (squaredDistance < minSquaredDistance) {\n                minSquaredDistance = squaredDistance;\n                for (var j = 0; j < stride; ++j) {\n                    closestPoint[j] = flatCoordinates[i + j];\n                }\n                closestPoint.length = stride;\n            }\n        }\n        return minSquaredDistance;\n    };\n    /**\n     * Return the coordinates of the multipoint.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @api\n     */\n    MultiPoint.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the point at the specified index.\n     * @param {number} index Index.\n     * @return {Point} Point.\n     * @api\n     */\n    MultiPoint.prototype.getPoint = function (index) {\n        var n = !this.flatCoordinates\n            ? 0\n            : this.flatCoordinates.length / this.stride;\n        if (index < 0 || n <= index) {\n            return null;\n        }\n        return new Point(this.flatCoordinates.slice(index * this.stride, (index + 1) * this.stride), this.layout);\n    };\n    /**\n     * Return the points of this multipoint.\n     * @return {Array<Point>} Points.\n     * @api\n     */\n    MultiPoint.prototype.getPoints = function () {\n        var flatCoordinates = this.flatCoordinates;\n        var layout = this.layout;\n        var stride = this.stride;\n        /** @type {Array<Point>} */\n        var points = [];\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var point = new Point(flatCoordinates.slice(i, i + stride), layout);\n            points.push(point);\n        }\n        return points;\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./Geometry.js\").Type} Geometry type.\n     * @api\n     */\n    MultiPoint.prototype.getType = function () {\n        return 'MultiPoint';\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    MultiPoint.prototype.intersectsExtent = function (extent) {\n        var flatCoordinates = this.flatCoordinates;\n        var stride = this.stride;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            if (containsXY(extent, x, y)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Set the coordinates of the multipoint.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     * @api\n     */\n    MultiPoint.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return MultiPoint;\n}(SimpleGeometry));\nexport default MultiPoint;\n//# sourceMappingURL=MultiPoint.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/XMLFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport { abstract } from '../util.js';\nimport { extend } from '../array.js';\nimport { getXMLSerializer, isDocument, parse } from '../xml.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @abstract\n */\nvar XMLFeature = /** @class */ (function (_super) {\n    __extends(XMLFeature, _super);\n    function XMLFeature() {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {XMLSerializer}\n         * @private\n         */\n        _this.xmlSerializer_ = getXMLSerializer();\n        return _this;\n    }\n    /**\n     * @return {import(\"./Feature.js\").Type} Format.\n     */\n    XMLFeature.prototype.getType = function () {\n        return 'xml';\n    };\n    /**\n     * Read a single feature.\n     *\n     * @param {Document|Element|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     * @api\n     */\n    XMLFeature.prototype.readFeature = function (source, opt_options) {\n        if (!source) {\n            return null;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readFeatureFromDocument(doc, opt_options);\n        }\n        else if (isDocument(source)) {\n            return this.readFeatureFromDocument(\n            /** @type {Document} */ (source), opt_options);\n        }\n        else {\n            return this.readFeatureFromNode(\n            /** @type {Element} */ (source), opt_options);\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    XMLFeature.prototype.readFeatureFromDocument = function (doc, opt_options) {\n        var features = this.readFeaturesFromDocument(doc, opt_options);\n        if (features.length > 0) {\n            return features[0];\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    XMLFeature.prototype.readFeatureFromNode = function (node, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * Read all features from a feature collection.\n     *\n     * @param {Document|Element|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    XMLFeature.prototype.readFeatures = function (source, opt_options) {\n        if (!source) {\n            return [];\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readFeaturesFromDocument(doc, opt_options);\n        }\n        else if (isDocument(source)) {\n            return this.readFeaturesFromDocument(\n            /** @type {Document} */ (source), opt_options);\n        }\n        else {\n            return this.readFeaturesFromNode(\n            /** @type {Element} */ (source), opt_options);\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n     * @protected\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    XMLFeature.prototype.readFeaturesFromDocument = function (doc, opt_options) {\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        var features = [];\n        for (var n = doc.firstChild; n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                extend(features, this.readFeaturesFromNode(/** @type {Element} */ (n), opt_options));\n            }\n        }\n        return features;\n    };\n    /**\n     * @abstract\n     * @param {Element} node Node.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n     * @protected\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    XMLFeature.prototype.readFeaturesFromNode = function (node, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read a single geometry from a source.\n     *\n     * @param {Document|Element|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    XMLFeature.prototype.readGeometry = function (source, opt_options) {\n        if (!source) {\n            return null;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readGeometryFromDocument(doc, opt_options);\n        }\n        else if (isDocument(source)) {\n            return this.readGeometryFromDocument(\n            /** @type {Document} */ (source), opt_options);\n        }\n        else {\n            return this.readGeometryFromNode(\n            /** @type {Element} */ (source), opt_options);\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    XMLFeature.prototype.readGeometryFromDocument = function (doc, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    XMLFeature.prototype.readGeometryFromNode = function (node, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * Read the projection from the source.\n     *\n     * @param {Document|Element|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    XMLFeature.prototype.readProjection = function (source) {\n        if (!source) {\n            return null;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readProjectionFromDocument(doc);\n        }\n        else if (isDocument(source)) {\n            return this.readProjectionFromDocument(/** @type {Document} */ (source));\n        }\n        else {\n            return this.readProjectionFromNode(/** @type {Element} */ (source));\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    XMLFeature.prototype.readProjectionFromDocument = function (doc) {\n        return this.dataProjection;\n    };\n    /**\n     * @param {Element} node Node.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    XMLFeature.prototype.readProjectionFromNode = function (node) {\n        return this.dataProjection;\n    };\n    /**\n     * Encode a feature as string.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n     * @return {string} Encoded feature.\n     */\n    XMLFeature.prototype.writeFeature = function (feature, opt_options) {\n        var node = this.writeFeatureNode(feature, opt_options);\n        return this.xmlSerializer_.serializeToString(node);\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Options.\n     * @protected\n     * @return {Node} Node.\n     */\n    XMLFeature.prototype.writeFeatureNode = function (feature, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * Encode an array of features as string.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n     * @return {string} Result.\n     * @api\n     */\n    XMLFeature.prototype.writeFeatures = function (features, opt_options) {\n        var node = this.writeFeaturesNode(features, opt_options);\n        return this.xmlSerializer_.serializeToString(node);\n    };\n    /**\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Options.\n     * @return {Node} Node.\n     */\n    XMLFeature.prototype.writeFeaturesNode = function (features, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * Encode a geometry as string.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n     * @return {string} Encoded geometry.\n     */\n    XMLFeature.prototype.writeGeometry = function (geometry, opt_options) {\n        var node = this.writeGeometryNode(geometry, opt_options);\n        return this.xmlSerializer_.serializeToString(node);\n    };\n    /**\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Options.\n     * @return {Node} Node.\n     */\n    XMLFeature.prototype.writeGeometryNode = function (geometry, opt_options) {\n        return null; // not implemented\n    };\n    return XMLFeature;\n}(FeatureFormat));\nexport default XMLFeature;\n//# sourceMappingURL=XMLFeature.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport { closestSquaredDistanceXY, createOrUpdateEmpty, extend, getCenter, } from '../extent.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nvar GeometryCollection = /** @class */ (function (_super) {\n    __extends(GeometryCollection, _super);\n    /**\n     * @param {Array<Geometry>} [opt_geometries] Geometries.\n     */\n    function GeometryCollection(opt_geometries) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {Array<Geometry>}\n         */\n        _this.geometries_ = opt_geometries ? opt_geometries : null;\n        /**\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.changeEventsKeys_ = [];\n        _this.listenGeometriesChange_();\n        return _this;\n    }\n    /**\n     * @private\n     */\n    GeometryCollection.prototype.unlistenGeometriesChange_ = function () {\n        this.changeEventsKeys_.forEach(unlistenByKey);\n        this.changeEventsKeys_.length = 0;\n    };\n    /**\n     * @private\n     */\n    GeometryCollection.prototype.listenGeometriesChange_ = function () {\n        if (!this.geometries_) {\n            return;\n        }\n        for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n            this.changeEventsKeys_.push(listen(this.geometries_[i], EventType.CHANGE, this.changed, this));\n        }\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!GeometryCollection} Clone.\n     * @api\n     */\n    GeometryCollection.prototype.clone = function () {\n        var geometryCollection = new GeometryCollection(null);\n        geometryCollection.setGeometries(this.geometries_);\n        geometryCollection.applyProperties(this);\n        return geometryCollection;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    GeometryCollection.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            minSquaredDistance = geometries[i].closestPointXY(x, y, closestPoint, minSquaredDistance);\n        }\n        return minSquaredDistance;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    GeometryCollection.prototype.containsXY = function (x, y) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].containsXY(x, y)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    GeometryCollection.prototype.computeExtent = function (extent) {\n        createOrUpdateEmpty(extent);\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            extend(extent, geometries[i].getExtent());\n        }\n        return extent;\n    };\n    /**\n     * Return the geometries that make up this geometry collection.\n     * @return {Array<Geometry>} Geometries.\n     * @api\n     */\n    GeometryCollection.prototype.getGeometries = function () {\n        return cloneGeometries(this.geometries_);\n    };\n    /**\n     * @return {Array<Geometry>} Geometries.\n     */\n    GeometryCollection.prototype.getGeometriesArray = function () {\n        return this.geometries_;\n    };\n    /**\n     * @return {Array<Geometry>} Geometries.\n     */\n    GeometryCollection.prototype.getGeometriesArrayRecursive = function () {\n        /** @type {Array<Geometry>} */\n        var geometriesArray = [];\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].getType() === this.getType()) {\n                geometriesArray = geometriesArray.concat(\n                /** @type {GeometryCollection} */ (geometries[i]).getGeometriesArrayRecursive());\n            }\n            else {\n                geometriesArray.push(geometries[i]);\n            }\n        }\n        return geometriesArray;\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {GeometryCollection} Simplified GeometryCollection.\n     */\n    GeometryCollection.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision !== this.getRevision()) {\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var simplifiedGeometries = [];\n        var geometries = this.geometries_;\n        var simplified = false;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            var geometry = geometries[i];\n            var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n            simplifiedGeometries.push(simplifiedGeometry);\n            if (simplifiedGeometry !== geometry) {\n                simplified = true;\n            }\n        }\n        if (simplified) {\n            var simplifiedGeometryCollection = new GeometryCollection(null);\n            simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n            return simplifiedGeometryCollection;\n        }\n        else {\n            this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n            return this;\n        }\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./Geometry.js\").Type} Geometry type.\n     * @api\n     */\n    GeometryCollection.prototype.getType = function () {\n        return 'GeometryCollection';\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    GeometryCollection.prototype.intersectsExtent = function (extent) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].intersectsExtent(extent)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    GeometryCollection.prototype.isEmpty = function () {\n        return this.geometries_.length === 0;\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    GeometryCollection.prototype.rotate = function (angle, anchor) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].rotate(angle, anchor);\n        }\n        this.changed();\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n     * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    GeometryCollection.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].scale(sx, opt_sy, anchor);\n        }\n        this.changed();\n    };\n    /**\n     * Set the geometries that make up this geometry collection.\n     * @param {Array<Geometry>} geometries Geometries.\n     * @api\n     */\n    GeometryCollection.prototype.setGeometries = function (geometries) {\n        this.setGeometriesArray(cloneGeometries(geometries));\n    };\n    /**\n     * @param {Array<Geometry>} geometries Geometries.\n     */\n    GeometryCollection.prototype.setGeometriesArray = function (geometries) {\n        this.unlistenGeometriesChange_();\n        this.geometries_ = geometries;\n        this.listenGeometriesChange_();\n        this.changed();\n    };\n    /**\n     * Apply a transform function to the coordinates of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n     * Called with a flat array of geometry coordinates.\n     * @api\n     */\n    GeometryCollection.prototype.applyTransform = function (transformFn) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].applyTransform(transformFn);\n        }\n        this.changed();\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    GeometryCollection.prototype.translate = function (deltaX, deltaY) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].translate(deltaX, deltaY);\n        }\n        this.changed();\n    };\n    /**\n     * Clean up.\n     */\n    GeometryCollection.prototype.disposeInternal = function () {\n        this.unlistenGeometriesChange_();\n        _super.prototype.disposeInternal.call(this);\n    };\n    return GeometryCollection;\n}(Geometry));\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n    var clonedGeometries = [];\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n        clonedGeometries.push(geometries[i].clone());\n    }\n    return clonedGeometries;\n}\nexport default GeometryCollection;\n//# sourceMappingURL=GeometryCollection.js.map","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar isArray = require('../internals/is-array');\n\nvar $TypeError = TypeError;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Safari < 13 does not throw an error in this case\nvar SILENT_ON_NON_WRITABLE_LENGTH_SET = DESCRIPTORS && !function () {\n  // makes no sense without proper strict mode support\n  if (this !== undefined) return true;\n  try {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty([], 'length', { writable: false }).length = 1;\n  } catch (error) {\n    return error instanceof TypeError;\n  }\n}();\n\nmodule.exports = SILENT_ON_NON_WRITABLE_LENGTH_SET ? function (O, length) {\n  if (isArray(O) && !getOwnPropertyDescriptor(O, 'length').writable) {\n    throw new $TypeError('Cannot set read only .length');\n  } return O.length = length;\n} : function (O, length) {\n  return O.length = length;\n};\n","export * from \"-!../../../../node_modules/.pnpm/mini-css-extract-plugin@0.9.0_webpack@4.47.0/node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../../node_modules/.pnpm/css-loader@3.6.0_webpack@4.47.0/node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/.pnpm/vue-loader@16.8.3_@vue+compiler-sfc@3.4.6_vue@3.4.6_webpack@4.47.0/node_modules/vue-loader/dist/stylePostLoader.js!../../../../node_modules/.pnpm/postcss-loader@3.0.0/node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/.pnpm/cache-loader@4.1.0_webpack@4.47.0/node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/.pnpm/vue-loader@16.8.3_@vue+compiler-sfc@3.4.6_vue@3.4.6_webpack@4.47.0/node_modules/vue-loader/dist/index.js??ref--1-1!./index.vue?vue&type=style&index=0&id=830405d8&scoped=true&lang=css\"","/**\n * @module ol/format/xsd\n */\nimport { getAllTextContent, getDocument } from '../xml.js';\nimport { padNumber } from '../string.js';\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n    var s = getAllTextContent(node, false);\n    return readBooleanString(s);\n}\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n    var m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n    if (m) {\n        return m[1] !== undefined || false;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n    var s = getAllTextContent(node, false);\n    var dateTime = Date.parse(s);\n    return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n    var s = getAllTextContent(node, false);\n    return readDecimalString(s);\n}\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n    // FIXME check spec\n    var m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n    if (m) {\n        return parseFloat(m[1]);\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readPositiveInteger(node) {\n    var s = getAllTextContent(node, false);\n    return readNonNegativeIntegerString(s);\n}\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n    var m = /^\\s*(\\d+)\\s*$/.exec(string);\n    if (m) {\n        return parseInt(m[1], 10);\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n    return getAllTextContent(node, false).trim();\n}\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n    writeStringTextNode(node, bool ? '1' : '0');\n}\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n    node.appendChild(getDocument().createCDATASection(string));\n}\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n    var date = new Date(dateTime * 1000);\n    var string = date.getUTCFullYear() +\n        '-' +\n        padNumber(date.getUTCMonth() + 1, 2) +\n        '-' +\n        padNumber(date.getUTCDate(), 2) +\n        'T' +\n        padNumber(date.getUTCHours(), 2) +\n        ':' +\n        padNumber(date.getUTCMinutes(), 2) +\n        ':' +\n        padNumber(date.getUTCSeconds(), 2) +\n        'Z';\n    node.appendChild(getDocument().createTextNode(string));\n}\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n    var string = decimal.toPrecision();\n    node.appendChild(getDocument().createTextNode(string));\n}\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n    var string = nonNegativeInteger.toString();\n    node.appendChild(getDocument().createTextNode(string));\n}\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n    node.appendChild(getDocument().createTextNode(string));\n}\n//# sourceMappingURL=xsd.js.map","/**\n * @module ol/geom/flat/interpolate\n */\nimport { binarySearch } from '../../array.js';\nimport { lerp } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [opt_dest] Destination.\n * @param {number} [opt_dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest, opt_dimension) {\n    var o, t;\n    var n = (end - offset) / stride;\n    if (n === 1) {\n        o = offset;\n    }\n    else if (n === 2) {\n        o = offset;\n        t = fraction;\n    }\n    else if (n !== 0) {\n        var x1 = flatCoordinates[offset];\n        var y1 = flatCoordinates[offset + 1];\n        var length_1 = 0;\n        var cumulativeLengths = [0];\n        for (var i = offset + stride; i < end; i += stride) {\n            var x2 = flatCoordinates[i];\n            var y2 = flatCoordinates[i + 1];\n            length_1 += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n            cumulativeLengths.push(length_1);\n            x1 = x2;\n            y1 = y2;\n        }\n        var target = fraction * length_1;\n        var index = binarySearch(cumulativeLengths, target);\n        if (index < 0) {\n            t =\n                (target - cumulativeLengths[-index - 2]) /\n                    (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n            o = offset + (-index - 2) * stride;\n        }\n        else {\n            o = offset + index * stride;\n        }\n    }\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var dest = opt_dest ? opt_dest : new Array(dimension);\n    for (var i = 0; i < dimension; ++i) {\n        dest[i] =\n            o === undefined\n                ? NaN\n                : t === undefined\n                    ? flatCoordinates[o + i]\n                    : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n    if (end == offset) {\n        return null;\n    }\n    var coordinate;\n    if (m < flatCoordinates[offset + stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(offset, offset + stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    else if (flatCoordinates[end - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(end - stride, end);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    // FIXME use O(1) search\n    if (m == flatCoordinates[offset + stride - 1]) {\n        return flatCoordinates.slice(offset, offset + stride);\n    }\n    var lo = offset / stride;\n    var hi = end / stride;\n    while (lo < hi) {\n        var mid = (lo + hi) >> 1;\n        if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n            hi = mid;\n        }\n        else {\n            lo = mid + 1;\n        }\n    }\n    var m0 = flatCoordinates[lo * stride - 1];\n    if (m == m0) {\n        return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n    }\n    var m1 = flatCoordinates[(lo + 1) * stride - 1];\n    var t = (m - m0) / (m1 - m0);\n    coordinate = [];\n    for (var i = 0; i < stride - 1; ++i) {\n        coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i], flatCoordinates[lo * stride + i], t));\n    }\n    coordinate.push(m);\n    return coordinate;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n    if (interpolate) {\n        return lineStringCoordinateAtM(flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n    }\n    var coordinate;\n    if (m < flatCoordinates[stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(0, stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    if (flatCoordinates[flatCoordinates.length - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        if (offset == end) {\n            continue;\n        }\n        if (m < flatCoordinates[offset + stride - 1]) {\n            return null;\n        }\n        else if (m <= flatCoordinates[end - 1]) {\n            return lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, false);\n        }\n        offset = end;\n    }\n    return null;\n}\n//# sourceMappingURL=interpolate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiPolygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta, } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateMultiCoordinatesArray } from './flat/deflate.js';\nimport { extend } from '../array.js';\nimport { getInteriorPointsOfMultiArray } from './flat/interiorpoint.js';\nimport { inflateMultiCoordinatesArray } from './flat/inflate.js';\nimport { intersectsLinearRingMultiArray } from './flat/intersectsextent.js';\nimport { linearRingssAreOriented, orientLinearRingsArray, } from './flat/orient.js';\nimport { linearRingss as linearRingssArea } from './flat/area.js';\nimport { linearRingss as linearRingssCenter } from './flat/center.js';\nimport { linearRingssContainsXY } from './flat/contains.js';\nimport { quantizeMultiArray } from './flat/simplify.js';\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nvar MultiPolygon = /** @class */ (function (_super) {\n    __extends(MultiPolygon, _super);\n    /**\n     * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     * @param {Array<Array<number>>} [opt_endss] Array of ends for internal use with flat coordinates.\n     */\n    function MultiPolygon(coordinates, opt_layout, opt_endss) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<Array<number>>}\n         * @private\n         */\n        _this.endss_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointsRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.flatInteriorPoints_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (!opt_endss && !Array.isArray(coordinates[0])) {\n            var layout = _this.getLayout();\n            var polygons = /** @type {Array<Polygon>} */ (coordinates);\n            var flatCoordinates = [];\n            var endss = [];\n            for (var i = 0, ii = polygons.length; i < ii; ++i) {\n                var polygon = polygons[i];\n                if (i === 0) {\n                    layout = polygon.getLayout();\n                }\n                var offset = flatCoordinates.length;\n                var ends = polygon.getEnds();\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\n                    ends[j] += offset;\n                }\n                extend(flatCoordinates, polygon.getFlatCoordinates());\n                endss.push(ends);\n            }\n            opt_layout = layout;\n            coordinates = flatCoordinates;\n            opt_endss = endss;\n        }\n        if (opt_layout !== undefined && opt_endss) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n            _this.endss_ = opt_endss;\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed polygon to this multipolygon.\n     * @param {Polygon} polygon Polygon.\n     * @api\n     */\n    MultiPolygon.prototype.appendPolygon = function (polygon) {\n        /** @type {Array<number>} */\n        var ends;\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = polygon.getFlatCoordinates().slice();\n            ends = polygon.getEnds().slice();\n            this.endss_.push();\n        }\n        else {\n            var offset = this.flatCoordinates.length;\n            extend(this.flatCoordinates, polygon.getFlatCoordinates());\n            ends = polygon.getEnds().slice();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                ends[i] += offset;\n            }\n        }\n        this.endss_.push(ends);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiPolygon} Clone.\n     * @api\n     */\n    MultiPolygon.prototype.clone = function () {\n        var len = this.endss_.length;\n        var newEndss = new Array(len);\n        for (var i = 0; i < len; ++i) {\n            newEndss[i] = this.endss_[i].slice();\n        }\n        var multiPolygon = new MultiPolygon(this.flatCoordinates.slice(), this.layout, newEndss);\n        multiPolygon.applyProperties(this);\n        return multiPolygon;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    MultiPolygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(this.flatCoordinates, 0, this.endss_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestMultiArrayPoint(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    MultiPolygon.prototype.containsXY = function (x, y) {\n        return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the multipolygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    MultiPolygon.prototype.getArea = function () {\n        return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for multi-polygons.\n     *\n     * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n     * @api\n     */\n    MultiPolygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRingsArray(flatCoordinates, 0, this.endss_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateMultiCoordinatesArray(flatCoordinates, 0, this.endss_, this.stride);\n    };\n    /**\n     * @return {Array<Array<number>>} Endss.\n     */\n    MultiPolygon.prototype.getEndss = function () {\n        return this.endss_;\n    };\n    /**\n     * @return {Array<number>} Flat interior points.\n     */\n    MultiPolygon.prototype.getFlatInteriorPoints = function () {\n        if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n            var flatCenters = linearRingssCenter(this.flatCoordinates, 0, this.endss_, this.stride);\n            this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, flatCenters);\n            this.flatInteriorPointsRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoints_;\n    };\n    /**\n     * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n     * @return {MultiPoint} Interior points as XYM coordinates, where M is\n     * the length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    MultiPolygon.prototype.getInteriorPoints = function () {\n        return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    MultiPolygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length = orientLinearRingsArray(this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {MultiPolygon} Simplified MultiPolygon.\n     * @protected\n     */\n    MultiPolygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEndss = [];\n        simplifiedFlatCoordinates.length = quantizeMultiArray(this.flatCoordinates, 0, this.endss_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEndss);\n        return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\n    };\n    /**\n     * Return the polygon at the specified index.\n     * @param {number} index Index.\n     * @return {Polygon} Polygon.\n     * @api\n     */\n    MultiPolygon.prototype.getPolygon = function (index) {\n        if (index < 0 || this.endss_.length <= index) {\n            return null;\n        }\n        var offset;\n        if (index === 0) {\n            offset = 0;\n        }\n        else {\n            var prevEnds = this.endss_[index - 1];\n            offset = prevEnds[prevEnds.length - 1];\n        }\n        var ends = this.endss_[index].slice();\n        var end = ends[ends.length - 1];\n        if (offset !== 0) {\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                ends[i] -= offset;\n            }\n        }\n        return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\n    };\n    /**\n     * Return the polygons of this multipolygon.\n     * @return {Array<Polygon>} Polygons.\n     * @api\n     */\n    MultiPolygon.prototype.getPolygons = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var endss = this.endss_;\n        var polygons = [];\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            var ends = endss[i].slice();\n            var end = ends[ends.length - 1];\n            if (offset !== 0) {\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\n                    ends[j] -= offset;\n                }\n            }\n            var polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\n            polygons.push(polygon);\n            offset = end;\n        }\n        return polygons;\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./Geometry.js\").Type} Geometry type.\n     * @api\n     */\n    MultiPolygon.prototype.getType = function () {\n        return 'MultiPolygon';\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    MultiPolygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the multipolygon.\n     * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     * @api\n     */\n    MultiPolygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 3);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var endss = deflateMultiCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n        if (endss.length === 0) {\n            this.flatCoordinates.length = 0;\n        }\n        else {\n            var lastEnds = endss[endss.length - 1];\n            this.flatCoordinates.length =\n                lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n        }\n        this.changed();\n    };\n    return MultiPolygon;\n}(SimpleGeometry));\nexport default MultiPolygon;\n//# sourceMappingURL=MultiPolygon.js.map","/**\n * @module ol/geom/flat/center\n */\nimport { createEmpty, createOrUpdateFromFlatCoordinates } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var flatCenters = [];\n    var extent = createEmpty();\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n        flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n        offset = ends[ends.length - 1];\n    }\n    return flatCenters;\n}\n//# sourceMappingURL=center.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiLineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { arrayMaxSquaredDelta, assignClosestArrayPoint } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { douglasPeuckerArray } from './flat/simplify.js';\nimport { extend } from '../array.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { interpolatePoint, lineStringsCoordinateAtM, } from './flat/interpolate.js';\nimport { intersectsLineStringArray } from './flat/intersectsextent.js';\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nvar MultiLineString = /** @class */ (function (_super) {\n    __extends(MultiLineString, _super);\n    /**\n     * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n     *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n     *     combination with `opt_layout` and `opt_ends` are also accepted.)\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     * @param {Array<number>} [opt_ends] Flat coordinate ends for internal use.\n     */\n    function MultiLineString(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (Array.isArray(coordinates[0])) {\n            _this.setCoordinates(\n            /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        else if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            var layout = _this.getLayout();\n            var lineStrings = /** @type {Array<LineString>} */ (coordinates);\n            var flatCoordinates = [];\n            var ends = [];\n            for (var i = 0, ii = lineStrings.length; i < ii; ++i) {\n                var lineString = lineStrings[i];\n                if (i === 0) {\n                    layout = lineString.getLayout();\n                }\n                extend(flatCoordinates, lineString.getFlatCoordinates());\n                ends.push(flatCoordinates.length);\n            }\n            _this.setFlatCoordinates(layout, flatCoordinates);\n            _this.ends_ = ends;\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linestring to the multilinestring.\n     * @param {LineString} lineString LineString.\n     * @api\n     */\n    MultiLineString.prototype.appendLineString = function (lineString) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = lineString.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiLineString} Clone.\n     * @api\n     */\n    MultiLineString.prototype.clone = function () {\n        var multiLineString = new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n        multiLineString.applyProperties(this);\n        return multiLineString;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    MultiLineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\n     * such coordinate exists.\n     *\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n     * M will return the first coordinate and Ms greater than the last M will\n     * return the last coordinate.\n     *\n     * `opt_interpolate` controls interpolation between consecutive LineStrings\n     * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n     * will be linearly interpolated between the last coordinate of one LineString\n     * and the first coordinate of the next LineString.  If `opt_interpolate` is\n     * `false` then the function will return `null` for Ms falling between\n     * LineStrings.\n     *\n     * @param {number} m M.\n     * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n     * @param {boolean} [opt_interpolate] Interpolate. Default is `false`.\n     * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n     * @api\n     */\n    MultiLineString.prototype.getCoordinateAtM = function (m, opt_extrapolate, opt_interpolate) {\n        if ((this.layout != GeometryLayout.XYM &&\n            this.layout != GeometryLayout.XYZM) ||\n            this.flatCoordinates.length === 0) {\n            return null;\n        }\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n        var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n        return lineStringsCoordinateAtM(this.flatCoordinates, 0, this.ends_, this.stride, m, extrapolate, interpolate);\n    };\n    /**\n     * Return the coordinates of the multilinestring.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @api\n     */\n    MultiLineString.prototype.getCoordinates = function () {\n        return inflateCoordinatesArray(this.flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    MultiLineString.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * Return the linestring at the specified index.\n     * @param {number} index Index.\n     * @return {LineString} LineString.\n     * @api\n     */\n    MultiLineString.prototype.getLineString = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LineString(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linestrings of this multilinestring.\n     * @return {Array<LineString>} LineStrings.\n     * @api\n     */\n    MultiLineString.prototype.getLineStrings = function () {\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var layout = this.layout;\n        /** @type {Array<LineString>} */\n        var lineStrings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var lineString = new LineString(flatCoordinates.slice(offset, end), layout);\n            lineStrings.push(lineString);\n            offset = end;\n        }\n        return lineStrings;\n    };\n    /**\n     * @return {Array<number>} Flat midpoints.\n     */\n    MultiLineString.prototype.getFlatMidpoints = function () {\n        var midpoints = [];\n        var flatCoordinates = this.flatCoordinates;\n        var offset = 0;\n        var ends = this.ends_;\n        var stride = this.stride;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var midpoint = interpolatePoint(flatCoordinates, offset, end, stride, 0.5);\n            extend(midpoints, midpoint);\n            offset = end;\n        }\n        return midpoints;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {MultiLineString} Simplified MultiLineString.\n     * @protected\n     */\n    MultiLineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = douglasPeuckerArray(this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./Geometry.js\").Type} Geometry type.\n     * @api\n     */\n    MultiLineString.prototype.getType = function () {\n        return 'MultiLineString';\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    MultiLineString.prototype.intersectsExtent = function (extent) {\n        return intersectsLineStringArray(this.flatCoordinates, 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the multilinestring.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {GeometryLayout} [opt_layout] Layout.\n     * @api\n     */\n    MultiLineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return MultiLineString;\n}(SimpleGeometry));\nexport default MultiLineString;\n//# sourceMappingURL=MultiLineString.js.map","'use strict';\nvar $ = require('../internals/export');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar setArrayLength = require('../internals/array-set-length');\nvar doesNotExceedSafeInteger = require('../internals/does-not-exceed-safe-integer');\nvar fails = require('../internals/fails');\n\nvar INCORRECT_TO_LENGTH = fails(function () {\n  return [].push.call({ length: 0x100000000 }, 1) !== 4294967297;\n});\n\n// V8 <= 121 and Safari <= 15.4; FF < 23 throws InternalError\n// https://bugs.chromium.org/p/v8/issues/detail?id=12681\nvar properErrorOnNonWritableLength = function () {\n  try {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty([], 'length', { writable: false }).push();\n  } catch (error) {\n    return error instanceof TypeError;\n  }\n};\n\nvar FORCED = INCORRECT_TO_LENGTH || !properErrorOnNonWritableLength();\n\n// `Array.prototype.push` method\n// https://tc39.es/ecma262/#sec-array.prototype.push\n$({ target: 'Array', proto: true, arity: 1, forced: FORCED }, {\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  push: function push(item) {\n    var O = toObject(this);\n    var len = lengthOfArrayLike(O);\n    var argCount = arguments.length;\n    doesNotExceedSafeInteger(len + argCount);\n    for (var i = 0; i < argCount; i++) {\n      O[len] = arguments[i];\n      len++;\n    }\n    setArrayLength(O, len);\n    return len;\n  }\n});\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\nimport { toSize } from '../size.js';\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nvar DEFAULT_FILL_COLOR = '#333';\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nvar Text = /** @class */ (function () {\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function Text(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.font_ = options.font;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size|undefined}\n         */\n        this.scale_ = options.scale;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n        /**\n         * @private\n         * @type {string|Array<string>|undefined}\n         */\n        this.text_ = options.text;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textAlign_ = options.textAlign;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.justify_ = options.justify;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textBaseline_ = options.textBaseline;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ =\n            options.fill !== undefined\n                ? options.fill\n                : new Fill({ color: DEFAULT_FILL_COLOR });\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxAngle_ =\n            options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n        /**\n         * @private\n         * @type {import(\"./TextPlacement.js\").default|string}\n         */\n        this.placement_ =\n            options.placement !== undefined ? options.placement : TextPlacement.POINT;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.overflow_ = !!options.overflow;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.backgroundFill_ = options.backgroundFill\n            ? options.backgroundFill\n            : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.backgroundStroke_ = options.backgroundStroke\n            ? options.backgroundStroke\n            : null;\n        /**\n         * @private\n         * @type {Array<number>|null}\n         */\n        this.padding_ = options.padding === undefined ? null : options.padding;\n    }\n    /**\n     * Clones the style.\n     * @return {Text} The cloned style.\n     * @api\n     */\n    Text.prototype.clone = function () {\n        var scale = this.getScale();\n        return new Text({\n            font: this.getFont(),\n            placement: this.getPlacement(),\n            maxAngle: this.getMaxAngle(),\n            overflow: this.getOverflow(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            text: this.getText(),\n            textAlign: this.getTextAlign(),\n            justify: this.getJustify(),\n            textBaseline: this.getTextBaseline(),\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            offsetX: this.getOffsetX(),\n            offsetY: this.getOffsetY(),\n            backgroundFill: this.getBackgroundFill()\n                ? this.getBackgroundFill().clone()\n                : undefined,\n            backgroundStroke: this.getBackgroundStroke()\n                ? this.getBackgroundStroke().clone()\n                : undefined,\n            padding: this.getPadding() || undefined,\n        });\n    };\n    /**\n     * Get the `overflow` configuration.\n     * @return {boolean} Let text overflow the length of the path they follow.\n     * @api\n     */\n    Text.prototype.getOverflow = function () {\n        return this.overflow_;\n    };\n    /**\n     * Get the font name.\n     * @return {string|undefined} Font.\n     * @api\n     */\n    Text.prototype.getFont = function () {\n        return this.font_;\n    };\n    /**\n     * Get the maximum angle between adjacent characters.\n     * @return {number} Angle in radians.\n     * @api\n     */\n    Text.prototype.getMaxAngle = function () {\n        return this.maxAngle_;\n    };\n    /**\n     * Get the label placement.\n     * @return {import(\"./TextPlacement.js\").default|string} Text placement.\n     * @api\n     */\n    Text.prototype.getPlacement = function () {\n        return this.placement_;\n    };\n    /**\n     * Get the x-offset for the text.\n     * @return {number} Horizontal text offset.\n     * @api\n     */\n    Text.prototype.getOffsetX = function () {\n        return this.offsetX_;\n    };\n    /**\n     * Get the y-offset for the text.\n     * @return {number} Vertical text offset.\n     * @api\n     */\n    Text.prototype.getOffsetY = function () {\n        return this.offsetY_;\n    };\n    /**\n     * Get the fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Determine whether the text rotates with the map.\n     * @return {boolean|undefined} Rotate with map.\n     * @api\n     */\n    Text.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the text rotation.\n     * @return {number|undefined} Rotation.\n     * @api\n     */\n    Text.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the text scale.\n     * @return {number|import(\"../size.js\").Size|undefined} Scale.\n     * @api\n     */\n    Text.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the symbolizer scale array.\n     * @return {import(\"../size.js\").Size} Scale array.\n     */\n    Text.prototype.getScaleArray = function () {\n        return this.scaleArray_;\n    };\n    /**\n     * Get the stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Get the text to be rendered.\n     * @return {string|Array<string>|undefined} Text.\n     * @api\n     */\n    Text.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Get the text alignment.\n     * @return {string|undefined} Text align.\n     * @api\n     */\n    Text.prototype.getTextAlign = function () {\n        return this.textAlign_;\n    };\n    /**\n     * Get the justification.\n     * @return {string|undefined} Justification.\n     * @api\n     */\n    Text.prototype.getJustify = function () {\n        return this.justify_;\n    };\n    /**\n     * Get the text baseline.\n     * @return {string|undefined} Text baseline.\n     * @api\n     */\n    Text.prototype.getTextBaseline = function () {\n        return this.textBaseline_;\n    };\n    /**\n     * Get the background fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getBackgroundFill = function () {\n        return this.backgroundFill_;\n    };\n    /**\n     * Get the background stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getBackgroundStroke = function () {\n        return this.backgroundStroke_;\n    };\n    /**\n     * Get the padding for the text.\n     * @return {Array<number>|null} Padding.\n     * @api\n     */\n    Text.prototype.getPadding = function () {\n        return this.padding_;\n    };\n    /**\n     * Set the `overflow` property.\n     *\n     * @param {boolean} overflow Let text overflow the path that it follows.\n     * @api\n     */\n    Text.prototype.setOverflow = function (overflow) {\n        this.overflow_ = overflow;\n    };\n    /**\n     * Set the font.\n     *\n     * @param {string|undefined} font Font.\n     * @api\n     */\n    Text.prototype.setFont = function (font) {\n        this.font_ = font;\n    };\n    /**\n     * Set the maximum angle between adjacent characters.\n     *\n     * @param {number} maxAngle Angle in radians.\n     * @api\n     */\n    Text.prototype.setMaxAngle = function (maxAngle) {\n        this.maxAngle_ = maxAngle;\n    };\n    /**\n     * Set the x offset.\n     *\n     * @param {number} offsetX Horizontal text offset.\n     * @api\n     */\n    Text.prototype.setOffsetX = function (offsetX) {\n        this.offsetX_ = offsetX;\n    };\n    /**\n     * Set the y offset.\n     *\n     * @param {number} offsetY Vertical text offset.\n     * @api\n     */\n    Text.prototype.setOffsetY = function (offsetY) {\n        this.offsetY_ = offsetY;\n    };\n    /**\n     * Set the text placement.\n     *\n     * @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n     * @api\n     */\n    Text.prototype.setPlacement = function (placement) {\n        this.placement_ = placement;\n    };\n    /**\n     * Set whether to rotate the text with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    Text.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number|undefined} rotation Rotation.\n     * @api\n     */\n    Text.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n     * @api\n     */\n    Text.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n        this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n    };\n    /**\n     * Set the stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Set the text.\n     *\n     * @param {string|Array<string>|undefined} text Text.\n     * @api\n     */\n    Text.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Set the text alignment.\n     *\n     * @param {string|undefined} textAlign Text align.\n     * @api\n     */\n    Text.prototype.setTextAlign = function (textAlign) {\n        this.textAlign_ = textAlign;\n    };\n    /**\n     * Set the justification.\n     *\n     * @param {string|undefined} justify Justification.\n     * @api\n     */\n    Text.prototype.setJustify = function (justify) {\n        this.justify_ = justify;\n    };\n    /**\n     * Set the text baseline.\n     *\n     * @param {string|undefined} textBaseline Text baseline.\n     * @api\n     */\n    Text.prototype.setTextBaseline = function (textBaseline) {\n        this.textBaseline_ = textBaseline;\n    };\n    /**\n     * Set the background fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setBackgroundFill = function (fill) {\n        this.backgroundFill_ = fill;\n    };\n    /**\n     * Set the background stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setBackgroundStroke = function (stroke) {\n        this.backgroundStroke_ = stroke;\n    };\n    /**\n     * Set the padding (`[top, right, bottom, left]`).\n     *\n     * @param {Array<number>|null} padding Padding.\n     * @api\n     */\n    Text.prototype.setPadding = function (padding) {\n        this.padding_ = padding;\n    };\n    return Text;\n}());\nexport default Text;\n//# sourceMappingURL=Text.js.map","/**\n * @module ol/format/Feature\n */\nimport Units from '../proj/Units.js';\nimport { abstract } from '../util.js';\nimport { assign } from '../obj.js';\nimport { equivalent as equivalentProjection, get as getProjection, transformExtent, } from '../proj.js';\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nvar FeatureFormat = /** @class */ (function () {\n    function FeatureFormat() {\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default|undefined}\n         */\n        this.dataProjection = undefined;\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default|undefined}\n         */\n        this.defaultFeatureProjection = undefined;\n        /**\n         * A list media types supported by the format in descending order of preference.\n         * @type {Array<string>}\n         */\n        this.supportedMediaTypes = null;\n    }\n    /**\n     * Adds the data projection to the read options.\n     * @param {Document|Element|Object|string} source Source.\n     * @param {ReadOptions} [opt_options] Options.\n     * @return {ReadOptions|undefined} Options.\n     * @protected\n     */\n    FeatureFormat.prototype.getReadOptions = function (source, opt_options) {\n        var options;\n        if (opt_options) {\n            var dataProjection = opt_options.dataProjection\n                ? getProjection(opt_options.dataProjection)\n                : this.readProjection(source);\n            if (opt_options.extent &&\n                dataProjection &&\n                dataProjection.getUnits() === Units.TILE_PIXELS) {\n                dataProjection = getProjection(dataProjection);\n                dataProjection.setWorldExtent(opt_options.extent);\n            }\n            options = {\n                dataProjection: dataProjection,\n                featureProjection: opt_options.featureProjection,\n            };\n        }\n        return this.adaptOptions(options);\n    };\n    /**\n     * Sets the `dataProjection` on the options, if no `dataProjection`\n     * is set.\n     * @param {WriteOptions|ReadOptions|undefined} options\n     *     Options.\n     * @protected\n     * @return {WriteOptions|ReadOptions|undefined}\n     *     Updated options.\n     */\n    FeatureFormat.prototype.adaptOptions = function (options) {\n        return assign({\n            dataProjection: this.dataProjection,\n            featureProjection: this.defaultFeatureProjection,\n        }, options);\n    };\n    /**\n     * @abstract\n     * @return {Type} The format type.\n     */\n    FeatureFormat.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Read a single feature from a source.\n     *\n     * @abstract\n     * @param {Document|Element|Object|string} source Source.\n     * @param {ReadOptions} [opt_options] Read options.\n     * @return {import(\"../Feature.js\").FeatureLike} Feature.\n     */\n    FeatureFormat.prototype.readFeature = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read all features from a source.\n     *\n     * @abstract\n     * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n     * @param {ReadOptions} [opt_options] Read options.\n     * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n     */\n    FeatureFormat.prototype.readFeatures = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read a single geometry from a source.\n     *\n     * @abstract\n     * @param {Document|Element|Object|string} source Source.\n     * @param {ReadOptions} [opt_options] Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    FeatureFormat.prototype.readGeometry = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the projection from a source.\n     *\n     * @abstract\n     * @param {Document|Element|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n     */\n    FeatureFormat.prototype.readProjection = function (source) {\n        return abstract();\n    };\n    /**\n     * Encode a feature in this format.\n     *\n     * @abstract\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {WriteOptions} [opt_options] Write options.\n     * @return {string|ArrayBuffer} Result.\n     */\n    FeatureFormat.prototype.writeFeature = function (feature, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode an array of features in this format.\n     *\n     * @abstract\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {WriteOptions} [opt_options] Write options.\n     * @return {string|ArrayBuffer} Result.\n     */\n    FeatureFormat.prototype.writeFeatures = function (features, opt_options) {\n        return abstract();\n    };\n    /**\n     * Write a single geometry in this format.\n     *\n     * @abstract\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {WriteOptions} [opt_options] Write options.\n     * @return {string|ArrayBuffer} Result.\n     */\n    FeatureFormat.prototype.writeGeometry = function (geometry, opt_options) {\n        return abstract();\n    };\n    return FeatureFormat;\n}());\nexport default FeatureFormat;\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [opt_options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n    var featureProjection = opt_options\n        ? getProjection(opt_options.featureProjection)\n        : null;\n    var dataProjection = opt_options\n        ? getProjection(opt_options.dataProjection)\n        : null;\n    var transformed;\n    if (featureProjection &&\n        dataProjection &&\n        !equivalentProjection(featureProjection, dataProjection)) {\n        transformed = (write ? geometry.clone() : geometry).transform(write ? featureProjection : dataProjection, write ? dataProjection : featureProjection);\n    }\n    else {\n        transformed = geometry;\n    }\n    if (write &&\n        opt_options &&\n        /** @type {WriteOptions} */ (opt_options).decimals !== undefined) {\n        var power_1 = Math.pow(10, \n        /** @type {WriteOptions} */ (opt_options).decimals);\n        // if decimals option on write, round each coordinate appropriately\n        /**\n         * @param {Array<number>} coordinates Coordinates.\n         * @return {Array<number>} Transformed coordinates.\n         */\n        var transform = function (coordinates) {\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = Math.round(coordinates[i] * power_1) / power_1;\n            }\n            return coordinates;\n        };\n        if (transformed === geometry) {\n            transformed = geometry.clone();\n        }\n        transformed.applyTransform(transform);\n    }\n    return transformed;\n}\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [opt_options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n    var featureProjection = opt_options\n        ? getProjection(opt_options.featureProjection)\n        : null;\n    var dataProjection = opt_options\n        ? getProjection(opt_options.dataProjection)\n        : null;\n    if (featureProjection &&\n        dataProjection &&\n        !equivalentProjection(featureProjection, dataProjection)) {\n        return transformExtent(extent, dataProjection, featureProjection);\n    }\n    else {\n        return extent;\n    }\n}\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/xml\n */\nimport { extend } from './array.js';\n/**\n * When using {@link module:ol/xml.makeChildAppender} or\n * {@link module:ol/xml.makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Element} node Node.\n */\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n/**\n * @type {string}\n */\nexport var XML_SCHEMA_INSTANCE_URI = 'http://www.w3.org/2001/XMLSchema-instance';\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n    return getDocument().createElementNS(namespaceURI, qualifiedName);\n}\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n    return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n    if (node.nodeType == Node.CDATA_SECTION_NODE ||\n        node.nodeType == Node.TEXT_NODE) {\n        if (normalizeWhitespace) {\n            accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n        }\n        else {\n            accumulator.push(node.nodeValue);\n        }\n    }\n    else {\n        var n = void 0;\n        for (n = node.firstChild; n; n = n.nextSibling) {\n            getAllTextContent_(n, normalizeWhitespace, accumulator);\n        }\n    }\n    return accumulator;\n}\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n    return 'documentElement' in object;\n}\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n    return node.getAttributeNS(namespaceURI, name) || '';\n}\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n    return new DOMParser().parseFromString(xml, 'application/xml');\n}\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, opt_this) {\n    return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\n            extend(array, value);\n        }\n    });\n}\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, opt_this) {\n    return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\n            array.push(value);\n        }\n    });\n}\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, opt_this) {\n    return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            objectStack[objectStack.length - 1] = value;\n        }\n    });\n}\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [opt_property] Property.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, opt_property, opt_this) {\n    return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n            var property = opt_property !== undefined ? opt_property : node.localName;\n            var array = void 0;\n            if (property in object) {\n                array = object[property];\n            }\n            else {\n                array = [];\n                object[property] = array;\n            }\n            array.push(value);\n        }\n    });\n}\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [opt_property] Property.\n * @param {T} [opt_this] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, opt_property, opt_this) {\n    return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n            var property = opt_property !== undefined ? opt_property : node.localName;\n            object[property] = value;\n        }\n    });\n}\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [opt_this] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, opt_this) {\n    return function (node, value, objectStack) {\n        nodeWriter.call(opt_this !== undefined ? opt_this : this, node, value, objectStack);\n        var parent = /** @type {NodeStackItem} */ (objectStack[objectStack.length - 1]);\n        var parentNode = parent.node;\n        parentNode.appendChild(node);\n    };\n}\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml.serialize}. This can be used by the parent writer to have the\n * `nodeWriter` called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [opt_this] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, opt_this) {\n    var serializersNS, nodeFactory;\n    return function (node, value, objectStack) {\n        if (serializersNS === undefined) {\n            serializersNS = {};\n            var serializers = {};\n            serializers[node.localName] = nodeWriter;\n            serializersNS[node.namespaceURI] = serializers;\n            nodeFactory = makeSimpleNodeFactory(node.localName);\n        }\n        serialize(serializersNS, nodeFactory, value, objectStack);\n    };\n}\n/**\n * Create a node factory which can use the `opt_keys` passed to\n * {@link module:ol/xml.serialize} or {@link module:ol/xml.pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string} [opt_nodeName] Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string} [opt_namespaceURI] Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(opt_nodeName, opt_namespaceURI) {\n    var fixedNodeName = opt_nodeName;\n    return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string} [opt_nodeName] Node name.\n     * @return {Node} Node.\n     */\n    function (value, objectStack, opt_nodeName) {\n        var context = /** @type {NodeStackItem} */ (objectStack[objectStack.length - 1]);\n        var node = context.node;\n        var nodeName = fixedNodeName;\n        if (nodeName === undefined) {\n            nodeName = opt_nodeName;\n        }\n        var namespaceURI = opt_namespaceURI !== undefined ? opt_namespaceURI : node.namespaceURI;\n        return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    });\n}\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport var OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n/**\n * Create an array of `values` to be used with {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `opt_key` argument.\n * @param {Object<string, *>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<*>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n */\nexport function makeSequence(object, orderedKeys) {\n    var length = orderedKeys.length;\n    var sequence = new Array(length);\n    for (var i = 0; i < length; ++i) {\n        sequence[i] = object[orderedKeys[i]];\n    }\n    return sequence;\n}\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>} [opt_structureNS] Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, opt_structureNS) {\n    /**\n     * @type {Object<string, T>}\n     */\n    var structureNS = opt_structureNS !== undefined ? opt_structureNS : {};\n    var i, ii;\n    for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n        structureNS[namespaceURIs[i]] = structure;\n    }\n    return structureNS;\n}\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [opt_this] The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, opt_this) {\n    var n;\n    for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n        var parsers = parsersNS[n.namespaceURI];\n        if (parsers !== undefined) {\n            var parser = parsers[n.localName];\n            if (parser !== undefined) {\n                parser.call(opt_this, n, objectStack);\n            }\n        }\n    }\n}\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [opt_this] The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(object, parsersNS, node, objectStack, opt_this) {\n    objectStack.push(object);\n    parseNode(parsersNS, node, objectStack, opt_this);\n    return /** @type {T} */ (objectStack.pop());\n}\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [opt_keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T} [opt_this] The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n    var length = (opt_keys !== undefined ? opt_keys : values).length;\n    var value, node;\n    for (var i = 0; i < length; ++i) {\n        value = values[i];\n        if (value !== undefined) {\n            node = nodeFactory.call(opt_this !== undefined ? opt_this : this, value, objectStack, opt_keys !== undefined ? opt_keys[i] : undefined);\n            if (node !== undefined) {\n                serializersNS[node.namespaceURI][node.localName].call(opt_this, node, value, objectStack);\n            }\n        }\n    }\n}\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [opt_keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T} [opt_this] The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(object, serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n    objectStack.push(object);\n    serialize(serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this);\n    return /** @type {O|undefined} */ (objectStack.pop());\n}\nvar xmlSerializer_ = undefined;\n/**\n * Register a XMLSerializer. Can be used  to inject a XMLSerializer\n * where there is no globally available implementation.\n *\n * @param {XMLSerializer} xmlSerializer A XMLSerializer.\n * @api\n */\nexport function registerXMLSerializer(xmlSerializer) {\n    xmlSerializer_ = xmlSerializer;\n}\n/**\n * @return {XMLSerializer} The XMLSerializer.\n */\nexport function getXMLSerializer() {\n    if (xmlSerializer_ === undefined && typeof XMLSerializer !== 'undefined') {\n        xmlSerializer_ = new XMLSerializer();\n    }\n    return xmlSerializer_;\n}\nvar document_ = undefined;\n/**\n * Register a Document to use when creating nodes for XML serializations. Can be used\n * to inject a Document where there is no globally available implementation.\n *\n * @param {Document} document A Document.\n * @api\n */\nexport function registerDocument(document) {\n    document_ = document;\n}\n/**\n * Get a document that should be used when creating nodes for XML serializations.\n * @return {Document} The document.\n */\nexport function getDocument() {\n    if (document_ === undefined && typeof document !== 'undefined') {\n        document_ = document.implementation.createDocument('', '', null);\n    }\n    return document_;\n}\n//# sourceMappingURL=xml.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\nimport { extend } from '../array.js';\nimport { forEach as forEachSegment } from './flat/segments.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { interpolatePoint, lineStringCoordinateAtM } from './flat/interpolate.js';\nimport { intersectsLineString } from './flat/intersectsextent.js';\nimport { lineStringLength } from './flat/length.js';\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nvar LineString = /** @class */ (function (_super) {\n    __extends(LineString, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     */\n    function LineString(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatMidpoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatMidpointRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed coordinate to the coordinates of the linestring.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @api\n     */\n    LineString.prototype.appendCoordinate = function (coordinate) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = coordinate.slice();\n        }\n        else {\n            extend(this.flatCoordinates, coordinate);\n        }\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LineString} Clone.\n     * @api\n     */\n    LineString.prototype.clone = function () {\n        var lineString = new LineString(this.flatCoordinates.slice(), this.layout);\n        lineString.applyProperties(this);\n        return lineString;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    LineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Iterate over each segment, calling the provided callback.\n     * If the callback returns a truthy value the function returns that\n     * value immediately. Otherwise the function returns `false`.\n     *\n     * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n     *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n     * @return {T|boolean} Value.\n     * @template T,S\n     * @api\n     */\n    LineString.prototype.forEachSegment = function (callback) {\n        return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n    };\n    /**\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\n     * such coordinate exists.\n     *\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n     * M will return the first coordinate and Ms greater than the last M will\n     * return the last coordinate.\n     *\n     * @param {number} m M.\n     * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n     * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n     * @api\n     */\n    LineString.prototype.getCoordinateAtM = function (m, opt_extrapolate) {\n        if (this.layout != GeometryLayout.XYM &&\n            this.layout != GeometryLayout.XYZM) {\n            return null;\n        }\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n        return lineStringCoordinateAtM(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, m, extrapolate);\n    };\n    /**\n     * Return the coordinates of the linestring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @api\n     */\n    LineString.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinate at the provided fraction along the linestring.\n     * The `fraction` is a number between 0 and 1, where 0 is the start of the\n     * linestring and 1 is the end.\n     * @param {number} fraction Fraction.\n     * @param {import(\"../coordinate.js\").Coordinate} [opt_dest] Optional coordinate whose values will\n     *     be modified. If not provided, a new coordinate will be returned.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n     * @api\n     */\n    LineString.prototype.getCoordinateAt = function (fraction, opt_dest) {\n        return interpolatePoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, fraction, opt_dest, this.stride);\n    };\n    /**\n     * Return the length of the linestring on projected plane.\n     * @return {number} Length (on projected plane).\n     * @api\n     */\n    LineString.prototype.getLength = function () {\n        return lineStringLength(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat midpoint.\n     */\n    LineString.prototype.getFlatMidpoint = function () {\n        if (this.flatMidpointRevision_ != this.getRevision()) {\n            this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n            this.flatMidpointRevision_ = this.getRevision();\n        }\n        return this.flatMidpoint_;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {LineString} Simplified LineString.\n     * @protected\n     */\n    LineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./Geometry.js\").Type} Geometry type.\n     * @api\n     */\n    LineString.prototype.getType = function () {\n        return 'LineString';\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    LineString.prototype.intersectsExtent = function (extent) {\n        return intersectsLineString(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the linestring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n     * @api\n     */\n    LineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LineString;\n}(SimpleGeometry));\nexport default LineString;\n//# sourceMappingURL=LineString.js.map"],"sourceRoot":""}