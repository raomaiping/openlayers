{"version":3,"sources":["webpack:///./src/hooks/updateMapSize.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/source/Cluster.js","webpack:///./src/views/map-marker/add-cluster-labels/clusters.js","webpack:///./src/views/map-marker/add-cluster-labels/index.vue","webpack:///./src/views/map-marker/add-cluster-labels/index.vue?d640","webpack:///./src/views/map-marker/add-cluster-labels/index.vue?0f8a","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/style/Text.js","webpack:///./node_modules/.pnpm/ol@6.15.1/node_modules/ol/control/FullScreen.js"],"names":["map","targetNode","document","querySelector","observer","MutationObserver","mutationsList","mutation","type","attributeName","i","length","updateSize","observe","attributes","childList","subtree","onBeforeUnmount","disconnect","extendStatics","__extends","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","this","constructor","create","_super","Cluster","options","_this","attributions","wrapX","resolution","undefined","distance","minDistance","interpolationRatio","features","geometryFunction","feature","geometry","getGeometry","getType","createCustomCluster_","createCluster","source","boundRefresh_","refresh","bind","updateDistance","setSource","clear","opt_fast","getDistance","getSource","loadFeatures","extent","projection","setDistance","setMinDistance","getMinDistance","removeEventListener","EventType","CHANGE","addEventListener","cluster","addFeatures","ratio","Math","min","changed","mapDistance","getFeatures","clustered","ii","coordinates","getCoordinates","neighbors","getFeaturesInExtent","filter","neighbor","uid","push","centroid","geometry_1","splice","searchCenter","Point","Feature","Vector","e","random","clusterSource","VectorSource","styleCache","clusters","VectorLayer","style","size","get","Style","image","Circle","radius","stroke","Stroke","color","fill","Fill","text","Text","toString","removeClusterLabels","removeLayer","raster","TileLayer","XYZ","ATTRIBUTIONS","url","MAPURL","maxZoom","handleAdd","addLayer","addClusterLabels","handleDelete","onMounted","Map","target","layers","view","View","center","minZoom","zoom","controls","defaults","extend","FullScreen","updateMapSize","__exports__","opt_options","font_","font","rotation_","rotation","rotateWithView_","rotateWithView","scale_","scale","scaleArray_","text_","textAlign_","textAlign","justify_","justify","textBaseline_","textBaseline","fill_","maxAngle_","maxAngle","PI","placement_","placement","POINT","overflow_","overflow","stroke_","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","clone","getScale","getFont","getPlacement","getMaxAngle","getOverflow","getRotation","getRotateWithView","isArray","slice","getText","getTextAlign","getJustify","getTextBaseline","getFill","getStroke","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","getScaleArray","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRotateWithView","setFill","setRotation","setScale","setStroke","setText","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","events","FullScreenEventType","element","createElement","on","once","un","keys_","keys","source_","isInFullscreen_","boundHandleMapTargetChange_","handleMapTargetChange_","cssClassName_","className","documentListeners_","activeClassName_","activeClassName","split","inactiveClassName_","inactiveClassName","label","labelNode_","createTextNode","labelActive","labelActiveNode_","tipLabel","button_","title","setAttribute","appendChild","CLICK","handleClick_","setClassName_","concat","event","preventDefault","handleFullScreen_","getMap","doc","getOwnerDocument","isFullScreenSupported","isFullScreen","exitFullscreen","exitFullScreen","getElementById","getTargetElement","requestFullScreen","requestFullScreenWithKeys","handleFullScreenChange_","wasInFullscreen","dispatchEvent","fullscreen","_a","_b","_c","_d","classList","remove","apply","add","setMap","oldMap","removeChangeListener","TARGET","addChangeListener","listeners","body","requestFullscreen","fullscreenEnabled","fullscreenElement"],"mappings":"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","file":"js/chunk-2c02bbb8.c0ab351b.js","sourcesContent":["import { onBeforeUnmount } from \"vue\";\n\n/**\n * 监听侧边栏，侧边栏发生变化更新地图\n * @param {ol.Map} map 地图实例\n */\nexport default (...map) => {\n  // 选择需要观察变动的节点\n  const targetNode = document.querySelector(\n    \".el-aside .menu .el-scrollbar__view\"\n  );\n  // 观察器的配置（需要观察什么变动）\n  const config = { attributes: true, childList: true, subtree: true };\n  // 当观察到变动时执行的回调函数\n  const callback = function (mutationsList) {\n    // Use traditional 'for loops' for IE 11\n    for (let mutation of mutationsList) {\n      if (mutation.type === \"childList\") {\n        // console.log(\"已添加或删除子节点。\");\n      } else if (\n        mutation.type === \"attributes\" &&\n        mutation.attributeName === \"style\"\n      ) {\n        for (let i = 0; i < map.length; i++) {\n          map[i].updateSize();\n        }\n\n        // console.log(\"这个 \" + mutation.attributeName + \" 属性被修改。\");\n      }\n    }\n  };\n  // 创建一个观察器实例并传入回调函数\n  const observer = new MutationObserver(callback);\n\n  // 以上述配置开始观察目标节点\n  observer.observe(targetNode, config);\n\n  //卸载前\n  onBeforeUnmount(() => {\n    observer.disconnect();\n  });\n};\n","/**\n * @module ol/source/Cluster\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport Point from '../geom/Point.js';\nimport VectorSource from './Vector.js';\nimport { add as addCoordinate, scale as scaleCoordinate } from '../coordinate.js';\nimport { assert } from '../asserts.js';\nimport { buffer, createEmpty, createOrUpdateFromCoordinate, getCenter, } from '../extent.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [distance=20] Distance in pixels within which features will\n * be clustered together.\n * @property {number} [minDistance=0] Minimum distance in pixels between clusters.\n * Will be capped at the configured distance.\n * By default no minimum distance is guaranteed. This config can be used to avoid\n * overlapping icons. As a tradoff, the cluster feature's position will no longer be\n * the center of all its features.\n * @property {function(Feature):Point} [geometryFunction]\n * Function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Point~Point} as cluster calculation point for the feature. When a\n * feature should not be considered for clustering, the function should return\n * `null`. The default, which works when the underlying source contains point\n * features only, is\n * ```js\n * function(feature) {\n *   return feature.getGeometry();\n * }\n * ```\n * See {@link module:ol/geom/Polygon~Polygon#getInteriorPoint} for a way to get a cluster\n * calculation point for polygons.\n * @property {function(Point, Array<Feature>):Feature} [createCluster]\n * Function that takes the cluster's center {@link module:ol/geom/Point~Point} and an array\n * of {@link module:ol/Feature~Feature} included in this cluster. Must return a\n * {@link module:ol/Feature~Feature} that will be used to render. Default implementation is:\n * ```js\n * function(point, features) {\n *   return new Feature({\n *     geometry: point,\n *     features: features\n *   });\n * }\n * ```\n * @property {VectorSource} [source=null] Source.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n/**\n * @classdesc\n * Layer source to cluster vector data. Works out of the box with point\n * geometries. For other geometry types, or if not all geometries should be\n * considered for clustering, a custom `geometryFunction` can be defined.\n *\n * If the instance is disposed without also disposing the underlying\n * source `setSource(null)` has to be called to remove the listener reference\n * from the wrapped source.\n * @api\n */\nvar Cluster = /** @class */ (function (_super) {\n    __extends(Cluster, _super);\n    /**\n     * @param {Options} options Cluster options.\n     */\n    function Cluster(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            wrapX: options.wrapX,\n        }) || this;\n        /**\n         * @type {number|undefined}\n         * @protected\n         */\n        _this.resolution = undefined;\n        /**\n         * @type {number}\n         * @protected\n         */\n        _this.distance = options.distance !== undefined ? options.distance : 20;\n        /**\n         * @type {number}\n         * @protected\n         */\n        _this.minDistance = options.minDistance || 0;\n        /**\n         * @type {number}\n         * @protected\n         */\n        _this.interpolationRatio = 0;\n        /**\n         * @type {Array<Feature>}\n         * @protected\n         */\n        _this.features = [];\n        /**\n         * @param {Feature} feature Feature.\n         * @return {Point} Cluster calculation point.\n         * @protected\n         */\n        _this.geometryFunction =\n            options.geometryFunction ||\n                function (feature) {\n                    var geometry = /** @type {Point} */ (feature.getGeometry());\n                    assert(geometry.getType() == 'Point', 10); // The default `geometryFunction` can only handle `Point` geometries\n                    return geometry;\n                };\n        /**\n         * @type {function(Point, Array<Feature>):Feature}\n         * @private\n         */\n        _this.createCustomCluster_ = options.createCluster;\n        /**\n         * @type {VectorSource|null}\n         * @protected\n         */\n        _this.source = null;\n        /**\n         * @private\n         */\n        _this.boundRefresh_ = _this.refresh.bind(_this);\n        _this.updateDistance(_this.distance, _this.minDistance);\n        _this.setSource(options.source || null);\n        return _this;\n    }\n    /**\n     * Remove all features from the source.\n     * @param {boolean} [opt_fast] Skip dispatching of {@link module:ol/source/VectorEventType~VectorEventType#removefeature} events.\n     * @api\n     */\n    Cluster.prototype.clear = function (opt_fast) {\n        this.features.length = 0;\n        _super.prototype.clear.call(this, opt_fast);\n    };\n    /**\n     * Get the distance in pixels between clusters.\n     * @return {number} Distance.\n     * @api\n     */\n    Cluster.prototype.getDistance = function () {\n        return this.distance;\n    };\n    /**\n     * Get a reference to the wrapped source.\n     * @return {VectorSource|null} Source.\n     * @api\n     */\n    Cluster.prototype.getSource = function () {\n        return this.source;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    Cluster.prototype.loadFeatures = function (extent, resolution, projection) {\n        this.source.loadFeatures(extent, resolution, projection);\n        if (resolution !== this.resolution) {\n            this.resolution = resolution;\n            this.refresh();\n        }\n    };\n    /**\n     * Set the distance within which features will be clusterd together.\n     * @param {number} distance The distance in pixels.\n     * @api\n     */\n    Cluster.prototype.setDistance = function (distance) {\n        this.updateDistance(distance, this.minDistance);\n    };\n    /**\n     * Set the minimum distance between clusters. Will be capped at the\n     * configured distance.\n     * @param {number} minDistance The minimum distance in pixels.\n     * @api\n     */\n    Cluster.prototype.setMinDistance = function (minDistance) {\n        this.updateDistance(this.distance, minDistance);\n    };\n    /**\n     * The configured minimum distance between clusters.\n     * @return {number} The minimum distance in pixels.\n     * @api\n     */\n    Cluster.prototype.getMinDistance = function () {\n        return this.minDistance;\n    };\n    /**\n     * Replace the wrapped source.\n     * @param {VectorSource|null} source The new source for this instance.\n     * @api\n     */\n    Cluster.prototype.setSource = function (source) {\n        if (this.source) {\n            this.source.removeEventListener(EventType.CHANGE, this.boundRefresh_);\n        }\n        this.source = source;\n        if (source) {\n            source.addEventListener(EventType.CHANGE, this.boundRefresh_);\n        }\n        this.refresh();\n    };\n    /**\n     * Handle the source changing.\n     */\n    Cluster.prototype.refresh = function () {\n        this.clear();\n        this.cluster();\n        this.addFeatures(this.features);\n    };\n    /**\n     * Update the distances and refresh the source if necessary.\n     * @param {number} distance The new distance.\n     * @param {number} minDistance The new minimum distance.\n     */\n    Cluster.prototype.updateDistance = function (distance, minDistance) {\n        var ratio = distance === 0 ? 0 : Math.min(minDistance, distance) / distance;\n        var changed = distance !== this.distance || this.interpolationRatio !== ratio;\n        this.distance = distance;\n        this.minDistance = minDistance;\n        this.interpolationRatio = ratio;\n        if (changed) {\n            this.refresh();\n        }\n    };\n    /**\n     * @protected\n     */\n    Cluster.prototype.cluster = function () {\n        if (this.resolution === undefined || !this.source) {\n            return;\n        }\n        var extent = createEmpty();\n        var mapDistance = this.distance * this.resolution;\n        var features = this.source.getFeatures();\n        /** @type {Object<string, true>} */\n        var clustered = {};\n        for (var i = 0, ii = features.length; i < ii; i++) {\n            var feature = features[i];\n            if (!(getUid(feature) in clustered)) {\n                var geometry = this.geometryFunction(feature);\n                if (geometry) {\n                    var coordinates = geometry.getCoordinates();\n                    createOrUpdateFromCoordinate(coordinates, extent);\n                    buffer(extent, mapDistance, extent);\n                    var neighbors = this.source\n                        .getFeaturesInExtent(extent)\n                        .filter(function (neighbor) {\n                        var uid = getUid(neighbor);\n                        if (uid in clustered) {\n                            return false;\n                        }\n                        clustered[uid] = true;\n                        return true;\n                    });\n                    this.features.push(this.createCluster(neighbors, extent));\n                }\n            }\n        }\n    };\n    /**\n     * @param {Array<Feature>} features Features\n     * @param {import(\"../extent.js\").Extent} extent The searched extent for these features.\n     * @return {Feature} The cluster feature.\n     * @protected\n     */\n    Cluster.prototype.createCluster = function (features, extent) {\n        var centroid = [0, 0];\n        for (var i = features.length - 1; i >= 0; --i) {\n            var geometry_1 = this.geometryFunction(features[i]);\n            if (geometry_1) {\n                addCoordinate(centroid, geometry_1.getCoordinates());\n            }\n            else {\n                features.splice(i, 1);\n            }\n        }\n        scaleCoordinate(centroid, 1 / features.length);\n        var searchCenter = getCenter(extent);\n        var ratio = this.interpolationRatio;\n        var geometry = new Point([\n            centroid[0] * (1 - ratio) + searchCenter[0] * ratio,\n            centroid[1] * (1 - ratio) + searchCenter[1] * ratio,\n        ]);\n        if (this.createCustomCluster_) {\n            return this.createCustomCluster_(geometry, features);\n        }\n        else {\n            return new Feature({\n                geometry: geometry,\n                features: features,\n            });\n        }\n    };\n    return Cluster;\n}(VectorSource));\nexport default Cluster;\n//# sourceMappingURL=Cluster.js.map","import { Feature } from \"ol\";\nimport { Point } from \"ol/geom\";\nimport { Vector as VectorSource, Cluster } from \"ol/source\";\nimport { Vector as VectorLayer } from \"ol/layer\";\nimport { Style, Circle, Stroke, Fill, Text } from \"ol/style\";\n\n//此示例创建10000个要素\nconst count = 10000;\nconst features = new Array(count);\nconst e = 4500000;\nfor (let i = 0; i < count; ++i) {\n  const coordinates = [2 * e * Math.random() - e, 2 * e * Math.random() - e];\n  features[i] = new Feature(new Point(coordinates));\n}\n//矢量要素数据源\nconst source = new VectorSource({\n  features: features,\n});\n//聚合标注数据源\nconst clusterSource = new Cluster({\n  distance: 40,\n  source: source,\n});\n//加载聚合标注的矢量图层\nconst styleCache = {};\nexport const clusters = new VectorLayer({\n  source: clusterSource,\n  style: (feature) => {\n    const size = feature.get(\"features\").length;\n    let style = styleCache[size];\n    if (!style) {\n      style = [\n        new Style({\n          image: new Circle({\n            radius: 10,\n            stroke: new Stroke({\n              color: \"#fff\",\n            }),\n            fill: new Fill({\n              color: \"#3399CC\",\n            }),\n          }),\n          text: new Text({\n            text: size.toString(),\n            fill: new Fill({\n              color: \"#fff\",\n            }),\n          }),\n        }),\n      ];\n      styleCache[size] = style;\n    }\n    return style;\n  },\n});\n\n/**\n * 添加聚合要素\n * @param {ol.Map} map 地图实例\n */\nexport const addClusterLabels = (map) => {\n  //当前聚合标注数据源中的要素\n  const currentFeatrues = clusterSource.getSource().getFeatures();\n  //如果聚合标注数据源中没有要素，则重新添加要素\n  if (currentFeatrues.length == 0) {\n    clusterSource.getSource().addFeatures(features);\n    clusters.setSource(clusterSource);\n    map.addLayer(clusters);\n  }\n};\n\n/**\n * 移除聚合要素\n * @param {ol.Map} map 地图实例\n */\nexport const removeClusterLabels = (map) => {\n  //当前聚合标注数据源中的要素\n  const currentFeatrues = clusterSource.getSource().getFeatures();\n  //如果聚合标注数据源中没有要素，则重新添加要素\n  if (currentFeatrues.length != 0) {\n    //移除聚合标注数据源中的所有要素\n    clusterSource.getSource().clear();\n    //移除标注图层\n    map.removeLayer(clusters);\n  }\n};\n","<template>\n  <div id=\"top\">\n    <el-button type=\"primary\" @click=\"handleAdd\">添加聚合标注</el-button>\n    <el-button type=\"danger\" @click=\"handleDelete\">移除聚合标注</el-button>\n  </div>\n  <div id=\"map\"></div>\n</template>\n\n<script setup>\n  import \"ol/ol.css\";\n  import { onMounted } from \"vue\";\n  import { Map, View } from \"ol\";\n  import { Tile as TileLayer } from \"ol/layer\";\n  import { defaults, FullScreen } from \"ol/control\";\n  import { XYZ } from \"ol/source\";\n  import { ATTRIBUTIONS, MAPURL } from \"@/constants\";\n  import updateMapSize from \"@/hooks/updateMapSize\";\n  import { addClusterLabels, removeClusterLabels, clusters } from \"./clusters\";\n  let map = null;\n  const raster = new TileLayer({\n    source: new XYZ({\n      attributions: ATTRIBUTIONS,\n      url: MAPURL,\n      maxZoom: 20,\n    }),\n  });\n  const initMap = () => {\n    map = new Map({\n      //初始化map\n      target: \"map\",\n      //地图容器中加载的图层\n      layers: [\n        //加载瓦片图层数据\n        raster,\n        clusters, // 聚合标注图层\n      ],\n      view: new View({\n        center: [0, 0],\n        minZoom: 2,\n        zoom: 2,\n      }),\n      //加载控件到地图容器中\n      controls: defaults().extend([\n        new FullScreen(), //加载全屏显示控件（目前支持非IE内核浏览器）\n      ]),\n    });\n    // 侧边栏变化更新地图\n    updateMapSize(map);\n  };\n  // 添加聚合要素\n  const handleAdd = () => {\n    addClusterLabels(map);\n  };\n\n  // 移除聚合要素\n  const handleDelete = () => {\n    removeClusterLabels(map);\n  };\n  onMounted(() => {\n    initMap();\n    removeClusterLabels(map);\n  });\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n  #map {\n    position: absolute;\n    top: 50px;\n    bottom: 0;\n    left: 0;\n    right: 0;\n  }\n  #top {\n    text-align: center;\n    height: 50px;\n    line-height: 50px;\n  }\n</style>\n","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=30ff6604&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/openlayers/openlayers/node_modules/.pnpm/vue-loader@16.8.3_@vue+compiler-sfc@3.4.6_vue@3.4.6_webpack@4.47.0/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-30ff6604\"]])\n\nexport default __exports__","export * from \"-!../../../../node_modules/.pnpm/mini-css-extract-plugin@0.9.0_webpack@4.47.0/node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../../node_modules/.pnpm/css-loader@3.6.0_webpack@4.47.0/node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/.pnpm/vue-loader@16.8.3_@vue+compiler-sfc@3.4.6_vue@3.4.6_webpack@4.47.0/node_modules/vue-loader/dist/stylePostLoader.js!../../../../node_modules/.pnpm/postcss-loader@3.0.0/node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/.pnpm/cache-loader@4.1.0_webpack@4.47.0/node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/.pnpm/vue-loader@16.8.3_@vue+compiler-sfc@3.4.6_vue@3.4.6_webpack@4.47.0/node_modules/vue-loader/dist/index.js??ref--1-1!./index.vue?vue&type=style&index=0&id=30ff6604&scoped=true&lang=css\"","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\nimport { toSize } from '../size.js';\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nvar DEFAULT_FILL_COLOR = '#333';\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nvar Text = /** @class */ (function () {\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function Text(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.font_ = options.font;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size|undefined}\n         */\n        this.scale_ = options.scale;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n        /**\n         * @private\n         * @type {string|Array<string>|undefined}\n         */\n        this.text_ = options.text;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textAlign_ = options.textAlign;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.justify_ = options.justify;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textBaseline_ = options.textBaseline;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ =\n            options.fill !== undefined\n                ? options.fill\n                : new Fill({ color: DEFAULT_FILL_COLOR });\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxAngle_ =\n            options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n        /**\n         * @private\n         * @type {import(\"./TextPlacement.js\").default|string}\n         */\n        this.placement_ =\n            options.placement !== undefined ? options.placement : TextPlacement.POINT;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.overflow_ = !!options.overflow;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.backgroundFill_ = options.backgroundFill\n            ? options.backgroundFill\n            : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.backgroundStroke_ = options.backgroundStroke\n            ? options.backgroundStroke\n            : null;\n        /**\n         * @private\n         * @type {Array<number>|null}\n         */\n        this.padding_ = options.padding === undefined ? null : options.padding;\n    }\n    /**\n     * Clones the style.\n     * @return {Text} The cloned style.\n     * @api\n     */\n    Text.prototype.clone = function () {\n        var scale = this.getScale();\n        return new Text({\n            font: this.getFont(),\n            placement: this.getPlacement(),\n            maxAngle: this.getMaxAngle(),\n            overflow: this.getOverflow(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            text: this.getText(),\n            textAlign: this.getTextAlign(),\n            justify: this.getJustify(),\n            textBaseline: this.getTextBaseline(),\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            offsetX: this.getOffsetX(),\n            offsetY: this.getOffsetY(),\n            backgroundFill: this.getBackgroundFill()\n                ? this.getBackgroundFill().clone()\n                : undefined,\n            backgroundStroke: this.getBackgroundStroke()\n                ? this.getBackgroundStroke().clone()\n                : undefined,\n            padding: this.getPadding() || undefined,\n        });\n    };\n    /**\n     * Get the `overflow` configuration.\n     * @return {boolean} Let text overflow the length of the path they follow.\n     * @api\n     */\n    Text.prototype.getOverflow = function () {\n        return this.overflow_;\n    };\n    /**\n     * Get the font name.\n     * @return {string|undefined} Font.\n     * @api\n     */\n    Text.prototype.getFont = function () {\n        return this.font_;\n    };\n    /**\n     * Get the maximum angle between adjacent characters.\n     * @return {number} Angle in radians.\n     * @api\n     */\n    Text.prototype.getMaxAngle = function () {\n        return this.maxAngle_;\n    };\n    /**\n     * Get the label placement.\n     * @return {import(\"./TextPlacement.js\").default|string} Text placement.\n     * @api\n     */\n    Text.prototype.getPlacement = function () {\n        return this.placement_;\n    };\n    /**\n     * Get the x-offset for the text.\n     * @return {number} Horizontal text offset.\n     * @api\n     */\n    Text.prototype.getOffsetX = function () {\n        return this.offsetX_;\n    };\n    /**\n     * Get the y-offset for the text.\n     * @return {number} Vertical text offset.\n     * @api\n     */\n    Text.prototype.getOffsetY = function () {\n        return this.offsetY_;\n    };\n    /**\n     * Get the fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Determine whether the text rotates with the map.\n     * @return {boolean|undefined} Rotate with map.\n     * @api\n     */\n    Text.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the text rotation.\n     * @return {number|undefined} Rotation.\n     * @api\n     */\n    Text.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the text scale.\n     * @return {number|import(\"../size.js\").Size|undefined} Scale.\n     * @api\n     */\n    Text.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the symbolizer scale array.\n     * @return {import(\"../size.js\").Size} Scale array.\n     */\n    Text.prototype.getScaleArray = function () {\n        return this.scaleArray_;\n    };\n    /**\n     * Get the stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Get the text to be rendered.\n     * @return {string|Array<string>|undefined} Text.\n     * @api\n     */\n    Text.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Get the text alignment.\n     * @return {string|undefined} Text align.\n     * @api\n     */\n    Text.prototype.getTextAlign = function () {\n        return this.textAlign_;\n    };\n    /**\n     * Get the justification.\n     * @return {string|undefined} Justification.\n     * @api\n     */\n    Text.prototype.getJustify = function () {\n        return this.justify_;\n    };\n    /**\n     * Get the text baseline.\n     * @return {string|undefined} Text baseline.\n     * @api\n     */\n    Text.prototype.getTextBaseline = function () {\n        return this.textBaseline_;\n    };\n    /**\n     * Get the background fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getBackgroundFill = function () {\n        return this.backgroundFill_;\n    };\n    /**\n     * Get the background stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getBackgroundStroke = function () {\n        return this.backgroundStroke_;\n    };\n    /**\n     * Get the padding for the text.\n     * @return {Array<number>|null} Padding.\n     * @api\n     */\n    Text.prototype.getPadding = function () {\n        return this.padding_;\n    };\n    /**\n     * Set the `overflow` property.\n     *\n     * @param {boolean} overflow Let text overflow the path that it follows.\n     * @api\n     */\n    Text.prototype.setOverflow = function (overflow) {\n        this.overflow_ = overflow;\n    };\n    /**\n     * Set the font.\n     *\n     * @param {string|undefined} font Font.\n     * @api\n     */\n    Text.prototype.setFont = function (font) {\n        this.font_ = font;\n    };\n    /**\n     * Set the maximum angle between adjacent characters.\n     *\n     * @param {number} maxAngle Angle in radians.\n     * @api\n     */\n    Text.prototype.setMaxAngle = function (maxAngle) {\n        this.maxAngle_ = maxAngle;\n    };\n    /**\n     * Set the x offset.\n     *\n     * @param {number} offsetX Horizontal text offset.\n     * @api\n     */\n    Text.prototype.setOffsetX = function (offsetX) {\n        this.offsetX_ = offsetX;\n    };\n    /**\n     * Set the y offset.\n     *\n     * @param {number} offsetY Vertical text offset.\n     * @api\n     */\n    Text.prototype.setOffsetY = function (offsetY) {\n        this.offsetY_ = offsetY;\n    };\n    /**\n     * Set the text placement.\n     *\n     * @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n     * @api\n     */\n    Text.prototype.setPlacement = function (placement) {\n        this.placement_ = placement;\n    };\n    /**\n     * Set whether to rotate the text with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    Text.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number|undefined} rotation Rotation.\n     * @api\n     */\n    Text.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n     * @api\n     */\n    Text.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n        this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n    };\n    /**\n     * Set the stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Set the text.\n     *\n     * @param {string|Array<string>|undefined} text Text.\n     * @api\n     */\n    Text.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Set the text alignment.\n     *\n     * @param {string|undefined} textAlign Text align.\n     * @api\n     */\n    Text.prototype.setTextAlign = function (textAlign) {\n        this.textAlign_ = textAlign;\n    };\n    /**\n     * Set the justification.\n     *\n     * @param {string|undefined} justify Justification.\n     * @api\n     */\n    Text.prototype.setJustify = function (justify) {\n        this.justify_ = justify;\n    };\n    /**\n     * Set the text baseline.\n     *\n     * @param {string|undefined} textBaseline Text baseline.\n     * @api\n     */\n    Text.prototype.setTextBaseline = function (textBaseline) {\n        this.textBaseline_ = textBaseline;\n    };\n    /**\n     * Set the background fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setBackgroundFill = function (fill) {\n        this.backgroundFill_ = fill;\n    };\n    /**\n     * Set the background stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setBackgroundStroke = function (stroke) {\n        this.backgroundStroke_ = stroke;\n    };\n    /**\n     * Set the padding (`[top, right, bottom, left]`).\n     *\n     * @param {Array<number>|null} padding Padding.\n     * @api\n     */\n    Text.prototype.setPadding = function (padding) {\n        this.padding_ = padding;\n    };\n    return Text;\n}());\nexport default Text;\n//# sourceMappingURL=Text.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/FullScreen\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport MapProperty from '../MapProperty.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED } from '../css.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { replaceNode } from '../dom.js';\nvar events = [\n    'fullscreenchange',\n    'webkitfullscreenchange',\n    'MSFullscreenChange',\n];\n/**\n * @enum {string}\n */\nvar FullScreenEventType = {\n    /**\n     * Triggered after the map entered fullscreen.\n     * @event FullScreenEventType#enterfullscreen\n     * @api\n     */\n    ENTERFULLSCREEN: 'enterfullscreen',\n    /**\n     * Triggered after the map leave fullscreen.\n     * @event FullScreenEventType#leavefullscreen\n     * @api\n     */\n    LEAVEFULLSCREEN: 'leavefullscreen',\n};\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen', import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen'|import(\"../ObjectEventType\").Types, Return>} FullScreenOnSignature\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text|HTMLElement} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text|HTMLElement} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [activeClassName=className + '-true'] CSS class name for the button\n * when full-screen is active.\n * @property {string} [inactiveClassName=className + '-false'] CSS class name for the button\n * when full-screen is inactive.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](https://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @fires FullScreenEventType#enterfullscreen\n * @fires FullScreenEventType#leavefullscreen\n * @api\n */\nvar FullScreen = /** @class */ (function (_super) {\n    __extends(FullScreen, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function FullScreen(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target,\n        }) || this;\n        /***\n         * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {FullScreenOnSignature<void>}\n         */\n        _this.un;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.keys_ = options.keys !== undefined ? options.keys : false;\n        /**\n         * @private\n         * @type {HTMLElement|string|undefined}\n         */\n        _this.source_ = options.source;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.isInFullscreen_ = false;\n        /**\n         * @private\n         */\n        _this.boundHandleMapTargetChange_ = _this.handleMapTargetChange_.bind(_this);\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.cssClassName_ =\n            options.className !== undefined ? options.className : 'ol-full-screen';\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.documentListeners_ = [];\n        /**\n         * @private\n         * @type {Array<string>}\n         */\n        _this.activeClassName_ =\n            options.activeClassName !== undefined\n                ? options.activeClassName.split(' ')\n                : [_this.cssClassName_ + '-true'];\n        /**\n         * @private\n         * @type {Array<string>}\n         */\n        _this.inactiveClassName_ =\n            options.inactiveClassName !== undefined\n                ? options.inactiveClassName.split(' ')\n                : [_this.cssClassName_ + '-false'];\n        var label = options.label !== undefined ? options.label : '\\u2922';\n        /**\n         * @private\n         * @type {Text|HTMLElement}\n         */\n        _this.labelNode_ =\n            typeof label === 'string' ? document.createTextNode(label) : label;\n        var labelActive = options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n        /**\n         * @private\n         * @type {Text|HTMLElement}\n         */\n        _this.labelActiveNode_ =\n            typeof labelActive === 'string'\n                ? document.createTextNode(labelActive)\n                : labelActive;\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.button_ = document.createElement('button');\n        _this.button_.title = tipLabel;\n        _this.button_.setAttribute('type', 'button');\n        _this.button_.appendChild(_this.labelNode_);\n        _this.button_.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        _this.setClassName_(_this.button_, _this.isInFullscreen_);\n        _this.element.className = \"\".concat(_this.cssClassName_, \" \").concat(CLASS_UNSELECTABLE, \" \").concat(CLASS_CONTROL);\n        _this.element.appendChild(_this.button_);\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    FullScreen.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleFullScreen_();\n    };\n    /**\n     * @private\n     */\n    FullScreen.prototype.handleFullScreen_ = function () {\n        var map = this.getMap();\n        if (!map) {\n            return;\n        }\n        var doc = map.getOwnerDocument();\n        if (!isFullScreenSupported(doc)) {\n            return;\n        }\n        if (isFullScreen(doc)) {\n            exitFullScreen(doc);\n        }\n        else {\n            var element = void 0;\n            if (this.source_) {\n                element =\n                    typeof this.source_ === 'string'\n                        ? doc.getElementById(this.source_)\n                        : this.source_;\n            }\n            else {\n                element = map.getTargetElement();\n            }\n            if (this.keys_) {\n                requestFullScreenWithKeys(element);\n            }\n            else {\n                requestFullScreen(element);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    FullScreen.prototype.handleFullScreenChange_ = function () {\n        var map = this.getMap();\n        if (!map) {\n            return;\n        }\n        var wasInFullscreen = this.isInFullscreen_;\n        this.isInFullscreen_ = isFullScreen(map.getOwnerDocument());\n        if (wasInFullscreen !== this.isInFullscreen_) {\n            this.setClassName_(this.button_, this.isInFullscreen_);\n            if (this.isInFullscreen_) {\n                replaceNode(this.labelActiveNode_, this.labelNode_);\n                this.dispatchEvent(FullScreenEventType.ENTERFULLSCREEN);\n            }\n            else {\n                replaceNode(this.labelNode_, this.labelActiveNode_);\n                this.dispatchEvent(FullScreenEventType.LEAVEFULLSCREEN);\n            }\n            map.updateSize();\n        }\n    };\n    /**\n     * @param {HTMLElement} element Target element\n     * @param {boolean} fullscreen True if fullscreen class name should be active\n     * @private\n     */\n    FullScreen.prototype.setClassName_ = function (element, fullscreen) {\n        var _a, _b, _c, _d;\n        if (fullscreen) {\n            (_a = element.classList).remove.apply(_a, this.inactiveClassName_);\n            (_b = element.classList).add.apply(_b, this.activeClassName_);\n        }\n        else {\n            (_c = element.classList).remove.apply(_c, this.activeClassName_);\n            (_d = element.classList).add.apply(_d, this.inactiveClassName_);\n        }\n    };\n    /**\n     * Remove the control from its current map and attach it to the new map.\n     * Pass `null` to just remove the control from the current map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default|null} map Map.\n     * @api\n     */\n    FullScreen.prototype.setMap = function (map) {\n        var oldMap = this.getMap();\n        if (oldMap) {\n            oldMap.removeChangeListener(MapProperty.TARGET, this.boundHandleMapTargetChange_);\n        }\n        _super.prototype.setMap.call(this, map);\n        this.handleMapTargetChange_();\n        if (map) {\n            map.addChangeListener(MapProperty.TARGET, this.boundHandleMapTargetChange_);\n        }\n    };\n    /**\n     * @private\n     */\n    FullScreen.prototype.handleMapTargetChange_ = function () {\n        var listeners = this.documentListeners_;\n        for (var i = 0, ii = listeners.length; i < ii; ++i) {\n            unlistenByKey(listeners[i]);\n        }\n        listeners.length = 0;\n        var map = this.getMap();\n        if (map) {\n            var doc = map.getOwnerDocument();\n            if (isFullScreenSupported(doc)) {\n                this.element.classList.remove(CLASS_UNSUPPORTED);\n            }\n            else {\n                this.element.classList.add(CLASS_UNSUPPORTED);\n            }\n            for (var i = 0, ii = events.length; i < ii; ++i) {\n                listeners.push(listen(doc, events[i], this.handleFullScreenChange_, this));\n            }\n            this.handleFullScreenChange_();\n        }\n    };\n    return FullScreen;\n}(Control));\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported(doc) {\n    var body = doc.body;\n    return !!(body['webkitRequestFullscreen'] ||\n        (body['msRequestFullscreen'] && doc['msFullscreenEnabled']) ||\n        (body.requestFullscreen && doc.fullscreenEnabled));\n}\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen(doc) {\n    return !!(doc['webkitIsFullScreen'] ||\n        doc['msFullscreenElement'] ||\n        doc.fullscreenElement);\n}\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n    if (element.requestFullscreen) {\n        element.requestFullscreen();\n    }\n    else if (element['msRequestFullscreen']) {\n        element['msRequestFullscreen']();\n    }\n    else if (element['webkitRequestFullscreen']) {\n        element['webkitRequestFullscreen']();\n    }\n}\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n    if (element['webkitRequestFullscreen']) {\n        element['webkitRequestFullscreen']();\n    }\n    else {\n        requestFullScreen(element);\n    }\n}\n/**\n * Exit fullscreen.\n * @param {Document} doc The document to exit fullscren from\n */\nfunction exitFullScreen(doc) {\n    if (doc.exitFullscreen) {\n        doc.exitFullscreen();\n    }\n    else if (doc['msExitFullscreen']) {\n        doc['msExitFullscreen']();\n    }\n    else if (doc['webkitExitFullscreen']) {\n        doc['webkitExitFullscreen']();\n    }\n}\nexport default FullScreen;\n//# sourceMappingURL=FullScreen.js.map"],"sourceRoot":""}